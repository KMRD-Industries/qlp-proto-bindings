// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: comm.proto
// Protobuf C++ Version: 5.28.2

#include "comm.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace comm {

inline constexpr Room::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room::Room(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDefaultTypeInternal() {}
  union {
    Room _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDefaultTypeInternal _Room_default_instance_;

inline constexpr GameState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : connected_players_{},
        _connected_players_cached_byte_size_{0},
        player_id_{0u},
        weapon_id_{0u},
        seed_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameState::GameState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameStateDefaultTypeInternal() {}
  union {
    GameState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameStateDefaultTypeInternal _GameState_default_instance_;

inline constexpr BytePrefix::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bytes_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BytePrefix::BytePrefix(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BytePrefixDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BytePrefixDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BytePrefixDefaultTypeInternal() {}
  union {
    BytePrefix _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BytePrefixDefaultTypeInternal _BytePrefix_default_instance_;

inline constexpr StateUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_{nullptr},
        id_{0u},
        variant_{static_cast< ::comm::StateVariant >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StateUpdate::StateUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StateUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateUpdateDefaultTypeInternal() {}
  union {
    StateUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateUpdateDefaultTypeInternal _StateUpdate_default_instance_;

inline constexpr MovementUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        curr_room_{nullptr},
        entity_id_{0u},
        position_x_{0},
        position_y_{0},
        weapon_pivot_x_{0},
        weapon_pivot_y_{0},
        direction_{0},
        attack_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MovementUpdate::MovementUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovementUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovementUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovementUpdateDefaultTypeInternal() {}
  union {
    MovementUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovementUpdateDefaultTypeInternal _MovementUpdate_default_instance_;
}  // namespace comm
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_comm_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_comm_2eproto = nullptr;
const ::uint32_t
    TableStruct_comm_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.position_x_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.position_y_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.weapon_pivot_x_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.weapon_pivot_y_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.attack_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.curr_room_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::GameState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::GameState, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::comm::GameState, _impl_.weapon_id_),
        PROTOBUF_FIELD_OFFSET(::comm::GameState, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::comm::GameState, _impl_.connected_players_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::Room, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::Room, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::comm::Room, _impl_.y_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::BytePrefix, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::BytePrefix, _impl_.bytes_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.variant_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.room_),
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::comm::MovementUpdate)},
        {24, -1, -1, sizeof(::comm::GameState)},
        {36, -1, -1, sizeof(::comm::Room)},
        {46, -1, -1, sizeof(::comm::BytePrefix)},
        {55, 66, -1, sizeof(::comm::StateUpdate)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::comm::_MovementUpdate_default_instance_._instance,
    &::comm::_GameState_default_instance_._instance,
    &::comm::_Room_default_instance_._instance,
    &::comm::_BytePrefix_default_instance_._instance,
    &::comm::_StateUpdate_default_instance_._instance,
};
const char descriptor_table_protodef_comm_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ncomm.proto\022\004comm\"\275\001\n\016MovementUpdate\022\021\n"
    "\tentity_id\030\001 \001(\r\022\022\n\nposition_x\030\002 \001(\002\022\022\n\n"
    "position_y\030\003 \001(\002\022\026\n\016weapon_pivot_x\030\004 \001(\002"
    "\022\026\n\016weapon_pivot_y\030\005 \001(\002\022\021\n\tdirection\030\006 "
    "\001(\002\022\016\n\006attack\030\007 \001(\010\022\035\n\tcurr_room\030\010 \001(\0132\n"
    ".comm.Room\"Z\n\tGameState\022\021\n\tplayer_id\030\001 \001"
    "(\r\022\021\n\tweapon_id\030\002 \001(\r\022\014\n\004seed\030\003 \001(\003\022\031\n\021c"
    "onnected_players\030\004 \003(\r\"\034\n\004Room\022\t\n\001x\030\001 \001("
    "\005\022\t\n\001y\030\002 \001(\005\"\033\n\nBytePrefix\022\r\n\005bytes\030\001 \001("
    "\r\"X\n\013StateUpdate\022\n\n\002id\030\001 \001(\r\022#\n\007variant\030"
    "\002 \001(\0162\022.comm.StateVariant\022\030\n\004room\030\003 \001(\0132"
    "\n.comm.Room*K\n\014StateVariant\022\010\n\004NONE\020\000\022\r\n"
    "\tCONNECTED\020\001\022\020\n\014DISCONNECTED\020\002\022\020\n\014ROOM_C"
    "HANGED\020\003B6Z4github.com/kmrd-industries/q"
    "lp-proto-bindings/gen/gob\006proto3"
};
static ::absl::once_flag descriptor_table_comm_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_comm_2eproto = {
    false,
    false,
    592,
    descriptor_table_protodef_comm_2eproto,
    "comm.proto",
    &descriptor_table_comm_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_comm_2eproto::offsets,
    file_level_enum_descriptors_comm_2eproto,
    file_level_service_descriptors_comm_2eproto,
};
namespace comm {
const ::google::protobuf::EnumDescriptor* StateVariant_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_comm_2eproto);
  return file_level_enum_descriptors_comm_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t StateVariant_internal_data_[] = {
    262144u, 0u, };
bool StateVariant_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class MovementUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MovementUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_._has_bits_);
};

MovementUpdate::MovementUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.MovementUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MovementUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::MovementUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MovementUpdate::MovementUpdate(
    ::google::protobuf::Arena* arena,
    const MovementUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MovementUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.curr_room_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::comm::Room>(
                              arena, *from._impl_.curr_room_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, entity_id_),
           offsetof(Impl_, attack_) -
               offsetof(Impl_, entity_id_) +
               sizeof(Impl_::attack_));

  // @@protoc_insertion_point(copy_constructor:comm.MovementUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MovementUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MovementUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, curr_room_),
           0,
           offsetof(Impl_, attack_) -
               offsetof(Impl_, curr_room_) +
               sizeof(Impl_::attack_));
}
MovementUpdate::~MovementUpdate() {
  // @@protoc_insertion_point(destructor:comm.MovementUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MovementUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.curr_room_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MovementUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MovementUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MovementUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MovementUpdate>(),
            ::google::protobuf::Message::GetNewImpl<MovementUpdate>(),
            ::google::protobuf::Message::GetClearImpl<MovementUpdate>(), &MovementUpdate::ByteSizeLong,
                &MovementUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_._cached_size_),
            false,
        },
        &MovementUpdate::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MovementUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 0, 2> MovementUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::MovementUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .comm.Room curr_room = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.curr_room_)}},
    // uint32 entity_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovementUpdate, _impl_.entity_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.entity_id_)}},
    // float position_x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_x_)}},
    // float position_y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_y_)}},
    // float weapon_pivot_x = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_x_)}},
    // float weapon_pivot_y = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_y_)}},
    // float direction = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.direction_)}},
    // bool attack = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MovementUpdate, _impl_.attack_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.attack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 entity_id = 1;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.entity_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float position_x = 2;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 3;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float weapon_pivot_x = 4;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float weapon_pivot_y = 5;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float direction = 6;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool attack = 7;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.attack_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .comm.Room curr_room = 8;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.curr_room_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Room>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MovementUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.MovementUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.curr_room_ != nullptr);
    _impl_.curr_room_->Clear();
  }
  ::memset(&_impl_.entity_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.attack_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.attack_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MovementUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MovementUpdate& this_ = static_cast<const MovementUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MovementUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MovementUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.MovementUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 entity_id = 1;
          if (this_._internal_entity_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_entity_id(), target);
          }

          // float position_x = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_position_x(), target);
          }

          // float position_y = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_position_y(), target);
          }

          // float weapon_pivot_x = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_weapon_pivot_x(), target);
          }

          // float weapon_pivot_y = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_weapon_pivot_y(), target);
          }

          // float direction = 6;
          if (::absl::bit_cast<::uint32_t>(this_._internal_direction()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_direction(), target);
          }

          // bool attack = 7;
          if (this_._internal_attack() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_attack(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .comm.Room curr_room = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.curr_room_, this_._impl_.curr_room_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.MovementUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MovementUpdate::ByteSizeLong(const MessageLite& base) {
          const MovementUpdate& this_ = static_cast<const MovementUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MovementUpdate::ByteSizeLong() const {
          const MovementUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.MovementUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .comm.Room curr_room = 8;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.curr_room_);
            }
          }
           {
            // uint32 entity_id = 1;
            if (this_._internal_entity_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_entity_id());
            }
            // float position_x = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
              total_size += 5;
            }
            // float position_y = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
              total_size += 5;
            }
            // float weapon_pivot_x = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_x()) != 0) {
              total_size += 5;
            }
            // float weapon_pivot_y = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_y()) != 0) {
              total_size += 5;
            }
            // float direction = 6;
            if (::absl::bit_cast<::uint32_t>(this_._internal_direction()) != 0) {
              total_size += 5;
            }
            // bool attack = 7;
            if (this_._internal_attack() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MovementUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovementUpdate*>(&to_msg);
  auto& from = static_cast<const MovementUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.MovementUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.curr_room_ != nullptr);
    if (_this->_impl_.curr_room_ == nullptr) {
      _this->_impl_.curr_room_ =
          ::google::protobuf::Message::CopyConstruct<::comm::Room>(arena, *from._impl_.curr_room_);
    } else {
      _this->_impl_.curr_room_->MergeFrom(*from._impl_.curr_room_);
    }
  }
  if (from._internal_entity_id() != 0) {
    _this->_impl_.entity_id_ = from._impl_.entity_id_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_x()) != 0) {
    _this->_impl_.position_x_ = from._impl_.position_x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_y()) != 0) {
    _this->_impl_.position_y_ = from._impl_.position_y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_weapon_pivot_x()) != 0) {
    _this->_impl_.weapon_pivot_x_ = from._impl_.weapon_pivot_x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_weapon_pivot_y()) != 0) {
    _this->_impl_.weapon_pivot_y_ = from._impl_.weapon_pivot_y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_direction()) != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_attack() != 0) {
    _this->_impl_.attack_ = from._impl_.attack_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovementUpdate::CopyFrom(const MovementUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.MovementUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovementUpdate::InternalSwap(MovementUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.attack_)
      + sizeof(MovementUpdate::_impl_.attack_)
      - PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.curr_room_)>(
          reinterpret_cast<char*>(&_impl_.curr_room_),
          reinterpret_cast<char*>(&other->_impl_.curr_room_));
}

::google::protobuf::Metadata MovementUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameState::_Internal {
 public:
};

GameState::GameState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.GameState)
}
inline PROTOBUF_NDEBUG_INLINE GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::GameState& from_msg)
      : connected_players_{visibility, arena, from.connected_players_},
        _connected_players_cached_byte_size_{0},
        _cached_size_{0} {}

GameState::GameState(
    ::google::protobuf::Arena* arena,
    const GameState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, player_id_),
           offsetof(Impl_, seed_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::seed_));

  // @@protoc_insertion_point(copy_constructor:comm.GameState)
}
inline PROTOBUF_NDEBUG_INLINE GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : connected_players_{visibility, arena},
        _connected_players_cached_byte_size_{0},
        _cached_size_{0} {}

inline void GameState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, seed_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::seed_));
}
GameState::~GameState() {
  // @@protoc_insertion_point(destructor:comm.GameState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameState::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameState_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameState::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameState>(),
            ::google::protobuf::Message::GetNewImpl<GameState>(),
            ::google::protobuf::Message::GetClearImpl<GameState>(), &GameState::ByteSizeLong,
                &GameState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameState, _impl_._cached_size_),
            false,
        },
        &GameState::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> GameState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::GameState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 connected_players = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.connected_players_)}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameState, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.player_id_)}},
    // uint32 weapon_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameState, _impl_.weapon_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.weapon_id_)}},
    // int64 seed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameState, _impl_.seed_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.seed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 weapon_id = 2;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.weapon_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int64 seed = 3;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.seed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated uint32 connected_players = 4;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.connected_players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.GameState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connected_players_.Clear();
  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.seed_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.seed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameState& this_ = static_cast<const GameState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.GameState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 player_id = 1;
          if (this_._internal_player_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_player_id(), target);
          }

          // uint32 weapon_id = 2;
          if (this_._internal_weapon_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_weapon_id(), target);
          }

          // int64 seed = 3;
          if (this_._internal_seed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_seed(), target);
          }

          // repeated uint32 connected_players = 4;
          {
            int byte_size = this_._impl_._connected_players_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  4, this_._internal_connected_players(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.GameState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameState::ByteSizeLong(const MessageLite& base) {
          const GameState& this_ = static_cast<const GameState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameState::ByteSizeLong() const {
          const GameState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.GameState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 connected_players = 4;
             {
              std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
                  this_._internal_connected_players())
              ;
              this_._impl_._connected_players_cached_byte_size_.Set(
                  ::_pbi::ToCachedSize(data_size));
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size))
              ;
              total_size += tag_size + data_size;
            }
          }
           {
            // uint32 player_id = 1;
            if (this_._internal_player_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_player_id());
            }
            // uint32 weapon_id = 2;
            if (this_._internal_weapon_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_weapon_id());
            }
            // int64 seed = 3;
            if (this_._internal_seed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_seed());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameState*>(&to_msg);
  auto& from = static_cast<const GameState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.GameState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connected_players()->MergeFrom(from._internal_connected_players());
  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  if (from._internal_weapon_id() != 0) {
    _this->_impl_.weapon_id_ = from._impl_.weapon_id_;
  }
  if (from._internal_seed() != 0) {
    _this->_impl_.seed_ = from._impl_.seed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameState::CopyFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameState::InternalSwap(GameState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.connected_players_.InternalSwap(&other->_impl_.connected_players_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameState, _impl_.seed_)
      + sizeof(GameState::_impl_.seed_)
      - PROTOBUF_FIELD_OFFSET(GameState, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata GameState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Room::_Internal {
 public:
};

Room::Room(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.Room)
}
Room::Room(
    ::google::protobuf::Arena* arena, const Room& from)
    : Room(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Room::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
Room::~Room() {
  // @@protoc_insertion_point(destructor:comm.Room)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Room::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Room::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Room_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Room::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Room>(),
            ::google::protobuf::Message::GetNewImpl<Room>(),
            ::google::protobuf::Message::GetClearImpl<Room>(), &Room::ByteSizeLong,
                &Room::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Room, _impl_._cached_size_),
            false,
        },
        &Room::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Room::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Room::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::Room>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.y_)}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Room::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Room::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.Room)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 x = 1;
          if (this_._internal_x() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_x(), target);
          }

          // int32 y = 2;
          if (this_._internal_y() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_y(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.Room)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Room::ByteSizeLong(const MessageLite& base) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Room::ByteSizeLong() const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.Room)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 x = 1;
            if (this_._internal_x() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_x());
            }
            // int32 y = 2;
            if (this_._internal_y() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_y());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Room::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Room*>(&to_msg);
  auto& from = static_cast<const Room&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.Room)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Room::InternalSwap(Room* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Room, _impl_.y_)
      + sizeof(Room::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Room, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Room::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BytePrefix::_Internal {
 public:
};

BytePrefix::BytePrefix(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.BytePrefix)
}
BytePrefix::BytePrefix(
    ::google::protobuf::Arena* arena, const BytePrefix& from)
    : BytePrefix(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BytePrefix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BytePrefix::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bytes_ = {};
}
BytePrefix::~BytePrefix() {
  // @@protoc_insertion_point(destructor:comm.BytePrefix)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BytePrefix::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    BytePrefix::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_BytePrefix_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &BytePrefix::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<BytePrefix>(),
            ::google::protobuf::Message::GetNewImpl<BytePrefix>(),
            ::google::protobuf::Message::GetClearImpl<BytePrefix>(), &BytePrefix::ByteSizeLong,
                &BytePrefix::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(BytePrefix, _impl_._cached_size_),
            false,
        },
        &BytePrefix::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* BytePrefix::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BytePrefix::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::BytePrefix>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 bytes = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BytePrefix, _impl_.bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BytePrefix, _impl_.bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 bytes = 1;
    {PROTOBUF_FIELD_OFFSET(BytePrefix, _impl_.bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BytePrefix::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.BytePrefix)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bytes_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BytePrefix::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BytePrefix& this_ = static_cast<const BytePrefix&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BytePrefix::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BytePrefix& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.BytePrefix)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 bytes = 1;
          if (this_._internal_bytes() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_bytes(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.BytePrefix)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BytePrefix::ByteSizeLong(const MessageLite& base) {
          const BytePrefix& this_ = static_cast<const BytePrefix&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BytePrefix::ByteSizeLong() const {
          const BytePrefix& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.BytePrefix)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 bytes = 1;
            if (this_._internal_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bytes());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BytePrefix::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BytePrefix*>(&to_msg);
  auto& from = static_cast<const BytePrefix&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.BytePrefix)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bytes() != 0) {
    _this->_impl_.bytes_ = from._impl_.bytes_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BytePrefix::CopyFrom(const BytePrefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.BytePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BytePrefix::InternalSwap(BytePrefix* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.bytes_, other->_impl_.bytes_);
}

::google::protobuf::Metadata BytePrefix::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StateUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._has_bits_);
};

StateUpdate::StateUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.StateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::StateUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StateUpdate::StateUpdate(
    ::google::protobuf::Arena* arena,
    const StateUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StateUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::comm::Room>(
                              arena, *from._impl_.room_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, variant_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::variant_));

  // @@protoc_insertion_point(copy_constructor:comm.StateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StateUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, variant_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::variant_));
}
StateUpdate::~StateUpdate() {
  // @@protoc_insertion_point(destructor:comm.StateUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.room_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StateUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StateUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StateUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StateUpdate>(),
            ::google::protobuf::Message::GetNewImpl<StateUpdate>(),
            ::google::protobuf::Message::GetClearImpl<StateUpdate>(), &StateUpdate::ByteSizeLong,
                &StateUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._cached_size_),
            false,
        },
        &StateUpdate::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StateUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> StateUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::StateUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StateUpdate, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.id_)}},
    // .comm.StateVariant variant = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StateUpdate, _impl_.variant_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.variant_)}},
    // .comm.Room room = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.room_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .comm.StateVariant variant = 2;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.variant_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .comm.Room room = 3;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.room_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Room>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.StateUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.room_ != nullptr);
    _impl_.room_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.variant_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.variant_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StateUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StateUpdate& this_ = static_cast<const StateUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StateUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StateUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.StateUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // .comm.StateVariant variant = 2;
          if (this_._internal_variant() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_variant(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .comm.Room room = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.StateUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StateUpdate::ByteSizeLong(const MessageLite& base) {
          const StateUpdate& this_ = static_cast<const StateUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StateUpdate::ByteSizeLong() const {
          const StateUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.StateUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .comm.Room room = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // .comm.StateVariant variant = 2;
            if (this_._internal_variant() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_variant());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StateUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateUpdate*>(&to_msg);
  auto& from = static_cast<const StateUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.StateUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.room_ != nullptr);
    if (_this->_impl_.room_ == nullptr) {
      _this->_impl_.room_ =
          ::google::protobuf::Message::CopyConstruct<::comm::Room>(arena, *from._impl_.room_);
    } else {
      _this->_impl_.room_->MergeFrom(*from._impl_.room_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_variant() != 0) {
    _this->_impl_.variant_ = from._impl_.variant_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateUpdate::CopyFrom(const StateUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.StateUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateUpdate::InternalSwap(StateUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.variant_)
      + sizeof(StateUpdate::_impl_.variant_)
      - PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
}

::google::protobuf::Metadata StateUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace comm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_comm_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
