// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: comm.proto
// Protobuf C++ Version: 5.28.3

#include "comm.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace comm {

inline constexpr TextureData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tile_set_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tile_id_{0u},
        tile_layer_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TextureData::TextureData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextureDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextureDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextureDataDefaultTypeInternal() {}
  union {
    TextureData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextureDataDefaultTypeInternal _TextureData_default_instance_;

inline constexpr SpawningEnemiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enemy_id_{},
        _enemy_id_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpawningEnemiesResponse::SpawningEnemiesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpawningEnemiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpawningEnemiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpawningEnemiesResponseDefaultTypeInternal() {}
  union {
    SpawningEnemiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpawningEnemiesResponseDefaultTypeInternal _SpawningEnemiesResponse_default_instance_;

inline constexpr Room::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room::Room(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDefaultTypeInternal() {}
  union {
    Room _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDefaultTypeInternal _Room_default_instance_;

inline constexpr Obstacle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : left_{0},
        top_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Obstacle::Obstacle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ObstacleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObstacleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObstacleDefaultTypeInternal() {}
  union {
    Obstacle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObstacleDefaultTypeInternal _Obstacle_default_instance_;

inline constexpr Item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0u},
        gen_{0u},
        type_{static_cast< ::comm::ItemType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Item::Item(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemDefaultTypeInternal() {}
  union {
    Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemDefaultTypeInternal _Item_default_instance_;

inline constexpr EnemyGotHitUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        enemy_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EnemyGotHitUpdate::EnemyGotHitUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EnemyGotHitUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnemyGotHitUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnemyGotHitUpdateDefaultTypeInternal() {}
  union {
    EnemyGotHitUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnemyGotHitUpdateDefaultTypeInternal _EnemyGotHitUpdate_default_instance_;

inline constexpr CollisionData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{0},
        width_{0},
        height_{0},
        x_offset_{0},
        y_offset_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CollisionData::CollisionData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CollisionDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollisionDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollisionDataDefaultTypeInternal() {}
  union {
    CollisionData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollisionDataDefaultTypeInternal _CollisionData_default_instance_;

inline constexpr BytePrefix::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bytes_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BytePrefix::BytePrefix(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BytePrefixDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BytePrefixDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BytePrefixDefaultTypeInternal() {}
  union {
    BytePrefix _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BytePrefixDefaultTypeInternal _BytePrefix_default_instance_;

inline constexpr Player::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        id_{0u},
        position_x_{0},
        player_attack_damage_{0},
        position_y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Player::Player(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDefaultTypeInternal() {}
  union {
    Player _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDefaultTypeInternal _Player_default_instance_;

inline constexpr MapDimensionsUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : obstacles_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MapDimensionsUpdate::MapDimensionsUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapDimensionsUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapDimensionsUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapDimensionsUpdateDefaultTypeInternal() {}
  union {
    MapDimensionsUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapDimensionsUpdateDefaultTypeInternal _MapDimensionsUpdate_default_instance_;

inline constexpr Enemy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        texture_data_{nullptr},
        collision_data_{nullptr},
        id_{0u},
        position_x_{0},
        hp_{0},
        damage_{0},
        position_y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Enemy::Enemy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EnemyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnemyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnemyDefaultTypeInternal() {}
  union {
    Enemy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnemyDefaultTypeInternal _Enemy_default_instance_;

inline constexpr StateUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        enemy_spawner_positions_{},
        compressed_map_dimensions_update_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        item_{nullptr},
        room_{nullptr},
        map_dimensions_update_{nullptr},
        enemy_got_hit_update_{nullptr},
        variant_{static_cast< ::comm::StateVariant >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StateUpdate::StateUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StateUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateUpdateDefaultTypeInternal() {}
  union {
    StateUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateUpdateDefaultTypeInternal _StateUpdate_default_instance_;

inline constexpr MapPositionsUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        enemies_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MapPositionsUpdate::MapPositionsUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapPositionsUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapPositionsUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapPositionsUpdateDefaultTypeInternal() {}
  union {
    MapPositionsUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapPositionsUpdateDefaultTypeInternal _MapPositionsUpdate_default_instance_;

inline constexpr InitialInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        connected_players_{},
        player_{nullptr},
        next_item_{nullptr},
        seed_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR InitialInfo::InitialInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InitialInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitialInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitialInfoDefaultTypeInternal() {}
  union {
    InitialInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitialInfoDefaultTypeInternal _InitialInfo_default_instance_;

inline constexpr StateUpdateSeries::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : updates_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StateUpdateSeries::StateUpdateSeries(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StateUpdateSeriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateUpdateSeriesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateUpdateSeriesDefaultTypeInternal() {}
  union {
    StateUpdateSeries _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateUpdateSeriesDefaultTypeInternal _StateUpdateSeries_default_instance_;

inline constexpr MovementUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        enemy_positions_{},
        curr_room_{nullptr},
        map_positions_update_{nullptr},
        entity_id_{0u},
        variant_{static_cast< ::comm::MovementVariant >(0)},
        position_x_{0},
        position_y_{0},
        weapon_pivot_x_{0},
        weapon_pivot_y_{0},
        direction_{0},
        attack_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MovementUpdate::MovementUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovementUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovementUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovementUpdateDefaultTypeInternal() {}
  union {
    MovementUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovementUpdateDefaultTypeInternal _MovementUpdate_default_instance_;
}  // namespace comm
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_comm_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_comm_2eproto = nullptr;
const ::uint32_t
    TableStruct_comm_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.variant_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.position_x_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.position_y_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.weapon_pivot_x_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.weapon_pivot_y_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.attack_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.curr_room_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.enemy_positions_),
        PROTOBUF_FIELD_OFFSET(::comm::MovementUpdate, _impl_.map_positions_update_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::BytePrefix, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::BytePrefix, _impl_.bytes_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.variant_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.room_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.enemy_spawner_positions_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.map_dimensions_update_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.enemy_got_hit_update_),
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdate, _impl_.compressed_map_dimensions_update_),
        0,
        1,
        ~0u,
        2,
        ~0u,
        3,
        4,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdateSeries, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::StateUpdateSeries, _impl_.updates_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::Player, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::Player, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::comm::Player, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::comm::Player, _impl_.position_x_),
        PROTOBUF_FIELD_OFFSET(::comm::Player, _impl_.position_y_),
        PROTOBUF_FIELD_OFFSET(::comm::Player, _impl_.player_attack_damage_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::Item, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::Item, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::comm::Item, _impl_.gen_),
        PROTOBUF_FIELD_OFFSET(::comm::Item, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::comm::InitialInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::comm::InitialInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::InitialInfo, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::comm::InitialInfo, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::comm::InitialInfo, _impl_.next_item_),
        PROTOBUF_FIELD_OFFSET(::comm::InitialInfo, _impl_.connected_players_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::Room, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::Room, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::comm::Room, _impl_.y_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::Obstacle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::Obstacle, _impl_.left_),
        PROTOBUF_FIELD_OFFSET(::comm::Obstacle, _impl_.top_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.position_x_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.position_y_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.hp_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.damage_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.texture_data_),
        PROTOBUF_FIELD_OFFSET(::comm::Enemy, _impl_.collision_data_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::TextureData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::TextureData, _impl_.tile_id_),
        PROTOBUF_FIELD_OFFSET(::comm::TextureData, _impl_.tile_set_),
        PROTOBUF_FIELD_OFFSET(::comm::TextureData, _impl_.tile_layer_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::CollisionData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::CollisionData, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::comm::CollisionData, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::comm::CollisionData, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::comm::CollisionData, _impl_.x_offset_),
        PROTOBUF_FIELD_OFFSET(::comm::CollisionData, _impl_.y_offset_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::EnemyGotHitUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::EnemyGotHitUpdate, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::comm::EnemyGotHitUpdate, _impl_.enemy_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::MapPositionsUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::MapPositionsUpdate, _impl_.players_),
        PROTOBUF_FIELD_OFFSET(::comm::MapPositionsUpdate, _impl_.enemies_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::MapDimensionsUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::MapDimensionsUpdate, _impl_.obstacles_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::comm::SpawningEnemiesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::comm::SpawningEnemiesResponse, _impl_.enemy_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 19, -1, sizeof(::comm::MovementUpdate)},
        {30, -1, -1, sizeof(::comm::BytePrefix)},
        {39, 55, -1, sizeof(::comm::StateUpdate)},
        {63, -1, -1, sizeof(::comm::StateUpdateSeries)},
        {72, -1, -1, sizeof(::comm::Player)},
        {85, -1, -1, sizeof(::comm::Item)},
        {96, 108, -1, sizeof(::comm::InitialInfo)},
        {112, -1, -1, sizeof(::comm::Room)},
        {122, -1, -1, sizeof(::comm::Obstacle)},
        {132, 149, -1, sizeof(::comm::Enemy)},
        {158, -1, -1, sizeof(::comm::TextureData)},
        {169, -1, -1, sizeof(::comm::CollisionData)},
        {182, -1, -1, sizeof(::comm::EnemyGotHitUpdate)},
        {192, -1, -1, sizeof(::comm::MapPositionsUpdate)},
        {202, -1, -1, sizeof(::comm::MapDimensionsUpdate)},
        {211, -1, -1, sizeof(::comm::SpawningEnemiesResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::comm::_MovementUpdate_default_instance_._instance,
    &::comm::_BytePrefix_default_instance_._instance,
    &::comm::_StateUpdate_default_instance_._instance,
    &::comm::_StateUpdateSeries_default_instance_._instance,
    &::comm::_Player_default_instance_._instance,
    &::comm::_Item_default_instance_._instance,
    &::comm::_InitialInfo_default_instance_._instance,
    &::comm::_Room_default_instance_._instance,
    &::comm::_Obstacle_default_instance_._instance,
    &::comm::_Enemy_default_instance_._instance,
    &::comm::_TextureData_default_instance_._instance,
    &::comm::_CollisionData_default_instance_._instance,
    &::comm::_EnemyGotHitUpdate_default_instance_._instance,
    &::comm::_MapPositionsUpdate_default_instance_._instance,
    &::comm::_MapDimensionsUpdate_default_instance_._instance,
    &::comm::_SpawningEnemiesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_comm_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ncomm.proto\022\004comm\"\303\002\n\016MovementUpdate\022\021\n"
    "\tentity_id\030\001 \001(\r\022&\n\007variant\030\002 \001(\0162\025.comm"
    ".MovementVariant\022\022\n\nposition_x\030\003 \001(\002\022\022\n\n"
    "position_y\030\004 \001(\002\022\026\n\016weapon_pivot_x\030\005 \001(\002"
    "\022\026\n\016weapon_pivot_y\030\006 \001(\002\022\021\n\tdirection\030\007 "
    "\001(\002\022\016\n\006attack\030\010 \001(\010\022\035\n\tcurr_room\030\t \001(\0132\n"
    ".comm.Room\022$\n\017enemy_positions\030\n \003(\0132\013.co"
    "mm.Enemy\0226\n\024map_positions_update\030\013 \001(\0132\030"
    ".comm.MapPositionsUpdate\"\033\n\nBytePrefix\022\r"
    "\n\005bytes\030\001 \001(\r\"\315\002\n\013StateUpdate\022\034\n\006player\030"
    "\001 \001(\0132\014.comm.Player\022\030\n\004item\030\002 \001(\0132\n.comm"
    ".Item\022#\n\007variant\030\003 \001(\0162\022.comm.StateVaria"
    "nt\022\030\n\004room\030\004 \001(\0132\n.comm.Room\022,\n\027enemy_sp"
    "awner_positions\030\005 \003(\0132\013.comm.Enemy\0228\n\025ma"
    "p_dimensions_update\030\006 \001(\0132\031.comm.MapDime"
    "nsionsUpdate\0225\n\024enemy_got_hit_update\030\007 \001"
    "(\0132\027.comm.EnemyGotHitUpdate\022(\n compresse"
    "d_map_dimensions_update\030\010 \001(\014\"7\n\021StateUp"
    "dateSeries\022\"\n\007updates\030\001 \003(\0132\021.comm.State"
    "Update\"u\n\006Player\022\n\n\002id\030\001 \001(\r\022\031\n\005items\030\002 "
    "\003(\0132\n.comm.Item\022\022\n\nposition_x\030\003 \001(\002\022\022\n\np"
    "osition_y\030\004 \001(\002\022\034\n\024player_attack_damage\030"
    "\005 \001(\001\"=\n\004Item\022\n\n\002id\030\001 \001(\r\022\013\n\003gen\030\002 \001(\r\022\034"
    "\n\004type\030\003 \001(\0162\016.comm.ItemType\"\201\001\n\013Initial"
    "Info\022\034\n\006player\030\001 \001(\0132\014.comm.Player\022\014\n\004se"
    "ed\030\002 \001(\003\022\035\n\tnext_item\030\003 \001(\0132\n.comm.Item\022"
    "\'\n\021connected_players\030\004 \003(\0132\014.comm.Player"
    "\"\034\n\004Room\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"%\n\010Obstac"
    "le\022\014\n\004left\030\001 \001(\002\022\013\n\003top\030\002 \001(\002\"\311\001\n\005Enemy\022"
    "\n\n\002id\030\001 \001(\r\022\022\n\nposition_x\030\002 \001(\002\022\022\n\nposit"
    "ion_y\030\003 \001(\002\022\014\n\004type\030\004 \001(\t\022\014\n\004name\030\005 \001(\t\022"
    "\n\n\002hp\030\006 \001(\001\022\016\n\006damage\030\007 \001(\001\022\'\n\014texture_d"
    "ata\030\010 \001(\0132\021.comm.TextureData\022+\n\016collisio"
    "n_data\030\t \001(\0132\023.comm.CollisionData\"D\n\013Tex"
    "tureData\022\017\n\007tile_id\030\001 \001(\r\022\020\n\010tile_set\030\002 "
    "\001(\t\022\022\n\ntile_layer\030\003 \001(\005\"`\n\rCollisionData"
    "\022\014\n\004type\030\001 \001(\005\022\r\n\005width\030\002 \001(\002\022\016\n\006height\030"
    "\003 \001(\002\022\020\n\010x_offset\030\004 \001(\002\022\020\n\010y_offset\030\005 \001("
    "\002\"8\n\021EnemyGotHitUpdate\022\021\n\tplayer_id\030\001 \001("
    "\r\022\020\n\010enemy_id\030\002 \001(\r\"Q\n\022MapPositionsUpdat"
    "e\022\035\n\007players\030\001 \003(\0132\014.comm.Player\022\034\n\007enem"
    "ies\030\002 \003(\0132\013.comm.Enemy\"8\n\023MapDimensionsU"
    "pdate\022!\n\tobstacles\030\001 \003(\0132\016.comm.Obstacle"
    "\"+\n\027SpawningEnemiesResponse\022\020\n\010enemy_id\030"
    "\001 \003(\r*\220\002\n\014StateVariant\022\010\n\004NONE\020\000\022\r\n\tCONN"
    "ECTED\020\001\022\020\n\014DISCONNECTED\020\002\022\020\n\014ROOM_CHANGE"
    "D\020\003\022\020\n\014ROOM_CLEARED\020\004\022\021\n\rLEVEL_CHANGED\020\005"
    "\022\020\n\014CHEST_OPENED\020\006\022\032\n\026REQUEST_ITEM_GENER"
    "ATOR\020\007\022\021\n\rITEM_EQUIPPED\020\010\022\017\n\013PLAYER_DIED"
    "\020\t\022\031\n\025MAP_DIMENSIONS_UPDATE\020\n\022\027\n\023SPAWN_E"
    "NEMY_REQUEST\020\013\022\030\n\024ENEMY_GOT_HIT_UPDATE\020\014"
    "*Y\n\017MovementVariant\022\032\n\026PLAYER_MOVEMENT_U"
    "PDATE\020\000\022\016\n\nMAP_UPDATE\020\001\022\032\n\026ENEMY_POSITIO"
    "NS_UPDATE\020\002*G\n\010ItemType\022\013\n\007UNKNOWN\020\000\022\n\n\006"
    "WEAPON\020\001\022\n\n\006ARMOUR\020\002\022\n\n\006POTION\020\003\022\n\n\006HELM"
    "ET\020\004B6Z4github.com/kmrd-industries/qlp-p"
    "roto-bindings/gen/gob\006proto3"
};
static ::absl::once_flag descriptor_table_comm_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_comm_2eproto = {
    false,
    false,
    2268,
    descriptor_table_protodef_comm_2eproto,
    "comm.proto",
    &descriptor_table_comm_2eproto_once,
    nullptr,
    0,
    16,
    schemas,
    file_default_instances,
    TableStruct_comm_2eproto::offsets,
    file_level_enum_descriptors_comm_2eproto,
    file_level_service_descriptors_comm_2eproto,
};
namespace comm {
const ::google::protobuf::EnumDescriptor* StateVariant_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_comm_2eproto);
  return file_level_enum_descriptors_comm_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t StateVariant_internal_data_[] = {
    851968u, 0u, };
bool StateVariant_IsValid(int value) {
  return 0 <= value && value <= 12;
}
const ::google::protobuf::EnumDescriptor* MovementVariant_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_comm_2eproto);
  return file_level_enum_descriptors_comm_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MovementVariant_internal_data_[] = {
    196608u, 0u, };
bool MovementVariant_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* ItemType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_comm_2eproto);
  return file_level_enum_descriptors_comm_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ItemType_internal_data_[] = {
    327680u, 0u, };
bool ItemType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class MovementUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MovementUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_._has_bits_);
};

MovementUpdate::MovementUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.MovementUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MovementUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::MovementUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        enemy_positions_{visibility, arena, from.enemy_positions_} {}

MovementUpdate::MovementUpdate(
    ::google::protobuf::Arena* arena,
    const MovementUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MovementUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.curr_room_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::comm::Room>(
                              arena, *from._impl_.curr_room_)
                        : nullptr;
  _impl_.map_positions_update_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::comm::MapPositionsUpdate>(
                              arena, *from._impl_.map_positions_update_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, entity_id_),
           offsetof(Impl_, attack_) -
               offsetof(Impl_, entity_id_) +
               sizeof(Impl_::attack_));

  // @@protoc_insertion_point(copy_constructor:comm.MovementUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MovementUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        enemy_positions_{visibility, arena} {}

inline void MovementUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, curr_room_),
           0,
           offsetof(Impl_, attack_) -
               offsetof(Impl_, curr_room_) +
               sizeof(Impl_::attack_));
}
MovementUpdate::~MovementUpdate() {
  // @@protoc_insertion_point(destructor:comm.MovementUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MovementUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.curr_room_;
  delete _impl_.map_positions_update_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MovementUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MovementUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MovementUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MovementUpdate>(),
            ::google::protobuf::Message::GetNewImpl<MovementUpdate>(),
            ::google::protobuf::Message::GetClearImpl<MovementUpdate>(), &MovementUpdate::ByteSizeLong,
                &MovementUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_._cached_size_),
            false,
        },
        &MovementUpdate::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MovementUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 3, 0, 2> MovementUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::MovementUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 entity_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovementUpdate, _impl_.entity_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.entity_id_)}},
    // .comm.MovementVariant variant = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovementUpdate, _impl_.variant_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.variant_)}},
    // float position_x = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_x_)}},
    // float position_y = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_y_)}},
    // float weapon_pivot_x = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_x_)}},
    // float weapon_pivot_y = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_y_)}},
    // float direction = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.direction_)}},
    // bool attack = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MovementUpdate, _impl_.attack_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.attack_)}},
    // .comm.Room curr_room = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.curr_room_)}},
    // repeated .comm.Enemy enemy_positions = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.enemy_positions_)}},
    // .comm.MapPositionsUpdate map_positions_update = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 1, 2, PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.map_positions_update_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 entity_id = 1;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.entity_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .comm.MovementVariant variant = 2;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.variant_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float position_x = 3;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 4;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.position_y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float weapon_pivot_x = 5;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float weapon_pivot_y = 6;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.weapon_pivot_y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float direction = 7;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool attack = 8;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.attack_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .comm.Room curr_room = 9;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.curr_room_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .comm.Enemy enemy_positions = 10;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.enemy_positions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .comm.MapPositionsUpdate map_positions_update = 11;
    {PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.map_positions_update_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Room>()},
    {::_pbi::TcParser::GetTable<::comm::Enemy>()},
    {::_pbi::TcParser::GetTable<::comm::MapPositionsUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MovementUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.MovementUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enemy_positions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.curr_room_ != nullptr);
      _impl_.curr_room_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.map_positions_update_ != nullptr);
      _impl_.map_positions_update_->Clear();
    }
  }
  ::memset(&_impl_.entity_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.attack_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.attack_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MovementUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MovementUpdate& this_ = static_cast<const MovementUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MovementUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MovementUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.MovementUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 entity_id = 1;
          if (this_._internal_entity_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_entity_id(), target);
          }

          // .comm.MovementVariant variant = 2;
          if (this_._internal_variant() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_variant(), target);
          }

          // float position_x = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_position_x(), target);
          }

          // float position_y = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_position_y(), target);
          }

          // float weapon_pivot_x = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_weapon_pivot_x(), target);
          }

          // float weapon_pivot_y = 6;
          if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_weapon_pivot_y(), target);
          }

          // float direction = 7;
          if (::absl::bit_cast<::uint32_t>(this_._internal_direction()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_direction(), target);
          }

          // bool attack = 8;
          if (this_._internal_attack() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_attack(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .comm.Room curr_room = 9;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.curr_room_, this_._impl_.curr_room_->GetCachedSize(), target,
                stream);
          }

          // repeated .comm.Enemy enemy_positions = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_enemy_positions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_enemy_positions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .comm.MapPositionsUpdate map_positions_update = 11;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.map_positions_update_, this_._impl_.map_positions_update_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.MovementUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MovementUpdate::ByteSizeLong(const MessageLite& base) {
          const MovementUpdate& this_ = static_cast<const MovementUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MovementUpdate::ByteSizeLong() const {
          const MovementUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.MovementUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .comm.Enemy enemy_positions = 10;
             {
              total_size += 1UL * this_._internal_enemy_positions_size();
              for (const auto& msg : this_._internal_enemy_positions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .comm.Room curr_room = 9;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.curr_room_);
            }
            // .comm.MapPositionsUpdate map_positions_update = 11;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.map_positions_update_);
            }
          }
           {
            // uint32 entity_id = 1;
            if (this_._internal_entity_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_entity_id());
            }
            // .comm.MovementVariant variant = 2;
            if (this_._internal_variant() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_variant());
            }
            // float position_x = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
              total_size += 5;
            }
            // float position_y = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
              total_size += 5;
            }
            // float weapon_pivot_x = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_x()) != 0) {
              total_size += 5;
            }
            // float weapon_pivot_y = 6;
            if (::absl::bit_cast<::uint32_t>(this_._internal_weapon_pivot_y()) != 0) {
              total_size += 5;
            }
            // float direction = 7;
            if (::absl::bit_cast<::uint32_t>(this_._internal_direction()) != 0) {
              total_size += 5;
            }
            // bool attack = 8;
            if (this_._internal_attack() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MovementUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovementUpdate*>(&to_msg);
  auto& from = static_cast<const MovementUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.MovementUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_enemy_positions()->MergeFrom(
      from._internal_enemy_positions());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.curr_room_ != nullptr);
      if (_this->_impl_.curr_room_ == nullptr) {
        _this->_impl_.curr_room_ =
            ::google::protobuf::Message::CopyConstruct<::comm::Room>(arena, *from._impl_.curr_room_);
      } else {
        _this->_impl_.curr_room_->MergeFrom(*from._impl_.curr_room_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.map_positions_update_ != nullptr);
      if (_this->_impl_.map_positions_update_ == nullptr) {
        _this->_impl_.map_positions_update_ =
            ::google::protobuf::Message::CopyConstruct<::comm::MapPositionsUpdate>(arena, *from._impl_.map_positions_update_);
      } else {
        _this->_impl_.map_positions_update_->MergeFrom(*from._impl_.map_positions_update_);
      }
    }
  }
  if (from._internal_entity_id() != 0) {
    _this->_impl_.entity_id_ = from._impl_.entity_id_;
  }
  if (from._internal_variant() != 0) {
    _this->_impl_.variant_ = from._impl_.variant_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_x()) != 0) {
    _this->_impl_.position_x_ = from._impl_.position_x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_y()) != 0) {
    _this->_impl_.position_y_ = from._impl_.position_y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_weapon_pivot_x()) != 0) {
    _this->_impl_.weapon_pivot_x_ = from._impl_.weapon_pivot_x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_weapon_pivot_y()) != 0) {
    _this->_impl_.weapon_pivot_y_ = from._impl_.weapon_pivot_y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_direction()) != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_attack() != 0) {
    _this->_impl_.attack_ = from._impl_.attack_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovementUpdate::CopyFrom(const MovementUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.MovementUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovementUpdate::InternalSwap(MovementUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.enemy_positions_.InternalSwap(&other->_impl_.enemy_positions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.attack_)
      + sizeof(MovementUpdate::_impl_.attack_)
      - PROTOBUF_FIELD_OFFSET(MovementUpdate, _impl_.curr_room_)>(
          reinterpret_cast<char*>(&_impl_.curr_room_),
          reinterpret_cast<char*>(&other->_impl_.curr_room_));
}

::google::protobuf::Metadata MovementUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BytePrefix::_Internal {
 public:
};

BytePrefix::BytePrefix(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.BytePrefix)
}
BytePrefix::BytePrefix(
    ::google::protobuf::Arena* arena, const BytePrefix& from)
    : BytePrefix(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BytePrefix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BytePrefix::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bytes_ = {};
}
BytePrefix::~BytePrefix() {
  // @@protoc_insertion_point(destructor:comm.BytePrefix)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BytePrefix::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    BytePrefix::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_BytePrefix_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &BytePrefix::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<BytePrefix>(),
            ::google::protobuf::Message::GetNewImpl<BytePrefix>(),
            ::google::protobuf::Message::GetClearImpl<BytePrefix>(), &BytePrefix::ByteSizeLong,
                &BytePrefix::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(BytePrefix, _impl_._cached_size_),
            false,
        },
        &BytePrefix::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* BytePrefix::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BytePrefix::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::BytePrefix>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 bytes = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BytePrefix, _impl_.bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BytePrefix, _impl_.bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 bytes = 1;
    {PROTOBUF_FIELD_OFFSET(BytePrefix, _impl_.bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BytePrefix::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.BytePrefix)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bytes_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BytePrefix::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BytePrefix& this_ = static_cast<const BytePrefix&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BytePrefix::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BytePrefix& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.BytePrefix)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 bytes = 1;
          if (this_._internal_bytes() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_bytes(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.BytePrefix)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BytePrefix::ByteSizeLong(const MessageLite& base) {
          const BytePrefix& this_ = static_cast<const BytePrefix&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BytePrefix::ByteSizeLong() const {
          const BytePrefix& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.BytePrefix)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 bytes = 1;
            if (this_._internal_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_bytes());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BytePrefix::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BytePrefix*>(&to_msg);
  auto& from = static_cast<const BytePrefix&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.BytePrefix)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bytes() != 0) {
    _this->_impl_.bytes_ = from._impl_.bytes_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BytePrefix::CopyFrom(const BytePrefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.BytePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BytePrefix::InternalSwap(BytePrefix* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.bytes_, other->_impl_.bytes_);
}

::google::protobuf::Metadata BytePrefix::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StateUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._has_bits_);
};

StateUpdate::StateUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.StateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::StateUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        enemy_spawner_positions_{visibility, arena, from.enemy_spawner_positions_},
        compressed_map_dimensions_update_(arena, from.compressed_map_dimensions_update_) {}

StateUpdate::StateUpdate(
    ::google::protobuf::Arena* arena,
    const StateUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StateUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::comm::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.item_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::comm::Item>(
                              arena, *from._impl_.item_)
                        : nullptr;
  _impl_.room_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::comm::Room>(
                              arena, *from._impl_.room_)
                        : nullptr;
  _impl_.map_dimensions_update_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::comm::MapDimensionsUpdate>(
                              arena, *from._impl_.map_dimensions_update_)
                        : nullptr;
  _impl_.enemy_got_hit_update_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::comm::EnemyGotHitUpdate>(
                              arena, *from._impl_.enemy_got_hit_update_)
                        : nullptr;
  _impl_.variant_ = from._impl_.variant_;

  // @@protoc_insertion_point(copy_constructor:comm.StateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        enemy_spawner_positions_{visibility, arena},
        compressed_map_dimensions_update_(arena) {}

inline void StateUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, variant_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::variant_));
}
StateUpdate::~StateUpdate() {
  // @@protoc_insertion_point(destructor:comm.StateUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.compressed_map_dimensions_update_.Destroy();
  delete _impl_.player_;
  delete _impl_.item_;
  delete _impl_.room_;
  delete _impl_.map_dimensions_update_;
  delete _impl_.enemy_got_hit_update_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StateUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StateUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StateUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StateUpdate>(),
            ::google::protobuf::Message::GetNewImpl<StateUpdate>(),
            ::google::protobuf::Message::GetClearImpl<StateUpdate>(), &StateUpdate::ByteSizeLong,
                &StateUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._cached_size_),
            false,
        },
        &StateUpdate::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StateUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 6, 0, 2> StateUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::StateUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes compressed_map_dimensions_update = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.compressed_map_dimensions_update_)}},
    // .comm.Player player = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.player_)}},
    // .comm.Item item = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.item_)}},
    // .comm.StateVariant variant = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StateUpdate, _impl_.variant_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.variant_)}},
    // .comm.Room room = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.room_)}},
    // repeated .comm.Enemy enemy_spawner_positions = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.enemy_spawner_positions_)}},
    // .comm.MapDimensionsUpdate map_dimensions_update = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 4, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.map_dimensions_update_)}},
    // .comm.EnemyGotHitUpdate enemy_got_hit_update = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 5, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.enemy_got_hit_update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .comm.Player player = 1;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .comm.Item item = 2;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.item_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .comm.StateVariant variant = 3;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.variant_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .comm.Room room = 4;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.room_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .comm.Enemy enemy_spawner_positions = 5;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.enemy_spawner_positions_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .comm.MapDimensionsUpdate map_dimensions_update = 6;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.map_dimensions_update_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .comm.EnemyGotHitUpdate enemy_got_hit_update = 7;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.enemy_got_hit_update_), _Internal::kHasBitsOffset + 4, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes compressed_map_dimensions_update = 8;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.compressed_map_dimensions_update_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Player>()},
    {::_pbi::TcParser::GetTable<::comm::Item>()},
    {::_pbi::TcParser::GetTable<::comm::Room>()},
    {::_pbi::TcParser::GetTable<::comm::Enemy>()},
    {::_pbi::TcParser::GetTable<::comm::MapDimensionsUpdate>()},
    {::_pbi::TcParser::GetTable<::comm::EnemyGotHitUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.StateUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enemy_spawner_positions_.Clear();
  _impl_.compressed_map_dimensions_update_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.player_ != nullptr);
      _impl_.player_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.item_ != nullptr);
      _impl_.item_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.room_ != nullptr);
      _impl_.room_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.map_dimensions_update_ != nullptr);
      _impl_.map_dimensions_update_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.enemy_got_hit_update_ != nullptr);
      _impl_.enemy_got_hit_update_->Clear();
    }
  }
  _impl_.variant_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StateUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StateUpdate& this_ = static_cast<const StateUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StateUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StateUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.StateUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .comm.Player player = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // .comm.Item item = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.item_, this_._impl_.item_->GetCachedSize(), target,
                stream);
          }

          // .comm.StateVariant variant = 3;
          if (this_._internal_variant() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_variant(), target);
          }

          // .comm.Room room = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
                stream);
          }

          // repeated .comm.Enemy enemy_spawner_positions = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_enemy_spawner_positions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_enemy_spawner_positions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .comm.MapDimensionsUpdate map_dimensions_update = 6;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.map_dimensions_update_, this_._impl_.map_dimensions_update_->GetCachedSize(), target,
                stream);
          }

          // .comm.EnemyGotHitUpdate enemy_got_hit_update = 7;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.enemy_got_hit_update_, this_._impl_.enemy_got_hit_update_->GetCachedSize(), target,
                stream);
          }

          // bytes compressed_map_dimensions_update = 8;
          if (!this_._internal_compressed_map_dimensions_update().empty()) {
            const std::string& _s = this_._internal_compressed_map_dimensions_update();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.StateUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StateUpdate::ByteSizeLong(const MessageLite& base) {
          const StateUpdate& this_ = static_cast<const StateUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StateUpdate::ByteSizeLong() const {
          const StateUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.StateUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .comm.Enemy enemy_spawner_positions = 5;
             {
              total_size += 1UL * this_._internal_enemy_spawner_positions_size();
              for (const auto& msg : this_._internal_enemy_spawner_positions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes compressed_map_dimensions_update = 8;
            if (!this_._internal_compressed_map_dimensions_update().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_compressed_map_dimensions_update());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .comm.Player player = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
            // .comm.Item item = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_);
            }
            // .comm.Room room = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
            }
            // .comm.MapDimensionsUpdate map_dimensions_update = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.map_dimensions_update_);
            }
            // .comm.EnemyGotHitUpdate enemy_got_hit_update = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.enemy_got_hit_update_);
            }
          }
           {
            // .comm.StateVariant variant = 3;
            if (this_._internal_variant() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_variant());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StateUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateUpdate*>(&to_msg);
  auto& from = static_cast<const StateUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.StateUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_enemy_spawner_positions()->MergeFrom(
      from._internal_enemy_spawner_positions());
  if (!from._internal_compressed_map_dimensions_update().empty()) {
    _this->_internal_set_compressed_map_dimensions_update(from._internal_compressed_map_dimensions_update());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.player_ != nullptr);
      if (_this->_impl_.player_ == nullptr) {
        _this->_impl_.player_ =
            ::google::protobuf::Message::CopyConstruct<::comm::Player>(arena, *from._impl_.player_);
      } else {
        _this->_impl_.player_->MergeFrom(*from._impl_.player_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.item_ != nullptr);
      if (_this->_impl_.item_ == nullptr) {
        _this->_impl_.item_ =
            ::google::protobuf::Message::CopyConstruct<::comm::Item>(arena, *from._impl_.item_);
      } else {
        _this->_impl_.item_->MergeFrom(*from._impl_.item_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.room_ != nullptr);
      if (_this->_impl_.room_ == nullptr) {
        _this->_impl_.room_ =
            ::google::protobuf::Message::CopyConstruct<::comm::Room>(arena, *from._impl_.room_);
      } else {
        _this->_impl_.room_->MergeFrom(*from._impl_.room_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.map_dimensions_update_ != nullptr);
      if (_this->_impl_.map_dimensions_update_ == nullptr) {
        _this->_impl_.map_dimensions_update_ =
            ::google::protobuf::Message::CopyConstruct<::comm::MapDimensionsUpdate>(arena, *from._impl_.map_dimensions_update_);
      } else {
        _this->_impl_.map_dimensions_update_->MergeFrom(*from._impl_.map_dimensions_update_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.enemy_got_hit_update_ != nullptr);
      if (_this->_impl_.enemy_got_hit_update_ == nullptr) {
        _this->_impl_.enemy_got_hit_update_ =
            ::google::protobuf::Message::CopyConstruct<::comm::EnemyGotHitUpdate>(arena, *from._impl_.enemy_got_hit_update_);
      } else {
        _this->_impl_.enemy_got_hit_update_->MergeFrom(*from._impl_.enemy_got_hit_update_);
      }
    }
  }
  if (from._internal_variant() != 0) {
    _this->_impl_.variant_ = from._impl_.variant_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateUpdate::CopyFrom(const StateUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.StateUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateUpdate::InternalSwap(StateUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.enemy_spawner_positions_.InternalSwap(&other->_impl_.enemy_spawner_positions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compressed_map_dimensions_update_, &other->_impl_.compressed_map_dimensions_update_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.variant_)
      + sizeof(StateUpdate::_impl_.variant_)
      - PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata StateUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateUpdateSeries::_Internal {
 public:
};

StateUpdateSeries::StateUpdateSeries(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.StateUpdateSeries)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdateSeries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::StateUpdateSeries& from_msg)
      : updates_{visibility, arena, from.updates_},
        _cached_size_{0} {}

StateUpdateSeries::StateUpdateSeries(
    ::google::protobuf::Arena* arena,
    const StateUpdateSeries& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StateUpdateSeries* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:comm.StateUpdateSeries)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdateSeries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : updates_{visibility, arena},
        _cached_size_{0} {}

inline void StateUpdateSeries::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StateUpdateSeries::~StateUpdateSeries() {
  // @@protoc_insertion_point(destructor:comm.StateUpdateSeries)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateUpdateSeries::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StateUpdateSeries::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StateUpdateSeries_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StateUpdateSeries::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StateUpdateSeries>(),
            ::google::protobuf::Message::GetNewImpl<StateUpdateSeries>(),
            ::google::protobuf::Message::GetClearImpl<StateUpdateSeries>(), &StateUpdateSeries::ByteSizeLong,
                &StateUpdateSeries::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StateUpdateSeries, _impl_._cached_size_),
            false,
        },
        &StateUpdateSeries::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StateUpdateSeries::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StateUpdateSeries::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::StateUpdateSeries>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .comm.StateUpdate updates = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StateUpdateSeries, _impl_.updates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .comm.StateUpdate updates = 1;
    {PROTOBUF_FIELD_OFFSET(StateUpdateSeries, _impl_.updates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::StateUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateUpdateSeries::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.StateUpdateSeries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updates_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StateUpdateSeries::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StateUpdateSeries& this_ = static_cast<const StateUpdateSeries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StateUpdateSeries::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StateUpdateSeries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.StateUpdateSeries)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .comm.StateUpdate updates = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_updates_size());
               i < n; i++) {
            const auto& repfield = this_._internal_updates().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.StateUpdateSeries)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StateUpdateSeries::ByteSizeLong(const MessageLite& base) {
          const StateUpdateSeries& this_ = static_cast<const StateUpdateSeries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StateUpdateSeries::ByteSizeLong() const {
          const StateUpdateSeries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.StateUpdateSeries)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .comm.StateUpdate updates = 1;
             {
              total_size += 1UL * this_._internal_updates_size();
              for (const auto& msg : this_._internal_updates()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StateUpdateSeries::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateUpdateSeries*>(&to_msg);
  auto& from = static_cast<const StateUpdateSeries&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.StateUpdateSeries)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_updates()->MergeFrom(
      from._internal_updates());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateUpdateSeries::CopyFrom(const StateUpdateSeries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.StateUpdateSeries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateUpdateSeries::InternalSwap(StateUpdateSeries* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updates_.InternalSwap(&other->_impl_.updates_);
}

::google::protobuf::Metadata StateUpdateSeries::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Player::_Internal {
 public:
};

Player::Player(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::Player& from_msg)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

Player::Player(
    ::google::protobuf::Arena* arena,
    const Player& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Player* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, position_y_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::position_y_));

  // @@protoc_insertion_point(copy_constructor:comm.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void Player::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, position_y_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::position_y_));
}
Player::~Player() {
  // @@protoc_insertion_point(destructor:comm.Player)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Player::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Player::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Player_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Player::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Player>(),
            ::google::protobuf::Message::GetNewImpl<Player>(),
            ::google::protobuf::Message::GetClearImpl<Player>(), &Player::ByteSizeLong,
                &Player::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Player, _impl_._cached_size_),
            false,
        },
        &Player::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Player::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> Player::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::Player>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.id_)}},
    // repeated .comm.Item items = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.items_)}},
    // float position_x = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.position_x_)}},
    // float position_y = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.position_y_)}},
    // double player_attack_damage = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.player_attack_damage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .comm.Item items = 2;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // float position_x = 3;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 4;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // double player_attack_damage = 5;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.player_attack_damage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Item>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Player::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.Player)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.position_y_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.position_y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Player::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Player& this_ = static_cast<const Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Player::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.Player)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // repeated .comm.Item items = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // float position_x = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_position_x(), target);
          }

          // float position_y = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_position_y(), target);
          }

          // double player_attack_damage = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_player_attack_damage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_player_attack_damage(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.Player)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Player::ByteSizeLong(const MessageLite& base) {
          const Player& this_ = static_cast<const Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Player::ByteSizeLong() const {
          const Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.Player)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .comm.Item items = 2;
             {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // float position_x = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
              total_size += 5;
            }
            // double player_attack_damage = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_player_attack_damage()) != 0) {
              total_size += 9;
            }
            // float position_y = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Player::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Player*>(&to_msg);
  auto& from = static_cast<const Player&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.Player)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_x()) != 0) {
    _this->_impl_.position_x_ = from._impl_.position_x_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_player_attack_damage()) != 0) {
    _this->_impl_.player_attack_damage_ = from._impl_.player_attack_damage_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_y()) != 0) {
    _this->_impl_.position_y_ = from._impl_.position_y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Player::CopyFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Player::InternalSwap(Player* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Player, _impl_.position_y_)
      + sizeof(Player::_impl_.position_y_)
      - PROTOBUF_FIELD_OFFSET(Player, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata Player::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Item::_Internal {
 public:
};

Item::Item(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.Item)
}
Item::Item(
    ::google::protobuf::Arena* arena, const Item& from)
    : Item(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Item::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::type_));
}
Item::~Item() {
  // @@protoc_insertion_point(destructor:comm.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Item::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Item::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Item_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Item::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Item>(),
            ::google::protobuf::Message::GetNewImpl<Item>(),
            ::google::protobuf::Message::GetClearImpl<Item>(), &Item::ByteSizeLong,
                &Item::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Item, _impl_._cached_size_),
            false,
        },
        &Item::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Item::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Item::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::Item>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Item, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Item, _impl_.id_)}},
    // uint32 gen = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Item, _impl_.gen_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Item, _impl_.gen_)}},
    // .comm.ItemType type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Item, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Item, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Item, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gen = 2;
    {PROTOBUF_FIELD_OFFSET(Item, _impl_.gen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .comm.ItemType type = 3;
    {PROTOBUF_FIELD_OFFSET(Item, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.Item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Item::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Item& this_ = static_cast<const Item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Item::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.Item)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // uint32 gen = 2;
          if (this_._internal_gen() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_gen(), target);
          }

          // .comm.ItemType type = 3;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.Item)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Item::ByteSizeLong(const MessageLite& base) {
          const Item& this_ = static_cast<const Item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Item::ByteSizeLong() const {
          const Item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.Item)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // uint32 gen = 2;
            if (this_._internal_gen() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gen());
            }
            // .comm.ItemType type = 3;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Item::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Item*>(&to_msg);
  auto& from = static_cast<const Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_gen() != 0) {
    _this->_impl_.gen_ = from._impl_.gen_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Item::InternalSwap(Item* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Item, _impl_.type_)
      + sizeof(Item::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Item, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata Item::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InitialInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InitialInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_._has_bits_);
};

InitialInfo::InitialInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.InitialInfo)
}
inline PROTOBUF_NDEBUG_INLINE InitialInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::InitialInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        connected_players_{visibility, arena, from.connected_players_} {}

InitialInfo::InitialInfo(
    ::google::protobuf::Arena* arena,
    const InitialInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InitialInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::comm::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.next_item_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::comm::Item>(
                              arena, *from._impl_.next_item_)
                        : nullptr;
  _impl_.seed_ = from._impl_.seed_;

  // @@protoc_insertion_point(copy_constructor:comm.InitialInfo)
}
inline PROTOBUF_NDEBUG_INLINE InitialInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        connected_players_{visibility, arena} {}

inline void InitialInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, seed_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::seed_));
}
InitialInfo::~InitialInfo() {
  // @@protoc_insertion_point(destructor:comm.InitialInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InitialInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.player_;
  delete _impl_.next_item_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InitialInfo::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InitialInfo_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InitialInfo::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InitialInfo>(),
            ::google::protobuf::Message::GetNewImpl<InitialInfo>(),
            ::google::protobuf::Message::GetClearImpl<InitialInfo>(), &InitialInfo::ByteSizeLong,
                &InitialInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_._cached_size_),
            false,
        },
        &InitialInfo::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InitialInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> InitialInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::InitialInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .comm.Player connected_players = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.connected_players_)}},
    // .comm.Player player = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.player_)}},
    // int64 seed = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InitialInfo, _impl_.seed_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.seed_)}},
    // .comm.Item next_item = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.next_item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .comm.Player player = 1;
    {PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 seed = 2;
    {PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.seed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .comm.Item next_item = 3;
    {PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.next_item_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .comm.Player connected_players = 4;
    {PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.connected_players_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Player>()},
    {::_pbi::TcParser::GetTable<::comm::Item>()},
    {::_pbi::TcParser::GetTable<::comm::Player>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InitialInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.InitialInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connected_players_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.player_ != nullptr);
      _impl_.player_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.next_item_ != nullptr);
      _impl_.next_item_->Clear();
    }
  }
  _impl_.seed_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InitialInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InitialInfo& this_ = static_cast<const InitialInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InitialInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InitialInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.InitialInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .comm.Player player = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // int64 seed = 2;
          if (this_._internal_seed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_seed(), target);
          }

          // .comm.Item next_item = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.next_item_, this_._impl_.next_item_->GetCachedSize(), target,
                stream);
          }

          // repeated .comm.Player connected_players = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_connected_players_size());
               i < n; i++) {
            const auto& repfield = this_._internal_connected_players().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.InitialInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InitialInfo::ByteSizeLong(const MessageLite& base) {
          const InitialInfo& this_ = static_cast<const InitialInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InitialInfo::ByteSizeLong() const {
          const InitialInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.InitialInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .comm.Player connected_players = 4;
             {
              total_size += 1UL * this_._internal_connected_players_size();
              for (const auto& msg : this_._internal_connected_players()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .comm.Player player = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
            // .comm.Item next_item = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.next_item_);
            }
          }
           {
            // int64 seed = 2;
            if (this_._internal_seed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_seed());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InitialInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InitialInfo*>(&to_msg);
  auto& from = static_cast<const InitialInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.InitialInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connected_players()->MergeFrom(
      from._internal_connected_players());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.player_ != nullptr);
      if (_this->_impl_.player_ == nullptr) {
        _this->_impl_.player_ =
            ::google::protobuf::Message::CopyConstruct<::comm::Player>(arena, *from._impl_.player_);
      } else {
        _this->_impl_.player_->MergeFrom(*from._impl_.player_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.next_item_ != nullptr);
      if (_this->_impl_.next_item_ == nullptr) {
        _this->_impl_.next_item_ =
            ::google::protobuf::Message::CopyConstruct<::comm::Item>(arena, *from._impl_.next_item_);
      } else {
        _this->_impl_.next_item_->MergeFrom(*from._impl_.next_item_);
      }
    }
  }
  if (from._internal_seed() != 0) {
    _this->_impl_.seed_ = from._impl_.seed_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitialInfo::CopyFrom(const InitialInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.InitialInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InitialInfo::InternalSwap(InitialInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.connected_players_.InternalSwap(&other->_impl_.connected_players_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.seed_)
      + sizeof(InitialInfo::_impl_.seed_)
      - PROTOBUF_FIELD_OFFSET(InitialInfo, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata InitialInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Room::_Internal {
 public:
};

Room::Room(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.Room)
}
Room::Room(
    ::google::protobuf::Arena* arena, const Room& from)
    : Room(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Room::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
Room::~Room() {
  // @@protoc_insertion_point(destructor:comm.Room)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Room::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Room::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Room_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Room::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Room>(),
            ::google::protobuf::Message::GetNewImpl<Room>(),
            ::google::protobuf::Message::GetClearImpl<Room>(), &Room::ByteSizeLong,
                &Room::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Room, _impl_._cached_size_),
            false,
        },
        &Room::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Room::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Room::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::Room>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.y_)}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Room::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Room::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.Room)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 x = 1;
          if (this_._internal_x() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_x(), target);
          }

          // int32 y = 2;
          if (this_._internal_y() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_y(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.Room)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Room::ByteSizeLong(const MessageLite& base) {
          const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Room::ByteSizeLong() const {
          const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.Room)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 x = 1;
            if (this_._internal_x() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_x());
            }
            // int32 y = 2;
            if (this_._internal_y() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_y());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Room::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Room*>(&to_msg);
  auto& from = static_cast<const Room&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.Room)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Room::InternalSwap(Room* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Room, _impl_.y_)
      + sizeof(Room::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Room, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Room::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Obstacle::_Internal {
 public:
};

Obstacle::Obstacle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.Obstacle)
}
Obstacle::Obstacle(
    ::google::protobuf::Arena* arena, const Obstacle& from)
    : Obstacle(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Obstacle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Obstacle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, left_),
           0,
           offsetof(Impl_, top_) -
               offsetof(Impl_, left_) +
               sizeof(Impl_::top_));
}
Obstacle::~Obstacle() {
  // @@protoc_insertion_point(destructor:comm.Obstacle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Obstacle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Obstacle::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Obstacle_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Obstacle::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Obstacle>(),
            ::google::protobuf::Message::GetNewImpl<Obstacle>(),
            ::google::protobuf::Message::GetClearImpl<Obstacle>(), &Obstacle::ByteSizeLong,
                &Obstacle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Obstacle, _impl_._cached_size_),
            false,
        },
        &Obstacle::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Obstacle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Obstacle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::Obstacle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float top = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Obstacle, _impl_.top_)}},
    // float left = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Obstacle, _impl_.left_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float left = 1;
    {PROTOBUF_FIELD_OFFSET(Obstacle, _impl_.left_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float top = 2;
    {PROTOBUF_FIELD_OFFSET(Obstacle, _impl_.top_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Obstacle::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.Obstacle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.left_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.top_) -
      reinterpret_cast<char*>(&_impl_.left_)) + sizeof(_impl_.top_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Obstacle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Obstacle& this_ = static_cast<const Obstacle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Obstacle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Obstacle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.Obstacle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float left = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_left()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_left(), target);
          }

          // float top = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_top()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_top(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.Obstacle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Obstacle::ByteSizeLong(const MessageLite& base) {
          const Obstacle& this_ = static_cast<const Obstacle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Obstacle::ByteSizeLong() const {
          const Obstacle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.Obstacle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float left = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_left()) != 0) {
              total_size += 5;
            }
            // float top = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_top()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Obstacle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Obstacle*>(&to_msg);
  auto& from = static_cast<const Obstacle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.Obstacle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_left()) != 0) {
    _this->_impl_.left_ = from._impl_.left_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_top()) != 0) {
    _this->_impl_.top_ = from._impl_.top_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Obstacle::CopyFrom(const Obstacle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.Obstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Obstacle::InternalSwap(Obstacle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Obstacle, _impl_.top_)
      + sizeof(Obstacle::_impl_.top_)
      - PROTOBUF_FIELD_OFFSET(Obstacle, _impl_.left_)>(
          reinterpret_cast<char*>(&_impl_.left_),
          reinterpret_cast<char*>(&other->_impl_.left_));
}

::google::protobuf::Metadata Obstacle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Enemy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Enemy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Enemy, _impl_._has_bits_);
};

Enemy::Enemy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.Enemy)
}
inline PROTOBUF_NDEBUG_INLINE Enemy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::Enemy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_(arena, from.type_),
        name_(arena, from.name_) {}

Enemy::Enemy(
    ::google::protobuf::Arena* arena,
    const Enemy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Enemy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.texture_data_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::comm::TextureData>(
                              arena, *from._impl_.texture_data_)
                        : nullptr;
  _impl_.collision_data_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::comm::CollisionData>(
                              arena, *from._impl_.collision_data_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, position_y_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::position_y_));

  // @@protoc_insertion_point(copy_constructor:comm.Enemy)
}
inline PROTOBUF_NDEBUG_INLINE Enemy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_(arena),
        name_(arena) {}

inline void Enemy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, texture_data_),
           0,
           offsetof(Impl_, position_y_) -
               offsetof(Impl_, texture_data_) +
               sizeof(Impl_::position_y_));
}
Enemy::~Enemy() {
  // @@protoc_insertion_point(destructor:comm.Enemy)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Enemy::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  _impl_.name_.Destroy();
  delete _impl_.texture_data_;
  delete _impl_.collision_data_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Enemy::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Enemy_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Enemy::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Enemy>(),
            ::google::protobuf::Message::GetNewImpl<Enemy>(),
            ::google::protobuf::Message::GetClearImpl<Enemy>(), &Enemy::ByteSizeLong,
                &Enemy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Enemy, _impl_._cached_size_),
            false,
        },
        &Enemy::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Enemy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 35, 2> Enemy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Enemy, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::Enemy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Enemy, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.id_)}},
    // float position_x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.position_x_)}},
    // float position_y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.position_y_)}},
    // string type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.type_)}},
    // string name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.name_)}},
    // double hp = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.hp_)}},
    // double damage = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.damage_)}},
    // .comm.TextureData texture_data = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.texture_data_)}},
    // .comm.CollisionData collision_data = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 1, 1, PROTOBUF_FIELD_OFFSET(Enemy, _impl_.collision_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float position_x = 2;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.position_x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 3;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.position_y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string type = 4;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 5;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double hp = 6;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.hp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double damage = 7;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.damage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .comm.TextureData texture_data = 8;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.texture_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .comm.CollisionData collision_data = 9;
    {PROTOBUF_FIELD_OFFSET(Enemy, _impl_.collision_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::TextureData>()},
    {::_pbi::TcParser::GetTable<::comm::CollisionData>()},
  }}, {{
    "\12\0\0\0\4\4\0\0\0\0\0\0\0\0\0\0"
    "comm.Enemy"
    "type"
    "name"
  }},
};

PROTOBUF_NOINLINE void Enemy::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.Enemy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.texture_data_ != nullptr);
      _impl_.texture_data_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.collision_data_ != nullptr);
      _impl_.collision_data_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.position_y_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.position_y_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Enemy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Enemy& this_ = static_cast<const Enemy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Enemy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Enemy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.Enemy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // float position_x = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_position_x(), target);
          }

          // float position_y = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_position_y(), target);
          }

          // string type = 4;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "comm.Enemy.type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string name = 5;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "comm.Enemy.name");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // double hp = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_hp()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_hp(), target);
          }

          // double damage = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_damage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_damage(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .comm.TextureData texture_data = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.texture_data_, this_._impl_.texture_data_->GetCachedSize(), target,
                stream);
          }

          // .comm.CollisionData collision_data = 9;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.collision_data_, this_._impl_.collision_data_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.Enemy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Enemy::ByteSizeLong(const MessageLite& base) {
          const Enemy& this_ = static_cast<const Enemy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Enemy::ByteSizeLong() const {
          const Enemy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.Enemy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string type = 4;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string name = 5;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .comm.TextureData texture_data = 8;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.texture_data_);
            }
            // .comm.CollisionData collision_data = 9;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.collision_data_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // float position_x = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_x()) != 0) {
              total_size += 5;
            }
            // double hp = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_hp()) != 0) {
              total_size += 9;
            }
            // double damage = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_damage()) != 0) {
              total_size += 9;
            }
            // float position_y = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_position_y()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Enemy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Enemy*>(&to_msg);
  auto& from = static_cast<const Enemy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.Enemy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.texture_data_ != nullptr);
      if (_this->_impl_.texture_data_ == nullptr) {
        _this->_impl_.texture_data_ =
            ::google::protobuf::Message::CopyConstruct<::comm::TextureData>(arena, *from._impl_.texture_data_);
      } else {
        _this->_impl_.texture_data_->MergeFrom(*from._impl_.texture_data_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.collision_data_ != nullptr);
      if (_this->_impl_.collision_data_ == nullptr) {
        _this->_impl_.collision_data_ =
            ::google::protobuf::Message::CopyConstruct<::comm::CollisionData>(arena, *from._impl_.collision_data_);
      } else {
        _this->_impl_.collision_data_->MergeFrom(*from._impl_.collision_data_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_x()) != 0) {
    _this->_impl_.position_x_ = from._impl_.position_x_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_hp()) != 0) {
    _this->_impl_.hp_ = from._impl_.hp_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_damage()) != 0) {
    _this->_impl_.damage_ = from._impl_.damage_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_position_y()) != 0) {
    _this->_impl_.position_y_ = from._impl_.position_y_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Enemy::CopyFrom(const Enemy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.Enemy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Enemy::InternalSwap(Enemy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Enemy, _impl_.position_y_)
      + sizeof(Enemy::_impl_.position_y_)
      - PROTOBUF_FIELD_OFFSET(Enemy, _impl_.texture_data_)>(
          reinterpret_cast<char*>(&_impl_.texture_data_),
          reinterpret_cast<char*>(&other->_impl_.texture_data_));
}

::google::protobuf::Metadata Enemy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextureData::_Internal {
 public:
};

TextureData::TextureData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.TextureData)
}
inline PROTOBUF_NDEBUG_INLINE TextureData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::TextureData& from_msg)
      : tile_set_(arena, from.tile_set_),
        _cached_size_{0} {}

TextureData::TextureData(
    ::google::protobuf::Arena* arena,
    const TextureData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextureData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tile_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tile_id_),
           offsetof(Impl_, tile_layer_) -
               offsetof(Impl_, tile_id_) +
               sizeof(Impl_::tile_layer_));

  // @@protoc_insertion_point(copy_constructor:comm.TextureData)
}
inline PROTOBUF_NDEBUG_INLINE TextureData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tile_set_(arena),
        _cached_size_{0} {}

inline void TextureData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tile_id_),
           0,
           offsetof(Impl_, tile_layer_) -
               offsetof(Impl_, tile_id_) +
               sizeof(Impl_::tile_layer_));
}
TextureData::~TextureData() {
  // @@protoc_insertion_point(destructor:comm.TextureData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TextureData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tile_set_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TextureData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TextureData_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TextureData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TextureData>(),
            ::google::protobuf::Message::GetNewImpl<TextureData>(),
            ::google::protobuf::Message::GetClearImpl<TextureData>(), &TextureData::ByteSizeLong,
                &TextureData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TextureData, _impl_._cached_size_),
            false,
        },
        &TextureData::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TextureData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 33, 2> TextureData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::TextureData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 tile_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureData, _impl_.tile_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_id_)}},
    // string tile_set = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_set_)}},
    // int32 tile_layer = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextureData, _impl_.tile_layer_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_layer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 tile_id = 1;
    {PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string tile_set = 2;
    {PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_set_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 tile_layer = 3;
    {PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_layer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\10\0\0\0\0\0"
    "comm.TextureData"
    "tile_set"
  }},
};

PROTOBUF_NOINLINE void TextureData::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.TextureData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tile_set_.ClearToEmpty();
  ::memset(&_impl_.tile_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tile_layer_) -
      reinterpret_cast<char*>(&_impl_.tile_id_)) + sizeof(_impl_.tile_layer_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TextureData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TextureData& this_ = static_cast<const TextureData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TextureData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TextureData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.TextureData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 tile_id = 1;
          if (this_._internal_tile_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_tile_id(), target);
          }

          // string tile_set = 2;
          if (!this_._internal_tile_set().empty()) {
            const std::string& _s = this_._internal_tile_set();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "comm.TextureData.tile_set");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 tile_layer = 3;
          if (this_._internal_tile_layer() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_tile_layer(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.TextureData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TextureData::ByteSizeLong(const MessageLite& base) {
          const TextureData& this_ = static_cast<const TextureData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TextureData::ByteSizeLong() const {
          const TextureData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.TextureData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string tile_set = 2;
            if (!this_._internal_tile_set().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tile_set());
            }
            // uint32 tile_id = 1;
            if (this_._internal_tile_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_tile_id());
            }
            // int32 tile_layer = 3;
            if (this_._internal_tile_layer() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_tile_layer());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TextureData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextureData*>(&to_msg);
  auto& from = static_cast<const TextureData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.TextureData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tile_set().empty()) {
    _this->_internal_set_tile_set(from._internal_tile_set());
  }
  if (from._internal_tile_id() != 0) {
    _this->_impl_.tile_id_ = from._impl_.tile_id_;
  }
  if (from._internal_tile_layer() != 0) {
    _this->_impl_.tile_layer_ = from._impl_.tile_layer_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextureData::CopyFrom(const TextureData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.TextureData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextureData::InternalSwap(TextureData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tile_set_, &other->_impl_.tile_set_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_layer_)
      + sizeof(TextureData::_impl_.tile_layer_)
      - PROTOBUF_FIELD_OFFSET(TextureData, _impl_.tile_id_)>(
          reinterpret_cast<char*>(&_impl_.tile_id_),
          reinterpret_cast<char*>(&other->_impl_.tile_id_));
}

::google::protobuf::Metadata TextureData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CollisionData::_Internal {
 public:
};

CollisionData::CollisionData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.CollisionData)
}
CollisionData::CollisionData(
    ::google::protobuf::Arena* arena, const CollisionData& from)
    : CollisionData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CollisionData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CollisionData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, y_offset_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::y_offset_));
}
CollisionData::~CollisionData() {
  // @@protoc_insertion_point(destructor:comm.CollisionData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollisionData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CollisionData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CollisionData_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CollisionData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CollisionData>(),
            ::google::protobuf::Message::GetNewImpl<CollisionData>(),
            ::google::protobuf::Message::GetClearImpl<CollisionData>(), &CollisionData::ByteSizeLong,
                &CollisionData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CollisionData, _impl_._cached_size_),
            false,
        },
        &CollisionData::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CollisionData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CollisionData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::CollisionData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollisionData, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.type_)}},
    // float width = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.width_)}},
    // float height = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.height_)}},
    // float x_offset = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.x_offset_)}},
    // float y_offset = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.y_offset_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float width = 2;
    {PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float height = 3;
    {PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float x_offset = 4;
    {PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.x_offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y_offset = 5;
    {PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.y_offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CollisionData::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.CollisionData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_offset_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.y_offset_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CollisionData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CollisionData& this_ = static_cast<const CollisionData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CollisionData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CollisionData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.CollisionData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 type = 1;
          if (this_._internal_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_type(), target);
          }

          // float width = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_width()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_width(), target);
          }

          // float height = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_height()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_height(), target);
          }

          // float x_offset = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x_offset()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_x_offset(), target);
          }

          // float y_offset = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y_offset()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_y_offset(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.CollisionData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CollisionData::ByteSizeLong(const MessageLite& base) {
          const CollisionData& this_ = static_cast<const CollisionData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CollisionData::ByteSizeLong() const {
          const CollisionData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.CollisionData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 type = 1;
            if (this_._internal_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_type());
            }
            // float width = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_width()) != 0) {
              total_size += 5;
            }
            // float height = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_height()) != 0) {
              total_size += 5;
            }
            // float x_offset = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x_offset()) != 0) {
              total_size += 5;
            }
            // float y_offset = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y_offset()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CollisionData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CollisionData*>(&to_msg);
  auto& from = static_cast<const CollisionData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.CollisionData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_width()) != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_height()) != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x_offset()) != 0) {
    _this->_impl_.x_offset_ = from._impl_.x_offset_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y_offset()) != 0) {
    _this->_impl_.y_offset_ = from._impl_.y_offset_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollisionData::CopyFrom(const CollisionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.CollisionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CollisionData::InternalSwap(CollisionData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.y_offset_)
      + sizeof(CollisionData::_impl_.y_offset_)
      - PROTOBUF_FIELD_OFFSET(CollisionData, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata CollisionData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EnemyGotHitUpdate::_Internal {
 public:
};

EnemyGotHitUpdate::EnemyGotHitUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.EnemyGotHitUpdate)
}
EnemyGotHitUpdate::EnemyGotHitUpdate(
    ::google::protobuf::Arena* arena, const EnemyGotHitUpdate& from)
    : EnemyGotHitUpdate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EnemyGotHitUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EnemyGotHitUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, enemy_id_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::enemy_id_));
}
EnemyGotHitUpdate::~EnemyGotHitUpdate() {
  // @@protoc_insertion_point(destructor:comm.EnemyGotHitUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EnemyGotHitUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    EnemyGotHitUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_EnemyGotHitUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &EnemyGotHitUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<EnemyGotHitUpdate>(),
            ::google::protobuf::Message::GetNewImpl<EnemyGotHitUpdate>(),
            ::google::protobuf::Message::GetClearImpl<EnemyGotHitUpdate>(), &EnemyGotHitUpdate::ByteSizeLong,
                &EnemyGotHitUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(EnemyGotHitUpdate, _impl_._cached_size_),
            false,
        },
        &EnemyGotHitUpdate::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* EnemyGotHitUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EnemyGotHitUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::EnemyGotHitUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 enemy_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EnemyGotHitUpdate, _impl_.enemy_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyGotHitUpdate, _impl_.enemy_id_)}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EnemyGotHitUpdate, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyGotHitUpdate, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(EnemyGotHitUpdate, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 enemy_id = 2;
    {PROTOBUF_FIELD_OFFSET(EnemyGotHitUpdate, _impl_.enemy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EnemyGotHitUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.EnemyGotHitUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enemy_id_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.enemy_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EnemyGotHitUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EnemyGotHitUpdate& this_ = static_cast<const EnemyGotHitUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EnemyGotHitUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EnemyGotHitUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.EnemyGotHitUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 player_id = 1;
          if (this_._internal_player_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_player_id(), target);
          }

          // uint32 enemy_id = 2;
          if (this_._internal_enemy_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_enemy_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.EnemyGotHitUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EnemyGotHitUpdate::ByteSizeLong(const MessageLite& base) {
          const EnemyGotHitUpdate& this_ = static_cast<const EnemyGotHitUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EnemyGotHitUpdate::ByteSizeLong() const {
          const EnemyGotHitUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.EnemyGotHitUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 player_id = 1;
            if (this_._internal_player_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_player_id());
            }
            // uint32 enemy_id = 2;
            if (this_._internal_enemy_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_enemy_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EnemyGotHitUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EnemyGotHitUpdate*>(&to_msg);
  auto& from = static_cast<const EnemyGotHitUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.EnemyGotHitUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  if (from._internal_enemy_id() != 0) {
    _this->_impl_.enemy_id_ = from._impl_.enemy_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnemyGotHitUpdate::CopyFrom(const EnemyGotHitUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.EnemyGotHitUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EnemyGotHitUpdate::InternalSwap(EnemyGotHitUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnemyGotHitUpdate, _impl_.enemy_id_)
      + sizeof(EnemyGotHitUpdate::_impl_.enemy_id_)
      - PROTOBUF_FIELD_OFFSET(EnemyGotHitUpdate, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata EnemyGotHitUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapPositionsUpdate::_Internal {
 public:
};

MapPositionsUpdate::MapPositionsUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.MapPositionsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MapPositionsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::MapPositionsUpdate& from_msg)
      : players_{visibility, arena, from.players_},
        enemies_{visibility, arena, from.enemies_},
        _cached_size_{0} {}

MapPositionsUpdate::MapPositionsUpdate(
    ::google::protobuf::Arena* arena,
    const MapPositionsUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapPositionsUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:comm.MapPositionsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MapPositionsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        enemies_{visibility, arena},
        _cached_size_{0} {}

inline void MapPositionsUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MapPositionsUpdate::~MapPositionsUpdate() {
  // @@protoc_insertion_point(destructor:comm.MapPositionsUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MapPositionsUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MapPositionsUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MapPositionsUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MapPositionsUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MapPositionsUpdate>(),
            ::google::protobuf::Message::GetNewImpl<MapPositionsUpdate>(),
            ::google::protobuf::Message::GetClearImpl<MapPositionsUpdate>(), &MapPositionsUpdate::ByteSizeLong,
                &MapPositionsUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MapPositionsUpdate, _impl_._cached_size_),
            false,
        },
        &MapPositionsUpdate::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MapPositionsUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> MapPositionsUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::MapPositionsUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .comm.Enemy enemies = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(MapPositionsUpdate, _impl_.enemies_)}},
    // repeated .comm.Player players = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MapPositionsUpdate, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .comm.Player players = 1;
    {PROTOBUF_FIELD_OFFSET(MapPositionsUpdate, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .comm.Enemy enemies = 2;
    {PROTOBUF_FIELD_OFFSET(MapPositionsUpdate, _impl_.enemies_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Player>()},
    {::_pbi::TcParser::GetTable<::comm::Enemy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MapPositionsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.MapPositionsUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.enemies_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MapPositionsUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MapPositionsUpdate& this_ = static_cast<const MapPositionsUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MapPositionsUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MapPositionsUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.MapPositionsUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .comm.Player players = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_players_size());
               i < n; i++) {
            const auto& repfield = this_._internal_players().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .comm.Enemy enemies = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_enemies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_enemies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.MapPositionsUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MapPositionsUpdate::ByteSizeLong(const MessageLite& base) {
          const MapPositionsUpdate& this_ = static_cast<const MapPositionsUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MapPositionsUpdate::ByteSizeLong() const {
          const MapPositionsUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.MapPositionsUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .comm.Player players = 1;
             {
              total_size += 1UL * this_._internal_players_size();
              for (const auto& msg : this_._internal_players()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .comm.Enemy enemies = 2;
             {
              total_size += 1UL * this_._internal_enemies_size();
              for (const auto& msg : this_._internal_enemies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MapPositionsUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapPositionsUpdate*>(&to_msg);
  auto& from = static_cast<const MapPositionsUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.MapPositionsUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_mutable_enemies()->MergeFrom(
      from._internal_enemies());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapPositionsUpdate::CopyFrom(const MapPositionsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.MapPositionsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapPositionsUpdate::InternalSwap(MapPositionsUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  _impl_.enemies_.InternalSwap(&other->_impl_.enemies_);
}

::google::protobuf::Metadata MapPositionsUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapDimensionsUpdate::_Internal {
 public:
};

MapDimensionsUpdate::MapDimensionsUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.MapDimensionsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MapDimensionsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::MapDimensionsUpdate& from_msg)
      : obstacles_{visibility, arena, from.obstacles_},
        _cached_size_{0} {}

MapDimensionsUpdate::MapDimensionsUpdate(
    ::google::protobuf::Arena* arena,
    const MapDimensionsUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapDimensionsUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:comm.MapDimensionsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE MapDimensionsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : obstacles_{visibility, arena},
        _cached_size_{0} {}

inline void MapDimensionsUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MapDimensionsUpdate::~MapDimensionsUpdate() {
  // @@protoc_insertion_point(destructor:comm.MapDimensionsUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MapDimensionsUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MapDimensionsUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MapDimensionsUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MapDimensionsUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MapDimensionsUpdate>(),
            ::google::protobuf::Message::GetNewImpl<MapDimensionsUpdate>(),
            ::google::protobuf::Message::GetClearImpl<MapDimensionsUpdate>(), &MapDimensionsUpdate::ByteSizeLong,
                &MapDimensionsUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MapDimensionsUpdate, _impl_._cached_size_),
            false,
        },
        &MapDimensionsUpdate::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MapDimensionsUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MapDimensionsUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::MapDimensionsUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .comm.Obstacle obstacles = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MapDimensionsUpdate, _impl_.obstacles_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .comm.Obstacle obstacles = 1;
    {PROTOBUF_FIELD_OFFSET(MapDimensionsUpdate, _impl_.obstacles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::comm::Obstacle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MapDimensionsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.MapDimensionsUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.obstacles_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MapDimensionsUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MapDimensionsUpdate& this_ = static_cast<const MapDimensionsUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MapDimensionsUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MapDimensionsUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.MapDimensionsUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .comm.Obstacle obstacles = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_obstacles_size());
               i < n; i++) {
            const auto& repfield = this_._internal_obstacles().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.MapDimensionsUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MapDimensionsUpdate::ByteSizeLong(const MessageLite& base) {
          const MapDimensionsUpdate& this_ = static_cast<const MapDimensionsUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MapDimensionsUpdate::ByteSizeLong() const {
          const MapDimensionsUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.MapDimensionsUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .comm.Obstacle obstacles = 1;
             {
              total_size += 1UL * this_._internal_obstacles_size();
              for (const auto& msg : this_._internal_obstacles()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MapDimensionsUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapDimensionsUpdate*>(&to_msg);
  auto& from = static_cast<const MapDimensionsUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.MapDimensionsUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_obstacles()->MergeFrom(
      from._internal_obstacles());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapDimensionsUpdate::CopyFrom(const MapDimensionsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.MapDimensionsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapDimensionsUpdate::InternalSwap(MapDimensionsUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.obstacles_.InternalSwap(&other->_impl_.obstacles_);
}

::google::protobuf::Metadata MapDimensionsUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpawningEnemiesResponse::_Internal {
 public:
};

SpawningEnemiesResponse::SpawningEnemiesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:comm.SpawningEnemiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SpawningEnemiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::comm::SpawningEnemiesResponse& from_msg)
      : enemy_id_{visibility, arena, from.enemy_id_},
        _enemy_id_cached_byte_size_{0},
        _cached_size_{0} {}

SpawningEnemiesResponse::SpawningEnemiesResponse(
    ::google::protobuf::Arena* arena,
    const SpawningEnemiesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpawningEnemiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:comm.SpawningEnemiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SpawningEnemiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : enemy_id_{visibility, arena},
        _enemy_id_cached_byte_size_{0},
        _cached_size_{0} {}

inline void SpawningEnemiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SpawningEnemiesResponse::~SpawningEnemiesResponse() {
  // @@protoc_insertion_point(destructor:comm.SpawningEnemiesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpawningEnemiesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SpawningEnemiesResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SpawningEnemiesResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SpawningEnemiesResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SpawningEnemiesResponse>(),
            ::google::protobuf::Message::GetNewImpl<SpawningEnemiesResponse>(),
            ::google::protobuf::Message::GetClearImpl<SpawningEnemiesResponse>(), &SpawningEnemiesResponse::ByteSizeLong,
                &SpawningEnemiesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SpawningEnemiesResponse, _impl_._cached_size_),
            false,
        },
        &SpawningEnemiesResponse::kDescriptorMethods,
        &descriptor_table_comm_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SpawningEnemiesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SpawningEnemiesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::comm::SpawningEnemiesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 enemy_id = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SpawningEnemiesResponse, _impl_.enemy_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 enemy_id = 1;
    {PROTOBUF_FIELD_OFFSET(SpawningEnemiesResponse, _impl_.enemy_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SpawningEnemiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:comm.SpawningEnemiesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enemy_id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SpawningEnemiesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SpawningEnemiesResponse& this_ = static_cast<const SpawningEnemiesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SpawningEnemiesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SpawningEnemiesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:comm.SpawningEnemiesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated uint32 enemy_id = 1;
          {
            int byte_size = this_._impl_._enemy_id_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  1, this_._internal_enemy_id(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:comm.SpawningEnemiesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SpawningEnemiesResponse::ByteSizeLong(const MessageLite& base) {
          const SpawningEnemiesResponse& this_ = static_cast<const SpawningEnemiesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SpawningEnemiesResponse::ByteSizeLong() const {
          const SpawningEnemiesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:comm.SpawningEnemiesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 enemy_id = 1;
             {
              std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
                  this_._internal_enemy_id())
              ;
              this_._impl_._enemy_id_cached_byte_size_.Set(
                  ::_pbi::ToCachedSize(data_size));
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size))
              ;
              total_size += tag_size + data_size;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SpawningEnemiesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpawningEnemiesResponse*>(&to_msg);
  auto& from = static_cast<const SpawningEnemiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:comm.SpawningEnemiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_enemy_id()->MergeFrom(from._internal_enemy_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpawningEnemiesResponse::CopyFrom(const SpawningEnemiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:comm.SpawningEnemiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpawningEnemiesResponse::InternalSwap(SpawningEnemiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.enemy_id_.InternalSwap(&other->_impl_.enemy_id_);
}

::google::protobuf::Metadata SpawningEnemiesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace comm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_comm_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
