// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: comm.proto
// Protobuf C++ Version: 5.27.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_comm_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_comm_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_comm_2eproto;
namespace comm {
class PositionUpdate;
struct PositionUpdateDefaultTypeInternal;
extern PositionUpdateDefaultTypeInternal _PositionUpdate_default_instance_;
class StateUpdate;
struct StateUpdateDefaultTypeInternal;
extern StateUpdateDefaultTypeInternal _StateUpdate_default_instance_;
}  // namespace comm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace comm {
enum StateVariant : int {
  NONE = 0,
  CONNECTED = 1,
  DISCONNECTED = 2,
  StateVariant_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StateVariant_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StateVariant_IsValid(int value);
extern const uint32_t StateVariant_internal_data_[];
constexpr StateVariant StateVariant_MIN = static_cast<StateVariant>(0);
constexpr StateVariant StateVariant_MAX = static_cast<StateVariant>(2);
constexpr int StateVariant_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
StateVariant_descriptor();
template <typename T>
const std::string& StateVariant_Name(T value) {
  static_assert(std::is_same<T, StateVariant>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StateVariant_Name().");
  return StateVariant_Name(static_cast<StateVariant>(value));
}
template <>
inline const std::string& StateVariant_Name(StateVariant value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StateVariant_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool StateVariant_Parse(absl::string_view name, StateVariant* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateVariant>(
      StateVariant_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class StateUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.StateUpdate) */ {
 public:
  inline StateUpdate() : StateUpdate(nullptr) {}
  ~StateUpdate() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateUpdate(const StateUpdate& from) : StateUpdate(nullptr, from) {}
  inline StateUpdate(StateUpdate&& from) noexcept
      : StateUpdate(nullptr, std::move(from)) {}
  inline StateUpdate& operator=(const StateUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateUpdate& operator=(StateUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateUpdate* internal_default_instance() {
    return reinterpret_cast<const StateUpdate*>(
        &_StateUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StateUpdate& a, StateUpdate& b) { a.Swap(&b); }
  inline void Swap(StateUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateUpdate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StateUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateUpdate& from) { StateUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.StateUpdate"; }

 protected:
  explicit StateUpdate(::google::protobuf::Arena* arena);
  StateUpdate(::google::protobuf::Arena* arena, const StateUpdate& from);
  StateUpdate(::google::protobuf::Arena* arena, StateUpdate&& from) noexcept
      : StateUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kVariantFieldNumber = 2,
  };
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // .comm.StateVariant variant = 2;
  void clear_variant() ;
  ::comm::StateVariant variant() const;
  void set_variant(::comm::StateVariant value);

  private:
  ::comm::StateVariant _internal_variant() const;
  void _internal_set_variant(::comm::StateVariant value);

  public:
  // @@protoc_insertion_point(class_scope:comm.StateUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StateUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t id_;
    int variant_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class PositionUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.PositionUpdate) */ {
 public:
  inline PositionUpdate() : PositionUpdate(nullptr) {}
  ~PositionUpdate() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PositionUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline PositionUpdate(const PositionUpdate& from) : PositionUpdate(nullptr, from) {}
  inline PositionUpdate(PositionUpdate&& from) noexcept
      : PositionUpdate(nullptr, std::move(from)) {}
  inline PositionUpdate& operator=(const PositionUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionUpdate& operator=(PositionUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PositionUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const PositionUpdate* internal_default_instance() {
    return reinterpret_cast<const PositionUpdate*>(
        &_PositionUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PositionUpdate& a, PositionUpdate& b) { a.Swap(&b); }
  inline void Swap(PositionUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PositionUpdate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PositionUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PositionUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PositionUpdate& from) { PositionUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PositionUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.PositionUpdate"; }

 protected:
  explicit PositionUpdate(::google::protobuf::Arena* arena);
  PositionUpdate(::google::protobuf::Arena* arena, const PositionUpdate& from);
  PositionUpdate(::google::protobuf::Arena* arena, PositionUpdate&& from) noexcept
      : PositionUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // uint32 entity_id = 1;
  void clear_entity_id() ;
  ::uint32_t entity_id() const;
  void set_entity_id(::uint32_t value);

  private:
  ::uint32_t _internal_entity_id() const;
  void _internal_set_entity_id(::uint32_t value);

  public:
  // float x = 2;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 3;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:comm.PositionUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PositionUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t entity_id_;
    float x_;
    float y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PositionUpdate

// uint32 entity_id = 1;
inline void PositionUpdate::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = 0u;
}
inline ::uint32_t PositionUpdate::entity_id() const {
  // @@protoc_insertion_point(field_get:comm.PositionUpdate.entity_id)
  return _internal_entity_id();
}
inline void PositionUpdate::set_entity_id(::uint32_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:comm.PositionUpdate.entity_id)
}
inline ::uint32_t PositionUpdate::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_;
}
inline void PositionUpdate::_internal_set_entity_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = value;
}

// float x = 2;
inline void PositionUpdate::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float PositionUpdate::x() const {
  // @@protoc_insertion_point(field_get:comm.PositionUpdate.x)
  return _internal_x();
}
inline void PositionUpdate::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:comm.PositionUpdate.x)
}
inline float PositionUpdate::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void PositionUpdate::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 3;
inline void PositionUpdate::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float PositionUpdate::y() const {
  // @@protoc_insertion_point(field_get:comm.PositionUpdate.y)
  return _internal_y();
}
inline void PositionUpdate::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:comm.PositionUpdate.y)
}
inline float PositionUpdate::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void PositionUpdate::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// StateUpdate

// uint32 id = 1;
inline void StateUpdate::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t StateUpdate::id() const {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.id)
  return _internal_id();
}
inline void StateUpdate::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:comm.StateUpdate.id)
}
inline ::uint32_t StateUpdate::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void StateUpdate::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .comm.StateVariant variant = 2;
inline void StateUpdate::clear_variant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variant_ = 0;
}
inline ::comm::StateVariant StateUpdate::variant() const {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.variant)
  return _internal_variant();
}
inline void StateUpdate::set_variant(::comm::StateVariant value) {
  _internal_set_variant(value);
  // @@protoc_insertion_point(field_set:comm.StateUpdate.variant)
}
inline ::comm::StateVariant StateUpdate::_internal_variant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::comm::StateVariant>(_impl_.variant_);
}
inline void StateUpdate::_internal_set_variant(::comm::StateVariant value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variant_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace comm


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::comm::StateVariant> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::comm::StateVariant>() {
  return ::comm::StateVariant_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh
