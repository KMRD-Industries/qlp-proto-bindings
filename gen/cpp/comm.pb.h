// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: comm.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_comm_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_comm_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_comm_2eproto;
namespace comm {
class BytePrefix;
struct BytePrefixDefaultTypeInternal;
extern BytePrefixDefaultTypeInternal _BytePrefix_default_instance_;
class CollisionData;
struct CollisionDataDefaultTypeInternal;
extern CollisionDataDefaultTypeInternal _CollisionData_default_instance_;
class Enemy;
struct EnemyDefaultTypeInternal;
extern EnemyDefaultTypeInternal _Enemy_default_instance_;
class EnemyGotHitUpdate;
struct EnemyGotHitUpdateDefaultTypeInternal;
extern EnemyGotHitUpdateDefaultTypeInternal _EnemyGotHitUpdate_default_instance_;
class EnemyPositionsUpdate;
struct EnemyPositionsUpdateDefaultTypeInternal;
extern EnemyPositionsUpdateDefaultTypeInternal _EnemyPositionsUpdate_default_instance_;
class InitialInfo;
struct InitialInfoDefaultTypeInternal;
extern InitialInfoDefaultTypeInternal _InitialInfo_default_instance_;
class Item;
struct ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class MapDimensionsUpdate;
struct MapDimensionsUpdateDefaultTypeInternal;
extern MapDimensionsUpdateDefaultTypeInternal _MapDimensionsUpdate_default_instance_;
class MapPositionsUpdate;
struct MapPositionsUpdateDefaultTypeInternal;
extern MapPositionsUpdateDefaultTypeInternal _MapPositionsUpdate_default_instance_;
class MovementUpdate;
struct MovementUpdateDefaultTypeInternal;
extern MovementUpdateDefaultTypeInternal _MovementUpdate_default_instance_;
class Obstacle;
struct ObstacleDefaultTypeInternal;
extern ObstacleDefaultTypeInternal _Obstacle_default_instance_;
class Player;
struct PlayerDefaultTypeInternal;
extern PlayerDefaultTypeInternal _Player_default_instance_;
class Room;
struct RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
class SpawningEnemiesResponse;
struct SpawningEnemiesResponseDefaultTypeInternal;
extern SpawningEnemiesResponseDefaultTypeInternal _SpawningEnemiesResponse_default_instance_;
class StateUpdate;
struct StateUpdateDefaultTypeInternal;
extern StateUpdateDefaultTypeInternal _StateUpdate_default_instance_;
class StateUpdateSeries;
struct StateUpdateSeriesDefaultTypeInternal;
extern StateUpdateSeriesDefaultTypeInternal _StateUpdateSeries_default_instance_;
class TextureData;
struct TextureDataDefaultTypeInternal;
extern TextureDataDefaultTypeInternal _TextureData_default_instance_;
}  // namespace comm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace comm {
enum StateVariant : int {
  NONE = 0,
  CONNECTED = 1,
  DISCONNECTED = 2,
  ROOM_CHANGED = 3,
  ROOM_CLEARED = 4,
  LEVEL_CHANGED = 5,
  CHEST_OPENED = 6,
  REQUEST_ITEM_GENERATOR = 7,
  ITEM_EQUIPPED = 8,
  PLAYER_DIED = 9,
  MAP_UPDATE = 10,
  PLAYER_POSITION_UPDATE = 11,
  MAP_DIMENSIONS_UPDATE = 12,
  SPAWN_ENEMY_REQUEST = 13,
  ENEMY_GOT_HIT_UPDATE = 14,
  StateVariant_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StateVariant_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StateVariant_IsValid(int value);
extern const uint32_t StateVariant_internal_data_[];
constexpr StateVariant StateVariant_MIN = static_cast<StateVariant>(0);
constexpr StateVariant StateVariant_MAX = static_cast<StateVariant>(14);
constexpr int StateVariant_ARRAYSIZE = 14 + 1;
const ::google::protobuf::EnumDescriptor*
StateVariant_descriptor();
template <typename T>
const std::string& StateVariant_Name(T value) {
  static_assert(std::is_same<T, StateVariant>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StateVariant_Name().");
  return StateVariant_Name(static_cast<StateVariant>(value));
}
template <>
inline const std::string& StateVariant_Name(StateVariant value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StateVariant_descriptor,
                                                 0, 14>(
      static_cast<int>(value));
}
inline bool StateVariant_Parse(absl::string_view name, StateVariant* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateVariant>(
      StateVariant_descriptor(), name, value);
}
enum ItemType : int {
  UNKNOWN = 0,
  WEAPON = 1,
  ARMOUR = 2,
  POTION = 3,
  HELMET = 4,
  ItemType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ItemType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ItemType_IsValid(int value);
extern const uint32_t ItemType_internal_data_[];
constexpr ItemType ItemType_MIN = static_cast<ItemType>(0);
constexpr ItemType ItemType_MAX = static_cast<ItemType>(4);
constexpr int ItemType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ItemType_descriptor();
template <typename T>
const std::string& ItemType_Name(T value) {
  static_assert(std::is_same<T, ItemType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ItemType_Name().");
  return ItemType_Name(static_cast<ItemType>(value));
}
template <>
inline const std::string& ItemType_Name(ItemType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ItemType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ItemType_Parse(absl::string_view name, ItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemType>(
      ItemType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TextureData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.TextureData) */ {
 public:
  inline TextureData() : TextureData(nullptr) {}
  ~TextureData() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TextureData(
      ::google::protobuf::internal::ConstantInitialized);

  inline TextureData(const TextureData& from) : TextureData(nullptr, from) {}
  inline TextureData(TextureData&& from) noexcept
      : TextureData(nullptr, std::move(from)) {}
  inline TextureData& operator=(const TextureData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextureData& operator=(TextureData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextureData& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextureData* internal_default_instance() {
    return reinterpret_cast<const TextureData*>(
        &_TextureData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(TextureData& a, TextureData& b) { a.Swap(&b); }
  inline void Swap(TextureData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextureData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextureData* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TextureData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TextureData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TextureData& from) { TextureData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TextureData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.TextureData"; }

 protected:
  explicit TextureData(::google::protobuf::Arena* arena);
  TextureData(::google::protobuf::Arena* arena, const TextureData& from);
  TextureData(::google::protobuf::Arena* arena, TextureData&& from) noexcept
      : TextureData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTileSetFieldNumber = 2,
    kTileIdFieldNumber = 1,
    kTileLayerFieldNumber = 3,
  };
  // string tile_set = 2;
  void clear_tile_set() ;
  const std::string& tile_set() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tile_set(Arg_&& arg, Args_... args);
  std::string* mutable_tile_set();
  PROTOBUF_NODISCARD std::string* release_tile_set();
  void set_allocated_tile_set(std::string* value);

  private:
  const std::string& _internal_tile_set() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tile_set(
      const std::string& value);
  std::string* _internal_mutable_tile_set();

  public:
  // uint32 tile_id = 1;
  void clear_tile_id() ;
  ::uint32_t tile_id() const;
  void set_tile_id(::uint32_t value);

  private:
  ::uint32_t _internal_tile_id() const;
  void _internal_set_tile_id(::uint32_t value);

  public:
  // int32 tile_layer = 3;
  void clear_tile_layer() ;
  ::int32_t tile_layer() const;
  void set_tile_layer(::int32_t value);

  private:
  ::int32_t _internal_tile_layer() const;
  void _internal_set_tile_layer(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.TextureData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TextureData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TextureData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr tile_set_;
    ::uint32_t tile_id_;
    ::int32_t tile_layer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class SpawningEnemiesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.SpawningEnemiesResponse) */ {
 public:
  inline SpawningEnemiesResponse() : SpawningEnemiesResponse(nullptr) {}
  ~SpawningEnemiesResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawningEnemiesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SpawningEnemiesResponse(const SpawningEnemiesResponse& from) : SpawningEnemiesResponse(nullptr, from) {}
  inline SpawningEnemiesResponse(SpawningEnemiesResponse&& from) noexcept
      : SpawningEnemiesResponse(nullptr, std::move(from)) {}
  inline SpawningEnemiesResponse& operator=(const SpawningEnemiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawningEnemiesResponse& operator=(SpawningEnemiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawningEnemiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpawningEnemiesResponse* internal_default_instance() {
    return reinterpret_cast<const SpawningEnemiesResponse*>(
        &_SpawningEnemiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SpawningEnemiesResponse& a, SpawningEnemiesResponse& b) { a.Swap(&b); }
  inline void Swap(SpawningEnemiesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawningEnemiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawningEnemiesResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SpawningEnemiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawningEnemiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawningEnemiesResponse& from) { SpawningEnemiesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SpawningEnemiesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.SpawningEnemiesResponse"; }

 protected:
  explicit SpawningEnemiesResponse(::google::protobuf::Arena* arena);
  SpawningEnemiesResponse(::google::protobuf::Arena* arena, const SpawningEnemiesResponse& from);
  SpawningEnemiesResponse(::google::protobuf::Arena* arena, SpawningEnemiesResponse&& from) noexcept
      : SpawningEnemiesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnemyIdFieldNumber = 1,
  };
  // repeated uint32 enemy_id = 1;
  int enemy_id_size() const;
  private:
  int _internal_enemy_id_size() const;

  public:
  void clear_enemy_id() ;
  ::uint32_t enemy_id(int index) const;
  void set_enemy_id(int index, ::uint32_t value);
  void add_enemy_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& enemy_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_enemy_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_enemy_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_enemy_id();

  public:
  // @@protoc_insertion_point(class_scope:comm.SpawningEnemiesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SpawningEnemiesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SpawningEnemiesResponse& from_msg);
    ::google::protobuf::RepeatedField<::uint32_t> enemy_id_;
    mutable ::google::protobuf::internal::CachedSize _enemy_id_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class Room final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Room) */ {
 public:
  inline Room() : Room(nullptr) {}
  ~Room() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Room(
      ::google::protobuf::internal::ConstantInitialized);

  inline Room(const Room& from) : Room(nullptr, from) {}
  inline Room(Room&& from) noexcept
      : Room(nullptr, std::move(from)) {}
  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline Room& operator=(Room&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Room& default_instance() {
    return *internal_default_instance();
  }
  static inline const Room* internal_default_instance() {
    return reinterpret_cast<const Room*>(
        &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Room& a, Room& b) { a.Swap(&b); }
  inline void Swap(Room* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Room* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Room* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Room& from) { Room::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Room* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Room"; }

 protected:
  explicit Room(::google::protobuf::Arena* arena);
  Room(::google::protobuf::Arena* arena, const Room& from);
  Room(::google::protobuf::Arena* arena, Room&& from) noexcept
      : Room(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // int32 x = 1;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 2;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Room)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Room_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Room& from_msg);
    ::int32_t x_;
    ::int32_t y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class Obstacle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Obstacle) */ {
 public:
  inline Obstacle() : Obstacle(nullptr) {}
  ~Obstacle() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Obstacle(
      ::google::protobuf::internal::ConstantInitialized);

  inline Obstacle(const Obstacle& from) : Obstacle(nullptr, from) {}
  inline Obstacle(Obstacle&& from) noexcept
      : Obstacle(nullptr, std::move(from)) {}
  inline Obstacle& operator=(const Obstacle& from) {
    CopyFrom(from);
    return *this;
  }
  inline Obstacle& operator=(Obstacle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Obstacle& default_instance() {
    return *internal_default_instance();
  }
  static inline const Obstacle* internal_default_instance() {
    return reinterpret_cast<const Obstacle*>(
        &_Obstacle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Obstacle& a, Obstacle& b) { a.Swap(&b); }
  inline void Swap(Obstacle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Obstacle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Obstacle* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Obstacle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Obstacle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Obstacle& from) { Obstacle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Obstacle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Obstacle"; }

 protected:
  explicit Obstacle(::google::protobuf::Arena* arena);
  Obstacle(::google::protobuf::Arena* arena, const Obstacle& from);
  Obstacle(::google::protobuf::Arena* arena, Obstacle&& from) noexcept
      : Obstacle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeftFieldNumber = 1,
    kTopFieldNumber = 2,
  };
  // int32 left = 1;
  void clear_left() ;
  ::int32_t left() const;
  void set_left(::int32_t value);

  private:
  ::int32_t _internal_left() const;
  void _internal_set_left(::int32_t value);

  public:
  // int32 top = 2;
  void clear_top() ;
  ::int32_t top() const;
  void set_top(::int32_t value);

  private:
  ::int32_t _internal_top() const;
  void _internal_set_top(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Obstacle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Obstacle_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Obstacle& from_msg);
    ::int32_t left_;
    ::int32_t top_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class Item final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Item) */ {
 public:
  inline Item() : Item(nullptr) {}
  ~Item() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Item(
      ::google::protobuf::internal::ConstantInitialized);

  inline Item(const Item& from) : Item(nullptr, from) {}
  inline Item(Item&& from) noexcept
      : Item(nullptr, std::move(from)) {}
  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline Item& operator=(Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
        &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Item& a, Item& b) { a.Swap(&b); }
  inline void Swap(Item* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Item* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Item& from) { Item::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Item* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Item"; }

 protected:
  explicit Item(::google::protobuf::Arena* arena);
  Item(::google::protobuf::Arena* arena, const Item& from);
  Item(::google::protobuf::Arena* arena, Item&& from) noexcept
      : Item(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kGenFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 gen = 2;
  void clear_gen() ;
  ::uint32_t gen() const;
  void set_gen(::uint32_t value);

  private:
  ::uint32_t _internal_gen() const;
  void _internal_set_gen(::uint32_t value);

  public:
  // .comm.ItemType type = 3;
  void clear_type() ;
  ::comm::ItemType type() const;
  void set_type(::comm::ItemType value);

  private:
  ::comm::ItemType _internal_type() const;
  void _internal_set_type(::comm::ItemType value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Item)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Item_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Item& from_msg);
    ::uint32_t id_;
    ::uint32_t gen_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class EnemyGotHitUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.EnemyGotHitUpdate) */ {
 public:
  inline EnemyGotHitUpdate() : EnemyGotHitUpdate(nullptr) {}
  ~EnemyGotHitUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnemyGotHitUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnemyGotHitUpdate(const EnemyGotHitUpdate& from) : EnemyGotHitUpdate(nullptr, from) {}
  inline EnemyGotHitUpdate(EnemyGotHitUpdate&& from) noexcept
      : EnemyGotHitUpdate(nullptr, std::move(from)) {}
  inline EnemyGotHitUpdate& operator=(const EnemyGotHitUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnemyGotHitUpdate& operator=(EnemyGotHitUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnemyGotHitUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnemyGotHitUpdate* internal_default_instance() {
    return reinterpret_cast<const EnemyGotHitUpdate*>(
        &_EnemyGotHitUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(EnemyGotHitUpdate& a, EnemyGotHitUpdate& b) { a.Swap(&b); }
  inline void Swap(EnemyGotHitUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnemyGotHitUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnemyGotHitUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EnemyGotHitUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnemyGotHitUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnemyGotHitUpdate& from) { EnemyGotHitUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnemyGotHitUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.EnemyGotHitUpdate"; }

 protected:
  explicit EnemyGotHitUpdate(::google::protobuf::Arena* arena);
  EnemyGotHitUpdate(::google::protobuf::Arena* arena, const EnemyGotHitUpdate& from);
  EnemyGotHitUpdate(::google::protobuf::Arena* arena, EnemyGotHitUpdate&& from) noexcept
      : EnemyGotHitUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kEnemyIdFieldNumber = 2,
  };
  // uint32 player_id = 1;
  void clear_player_id() ;
  ::uint32_t player_id() const;
  void set_player_id(::uint32_t value);

  private:
  ::uint32_t _internal_player_id() const;
  void _internal_set_player_id(::uint32_t value);

  public:
  // uint32 enemy_id = 2;
  void clear_enemy_id() ;
  ::uint32_t enemy_id() const;
  void set_enemy_id(::uint32_t value);

  private:
  ::uint32_t _internal_enemy_id() const;
  void _internal_set_enemy_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.EnemyGotHitUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EnemyGotHitUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnemyGotHitUpdate& from_msg);
    ::uint32_t player_id_;
    ::uint32_t enemy_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class CollisionData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.CollisionData) */ {
 public:
  inline CollisionData() : CollisionData(nullptr) {}
  ~CollisionData() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CollisionData(
      ::google::protobuf::internal::ConstantInitialized);

  inline CollisionData(const CollisionData& from) : CollisionData(nullptr, from) {}
  inline CollisionData(CollisionData&& from) noexcept
      : CollisionData(nullptr, std::move(from)) {}
  inline CollisionData& operator=(const CollisionData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CollisionData& operator=(CollisionData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CollisionData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CollisionData* internal_default_instance() {
    return reinterpret_cast<const CollisionData*>(
        &_CollisionData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CollisionData& a, CollisionData& b) { a.Swap(&b); }
  inline void Swap(CollisionData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CollisionData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CollisionData* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CollisionData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CollisionData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CollisionData& from) { CollisionData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CollisionData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.CollisionData"; }

 protected:
  explicit CollisionData(::google::protobuf::Arena* arena);
  CollisionData(::google::protobuf::Arena* arena, const CollisionData& from);
  CollisionData(::google::protobuf::Arena* arena, CollisionData&& from) noexcept
      : CollisionData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kXOffsetFieldNumber = 4,
    kYOffsetFieldNumber = 5,
  };
  // int32 type = 1;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // float width = 2;
  void clear_width() ;
  float width() const;
  void set_width(float value);

  private:
  float _internal_width() const;
  void _internal_set_width(float value);

  public:
  // float height = 3;
  void clear_height() ;
  float height() const;
  void set_height(float value);

  private:
  float _internal_height() const;
  void _internal_set_height(float value);

  public:
  // float x_offset = 4;
  void clear_x_offset() ;
  float x_offset() const;
  void set_x_offset(float value);

  private:
  float _internal_x_offset() const;
  void _internal_set_x_offset(float value);

  public:
  // float y_offset = 5;
  void clear_y_offset() ;
  float y_offset() const;
  void set_y_offset(float value);

  private:
  float _internal_y_offset() const;
  void _internal_set_y_offset(float value);

  public:
  // @@protoc_insertion_point(class_scope:comm.CollisionData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CollisionData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CollisionData& from_msg);
    ::int32_t type_;
    float width_;
    float height_;
    float x_offset_;
    float y_offset_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class BytePrefix final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.BytePrefix) */ {
 public:
  inline BytePrefix() : BytePrefix(nullptr) {}
  ~BytePrefix() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BytePrefix(
      ::google::protobuf::internal::ConstantInitialized);

  inline BytePrefix(const BytePrefix& from) : BytePrefix(nullptr, from) {}
  inline BytePrefix(BytePrefix&& from) noexcept
      : BytePrefix(nullptr, std::move(from)) {}
  inline BytePrefix& operator=(const BytePrefix& from) {
    CopyFrom(from);
    return *this;
  }
  inline BytePrefix& operator=(BytePrefix&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BytePrefix& default_instance() {
    return *internal_default_instance();
  }
  static inline const BytePrefix* internal_default_instance() {
    return reinterpret_cast<const BytePrefix*>(
        &_BytePrefix_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(BytePrefix& a, BytePrefix& b) { a.Swap(&b); }
  inline void Swap(BytePrefix* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BytePrefix* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BytePrefix* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BytePrefix>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BytePrefix& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BytePrefix& from) { BytePrefix::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BytePrefix* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.BytePrefix"; }

 protected:
  explicit BytePrefix(::google::protobuf::Arena* arena);
  BytePrefix(::google::protobuf::Arena* arena, const BytePrefix& from);
  BytePrefix(::google::protobuf::Arena* arena, BytePrefix&& from) noexcept
      : BytePrefix(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBytesFieldNumber = 1,
  };
  // uint32 bytes = 1;
  void clear_bytes() ;
  ::uint32_t bytes() const;
  void set_bytes(::uint32_t value);

  private:
  ::uint32_t _internal_bytes() const;
  void _internal_set_bytes(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.BytePrefix)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BytePrefix_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BytePrefix& from_msg);
    ::uint32_t bytes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class Player final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Player) */ {
 public:
  inline Player() : Player(nullptr) {}
  ~Player() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Player(
      ::google::protobuf::internal::ConstantInitialized);

  inline Player(const Player& from) : Player(nullptr, from) {}
  inline Player(Player&& from) noexcept
      : Player(nullptr, std::move(from)) {}
  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player& operator=(Player&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Player& default_instance() {
    return *internal_default_instance();
  }
  static inline const Player* internal_default_instance() {
    return reinterpret_cast<const Player*>(
        &_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Player& a, Player& b) { a.Swap(&b); }
  inline void Swap(Player* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Player* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Player>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Player& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Player& from) { Player::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Player* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Player"; }

 protected:
  explicit Player(::google::protobuf::Arena* arena);
  Player(::google::protobuf::Arena* arena, const Player& from);
  Player(::google::protobuf::Arena* arena, Player&& from) noexcept
      : Player(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 2,
    kIdFieldNumber = 1,
    kPositionXFieldNumber = 3,
    kPlayerAttackDamageFieldNumber = 5,
    kPositionYFieldNumber = 4,
  };
  // repeated .comm.Item items = 2;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::comm::Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::comm::Item>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::comm::Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::comm::Item>* _internal_mutable_items();
  public:
  const ::comm::Item& items(int index) const;
  ::comm::Item* add_items();
  const ::google::protobuf::RepeatedPtrField<::comm::Item>& items() const;
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // float position_x = 3;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // double player_attack_damage = 5;
  void clear_player_attack_damage() ;
  double player_attack_damage() const;
  void set_player_attack_damage(double value);

  private:
  double _internal_player_attack_damage() const;
  void _internal_set_player_attack_damage(double value);

  public:
  // float position_y = 4;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Player)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Player_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Player& from_msg);
    ::google::protobuf::RepeatedPtrField< ::comm::Item > items_;
    ::uint32_t id_;
    float position_x_;
    double player_attack_damage_;
    float position_y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class MovementUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.MovementUpdate) */ {
 public:
  inline MovementUpdate() : MovementUpdate(nullptr) {}
  ~MovementUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovementUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovementUpdate(const MovementUpdate& from) : MovementUpdate(nullptr, from) {}
  inline MovementUpdate(MovementUpdate&& from) noexcept
      : MovementUpdate(nullptr, std::move(from)) {}
  inline MovementUpdate& operator=(const MovementUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovementUpdate& operator=(MovementUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovementUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovementUpdate* internal_default_instance() {
    return reinterpret_cast<const MovementUpdate*>(
        &_MovementUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MovementUpdate& a, MovementUpdate& b) { a.Swap(&b); }
  inline void Swap(MovementUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovementUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovementUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MovementUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovementUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovementUpdate& from) { MovementUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MovementUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.MovementUpdate"; }

 protected:
  explicit MovementUpdate(::google::protobuf::Arena* arena);
  MovementUpdate(::google::protobuf::Arena* arena, const MovementUpdate& from);
  MovementUpdate(::google::protobuf::Arena* arena, MovementUpdate&& from) noexcept
      : MovementUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrRoomFieldNumber = 8,
    kEntityIdFieldNumber = 1,
    kPositionXFieldNumber = 2,
    kPositionYFieldNumber = 3,
    kWeaponPivotXFieldNumber = 4,
    kWeaponPivotYFieldNumber = 5,
    kDirectionFieldNumber = 6,
    kAttackFieldNumber = 7,
  };
  // .comm.Room curr_room = 8;
  bool has_curr_room() const;
  void clear_curr_room() ;
  const ::comm::Room& curr_room() const;
  PROTOBUF_NODISCARD ::comm::Room* release_curr_room();
  ::comm::Room* mutable_curr_room();
  void set_allocated_curr_room(::comm::Room* value);
  void unsafe_arena_set_allocated_curr_room(::comm::Room* value);
  ::comm::Room* unsafe_arena_release_curr_room();

  private:
  const ::comm::Room& _internal_curr_room() const;
  ::comm::Room* _internal_mutable_curr_room();

  public:
  // uint32 entity_id = 1;
  void clear_entity_id() ;
  ::uint32_t entity_id() const;
  void set_entity_id(::uint32_t value);

  private:
  ::uint32_t _internal_entity_id() const;
  void _internal_set_entity_id(::uint32_t value);

  public:
  // float position_x = 2;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // float position_y = 3;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // float weapon_pivot_x = 4;
  void clear_weapon_pivot_x() ;
  float weapon_pivot_x() const;
  void set_weapon_pivot_x(float value);

  private:
  float _internal_weapon_pivot_x() const;
  void _internal_set_weapon_pivot_x(float value);

  public:
  // float weapon_pivot_y = 5;
  void clear_weapon_pivot_y() ;
  float weapon_pivot_y() const;
  void set_weapon_pivot_y(float value);

  private:
  float _internal_weapon_pivot_y() const;
  void _internal_set_weapon_pivot_y(float value);

  public:
  // float direction = 6;
  void clear_direction() ;
  float direction() const;
  void set_direction(float value);

  private:
  float _internal_direction() const;
  void _internal_set_direction(float value);

  public:
  // bool attack = 7;
  void clear_attack() ;
  bool attack() const;
  void set_attack(bool value);

  private:
  bool _internal_attack() const;
  void _internal_set_attack(bool value);

  public:
  // @@protoc_insertion_point(class_scope:comm.MovementUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MovementUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MovementUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::comm::Room* curr_room_;
    ::uint32_t entity_id_;
    float position_x_;
    float position_y_;
    float weapon_pivot_x_;
    float weapon_pivot_y_;
    float direction_;
    bool attack_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class MapDimensionsUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.MapDimensionsUpdate) */ {
 public:
  inline MapDimensionsUpdate() : MapDimensionsUpdate(nullptr) {}
  ~MapDimensionsUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapDimensionsUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline MapDimensionsUpdate(const MapDimensionsUpdate& from) : MapDimensionsUpdate(nullptr, from) {}
  inline MapDimensionsUpdate(MapDimensionsUpdate&& from) noexcept
      : MapDimensionsUpdate(nullptr, std::move(from)) {}
  inline MapDimensionsUpdate& operator=(const MapDimensionsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapDimensionsUpdate& operator=(MapDimensionsUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapDimensionsUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const MapDimensionsUpdate* internal_default_instance() {
    return reinterpret_cast<const MapDimensionsUpdate*>(
        &_MapDimensionsUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MapDimensionsUpdate& a, MapDimensionsUpdate& b) { a.Swap(&b); }
  inline void Swap(MapDimensionsUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapDimensionsUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapDimensionsUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MapDimensionsUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapDimensionsUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapDimensionsUpdate& from) { MapDimensionsUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MapDimensionsUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.MapDimensionsUpdate"; }

 protected:
  explicit MapDimensionsUpdate(::google::protobuf::Arena* arena);
  MapDimensionsUpdate(::google::protobuf::Arena* arena, const MapDimensionsUpdate& from);
  MapDimensionsUpdate(::google::protobuf::Arena* arena, MapDimensionsUpdate&& from) noexcept
      : MapDimensionsUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kObstaclesFieldNumber = 1,
  };
  // repeated .comm.Obstacle obstacles = 1;
  int obstacles_size() const;
  private:
  int _internal_obstacles_size() const;

  public:
  void clear_obstacles() ;
  ::comm::Obstacle* mutable_obstacles(int index);
  ::google::protobuf::RepeatedPtrField<::comm::Obstacle>* mutable_obstacles();

  private:
  const ::google::protobuf::RepeatedPtrField<::comm::Obstacle>& _internal_obstacles() const;
  ::google::protobuf::RepeatedPtrField<::comm::Obstacle>* _internal_mutable_obstacles();
  public:
  const ::comm::Obstacle& obstacles(int index) const;
  ::comm::Obstacle* add_obstacles();
  const ::google::protobuf::RepeatedPtrField<::comm::Obstacle>& obstacles() const;
  // @@protoc_insertion_point(class_scope:comm.MapDimensionsUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MapDimensionsUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MapDimensionsUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::comm::Obstacle > obstacles_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class Enemy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Enemy) */ {
 public:
  inline Enemy() : Enemy(nullptr) {}
  ~Enemy() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Enemy(
      ::google::protobuf::internal::ConstantInitialized);

  inline Enemy(const Enemy& from) : Enemy(nullptr, from) {}
  inline Enemy(Enemy&& from) noexcept
      : Enemy(nullptr, std::move(from)) {}
  inline Enemy& operator=(const Enemy& from) {
    CopyFrom(from);
    return *this;
  }
  inline Enemy& operator=(Enemy&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Enemy& default_instance() {
    return *internal_default_instance();
  }
  static inline const Enemy* internal_default_instance() {
    return reinterpret_cast<const Enemy*>(
        &_Enemy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Enemy& a, Enemy& b) { a.Swap(&b); }
  inline void Swap(Enemy* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Enemy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Enemy* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Enemy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Enemy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Enemy& from) { Enemy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Enemy* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Enemy"; }

 protected:
  explicit Enemy(::google::protobuf::Arena* arena);
  Enemy(::google::protobuf::Arena* arena, const Enemy& from);
  Enemy(::google::protobuf::Arena* arena, Enemy&& from) noexcept
      : Enemy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 4,
    kNameFieldNumber = 5,
    kTextureDataFieldNumber = 8,
    kCollisionDataFieldNumber = 9,
    kIdFieldNumber = 1,
    kPositionXFieldNumber = 2,
    kHpFieldNumber = 6,
    kDamageFieldNumber = 7,
    kPositionYFieldNumber = 3,
  };
  // string type = 4;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string name = 5;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .comm.TextureData texture_data = 8;
  bool has_texture_data() const;
  void clear_texture_data() ;
  const ::comm::TextureData& texture_data() const;
  PROTOBUF_NODISCARD ::comm::TextureData* release_texture_data();
  ::comm::TextureData* mutable_texture_data();
  void set_allocated_texture_data(::comm::TextureData* value);
  void unsafe_arena_set_allocated_texture_data(::comm::TextureData* value);
  ::comm::TextureData* unsafe_arena_release_texture_data();

  private:
  const ::comm::TextureData& _internal_texture_data() const;
  ::comm::TextureData* _internal_mutable_texture_data();

  public:
  // .comm.CollisionData collision_data = 9;
  bool has_collision_data() const;
  void clear_collision_data() ;
  const ::comm::CollisionData& collision_data() const;
  PROTOBUF_NODISCARD ::comm::CollisionData* release_collision_data();
  ::comm::CollisionData* mutable_collision_data();
  void set_allocated_collision_data(::comm::CollisionData* value);
  void unsafe_arena_set_allocated_collision_data(::comm::CollisionData* value);
  ::comm::CollisionData* unsafe_arena_release_collision_data();

  private:
  const ::comm::CollisionData& _internal_collision_data() const;
  ::comm::CollisionData* _internal_mutable_collision_data();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // float position_x = 2;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // double hp = 6;
  void clear_hp() ;
  double hp() const;
  void set_hp(double value);

  private:
  double _internal_hp() const;
  void _internal_set_hp(double value);

  public:
  // double damage = 7;
  void clear_damage() ;
  double damage() const;
  void set_damage(double value);

  private:
  double _internal_damage() const;
  void _internal_set_damage(double value);

  public:
  // float position_y = 3;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Enemy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Enemy_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Enemy& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::comm::TextureData* texture_data_;
    ::comm::CollisionData* collision_data_;
    ::uint32_t id_;
    float position_x_;
    double hp_;
    double damage_;
    float position_y_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class MapPositionsUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.MapPositionsUpdate) */ {
 public:
  inline MapPositionsUpdate() : MapPositionsUpdate(nullptr) {}
  ~MapPositionsUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapPositionsUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline MapPositionsUpdate(const MapPositionsUpdate& from) : MapPositionsUpdate(nullptr, from) {}
  inline MapPositionsUpdate(MapPositionsUpdate&& from) noexcept
      : MapPositionsUpdate(nullptr, std::move(from)) {}
  inline MapPositionsUpdate& operator=(const MapPositionsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapPositionsUpdate& operator=(MapPositionsUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapPositionsUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const MapPositionsUpdate* internal_default_instance() {
    return reinterpret_cast<const MapPositionsUpdate*>(
        &_MapPositionsUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MapPositionsUpdate& a, MapPositionsUpdate& b) { a.Swap(&b); }
  inline void Swap(MapPositionsUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapPositionsUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapPositionsUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MapPositionsUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapPositionsUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapPositionsUpdate& from) { MapPositionsUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MapPositionsUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.MapPositionsUpdate"; }

 protected:
  explicit MapPositionsUpdate(::google::protobuf::Arena* arena);
  MapPositionsUpdate(::google::protobuf::Arena* arena, const MapPositionsUpdate& from);
  MapPositionsUpdate(::google::protobuf::Arena* arena, MapPositionsUpdate&& from) noexcept
      : MapPositionsUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 1,
    kEnemiesFieldNumber = 2,
  };
  // repeated .comm.Player players = 1;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::comm::Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::comm::Player>* mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::comm::Player>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::comm::Player>* _internal_mutable_players();
  public:
  const ::comm::Player& players(int index) const;
  ::comm::Player* add_players();
  const ::google::protobuf::RepeatedPtrField<::comm::Player>& players() const;
  // repeated .comm.Enemy enemies = 2;
  int enemies_size() const;
  private:
  int _internal_enemies_size() const;

  public:
  void clear_enemies() ;
  ::comm::Enemy* mutable_enemies(int index);
  ::google::protobuf::RepeatedPtrField<::comm::Enemy>* mutable_enemies();

  private:
  const ::google::protobuf::RepeatedPtrField<::comm::Enemy>& _internal_enemies() const;
  ::google::protobuf::RepeatedPtrField<::comm::Enemy>* _internal_mutable_enemies();
  public:
  const ::comm::Enemy& enemies(int index) const;
  ::comm::Enemy* add_enemies();
  const ::google::protobuf::RepeatedPtrField<::comm::Enemy>& enemies() const;
  // @@protoc_insertion_point(class_scope:comm.MapPositionsUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MapPositionsUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MapPositionsUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::comm::Player > players_;
    ::google::protobuf::RepeatedPtrField< ::comm::Enemy > enemies_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class InitialInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.InitialInfo) */ {
 public:
  inline InitialInfo() : InitialInfo(nullptr) {}
  ~InitialInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InitialInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline InitialInfo(const InitialInfo& from) : InitialInfo(nullptr, from) {}
  inline InitialInfo(InitialInfo&& from) noexcept
      : InitialInfo(nullptr, std::move(from)) {}
  inline InitialInfo& operator=(const InitialInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitialInfo& operator=(InitialInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitialInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitialInfo* internal_default_instance() {
    return reinterpret_cast<const InitialInfo*>(
        &_InitialInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(InitialInfo& a, InitialInfo& b) { a.Swap(&b); }
  inline void Swap(InitialInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitialInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitialInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InitialInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitialInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InitialInfo& from) { InitialInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InitialInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.InitialInfo"; }

 protected:
  explicit InitialInfo(::google::protobuf::Arena* arena);
  InitialInfo(::google::protobuf::Arena* arena, const InitialInfo& from);
  InitialInfo(::google::protobuf::Arena* arena, InitialInfo&& from) noexcept
      : InitialInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectedPlayersFieldNumber = 4,
    kPlayerFieldNumber = 1,
    kNextItemFieldNumber = 3,
    kSeedFieldNumber = 2,
  };
  // repeated .comm.Player connected_players = 4;
  int connected_players_size() const;
  private:
  int _internal_connected_players_size() const;

  public:
  void clear_connected_players() ;
  ::comm::Player* mutable_connected_players(int index);
  ::google::protobuf::RepeatedPtrField<::comm::Player>* mutable_connected_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::comm::Player>& _internal_connected_players() const;
  ::google::protobuf::RepeatedPtrField<::comm::Player>* _internal_mutable_connected_players();
  public:
  const ::comm::Player& connected_players(int index) const;
  ::comm::Player* add_connected_players();
  const ::google::protobuf::RepeatedPtrField<::comm::Player>& connected_players() const;
  // .comm.Player player = 1;
  bool has_player() const;
  void clear_player() ;
  const ::comm::Player& player() const;
  PROTOBUF_NODISCARD ::comm::Player* release_player();
  ::comm::Player* mutable_player();
  void set_allocated_player(::comm::Player* value);
  void unsafe_arena_set_allocated_player(::comm::Player* value);
  ::comm::Player* unsafe_arena_release_player();

  private:
  const ::comm::Player& _internal_player() const;
  ::comm::Player* _internal_mutable_player();

  public:
  // .comm.Item next_item = 3;
  bool has_next_item() const;
  void clear_next_item() ;
  const ::comm::Item& next_item() const;
  PROTOBUF_NODISCARD ::comm::Item* release_next_item();
  ::comm::Item* mutable_next_item();
  void set_allocated_next_item(::comm::Item* value);
  void unsafe_arena_set_allocated_next_item(::comm::Item* value);
  ::comm::Item* unsafe_arena_release_next_item();

  private:
  const ::comm::Item& _internal_next_item() const;
  ::comm::Item* _internal_mutable_next_item();

  public:
  // int64 seed = 2;
  void clear_seed() ;
  ::int64_t seed() const;
  void set_seed(::int64_t value);

  private:
  ::int64_t _internal_seed() const;
  void _internal_set_seed(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.InitialInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InitialInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InitialInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::comm::Player > connected_players_;
    ::comm::Player* player_;
    ::comm::Item* next_item_;
    ::int64_t seed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class EnemyPositionsUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.EnemyPositionsUpdate) */ {
 public:
  inline EnemyPositionsUpdate() : EnemyPositionsUpdate(nullptr) {}
  ~EnemyPositionsUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnemyPositionsUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnemyPositionsUpdate(const EnemyPositionsUpdate& from) : EnemyPositionsUpdate(nullptr, from) {}
  inline EnemyPositionsUpdate(EnemyPositionsUpdate&& from) noexcept
      : EnemyPositionsUpdate(nullptr, std::move(from)) {}
  inline EnemyPositionsUpdate& operator=(const EnemyPositionsUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnemyPositionsUpdate& operator=(EnemyPositionsUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnemyPositionsUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnemyPositionsUpdate* internal_default_instance() {
    return reinterpret_cast<const EnemyPositionsUpdate*>(
        &_EnemyPositionsUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(EnemyPositionsUpdate& a, EnemyPositionsUpdate& b) { a.Swap(&b); }
  inline void Swap(EnemyPositionsUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnemyPositionsUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnemyPositionsUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EnemyPositionsUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnemyPositionsUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnemyPositionsUpdate& from) { EnemyPositionsUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnemyPositionsUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.EnemyPositionsUpdate"; }

 protected:
  explicit EnemyPositionsUpdate(::google::protobuf::Arena* arena);
  EnemyPositionsUpdate(::google::protobuf::Arena* arena, const EnemyPositionsUpdate& from);
  EnemyPositionsUpdate(::google::protobuf::Arena* arena, EnemyPositionsUpdate&& from) noexcept
      : EnemyPositionsUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnemyPositionsFieldNumber = 1,
  };
  // repeated .comm.Enemy enemy_positions = 1;
  int enemy_positions_size() const;
  private:
  int _internal_enemy_positions_size() const;

  public:
  void clear_enemy_positions() ;
  ::comm::Enemy* mutable_enemy_positions(int index);
  ::google::protobuf::RepeatedPtrField<::comm::Enemy>* mutable_enemy_positions();

  private:
  const ::google::protobuf::RepeatedPtrField<::comm::Enemy>& _internal_enemy_positions() const;
  ::google::protobuf::RepeatedPtrField<::comm::Enemy>* _internal_mutable_enemy_positions();
  public:
  const ::comm::Enemy& enemy_positions(int index) const;
  ::comm::Enemy* add_enemy_positions();
  const ::google::protobuf::RepeatedPtrField<::comm::Enemy>& enemy_positions() const;
  // @@protoc_insertion_point(class_scope:comm.EnemyPositionsUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EnemyPositionsUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnemyPositionsUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::comm::Enemy > enemy_positions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class StateUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.StateUpdate) */ {
 public:
  inline StateUpdate() : StateUpdate(nullptr) {}
  ~StateUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateUpdate(const StateUpdate& from) : StateUpdate(nullptr, from) {}
  inline StateUpdate(StateUpdate&& from) noexcept
      : StateUpdate(nullptr, std::move(from)) {}
  inline StateUpdate& operator=(const StateUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateUpdate& operator=(StateUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateUpdate* internal_default_instance() {
    return reinterpret_cast<const StateUpdate*>(
        &_StateUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(StateUpdate& a, StateUpdate& b) { a.Swap(&b); }
  inline void Swap(StateUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StateUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateUpdate& from) { StateUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.StateUpdate"; }

 protected:
  explicit StateUpdate(::google::protobuf::Arena* arena);
  StateUpdate(::google::protobuf::Arena* arena, const StateUpdate& from);
  StateUpdate(::google::protobuf::Arena* arena, StateUpdate&& from) noexcept
      : StateUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCompressedMapDimensionsUpdateFieldNumber = 10,
    kPlayerFieldNumber = 1,
    kItemFieldNumber = 2,
    kRoomFieldNumber = 4,
    kMapPositionsUpdateFieldNumber = 5,
    kMovementUpdateFieldNumber = 6,
    kEnemyPositionsUpdateFieldNumber = 7,
    kMapDimensionsUpdateFieldNumber = 8,
    kEnemyGotHitUpdateFieldNumber = 9,
    kVariantFieldNumber = 3,
  };
  // bytes compressed_map_dimensions_update = 10;
  void clear_compressed_map_dimensions_update() ;
  const std::string& compressed_map_dimensions_update() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_compressed_map_dimensions_update(Arg_&& arg, Args_... args);
  std::string* mutable_compressed_map_dimensions_update();
  PROTOBUF_NODISCARD std::string* release_compressed_map_dimensions_update();
  void set_allocated_compressed_map_dimensions_update(std::string* value);

  private:
  const std::string& _internal_compressed_map_dimensions_update() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_compressed_map_dimensions_update(
      const std::string& value);
  std::string* _internal_mutable_compressed_map_dimensions_update();

  public:
  // .comm.Player player = 1;
  bool has_player() const;
  void clear_player() ;
  const ::comm::Player& player() const;
  PROTOBUF_NODISCARD ::comm::Player* release_player();
  ::comm::Player* mutable_player();
  void set_allocated_player(::comm::Player* value);
  void unsafe_arena_set_allocated_player(::comm::Player* value);
  ::comm::Player* unsafe_arena_release_player();

  private:
  const ::comm::Player& _internal_player() const;
  ::comm::Player* _internal_mutable_player();

  public:
  // .comm.Item item = 2;
  bool has_item() const;
  void clear_item() ;
  const ::comm::Item& item() const;
  PROTOBUF_NODISCARD ::comm::Item* release_item();
  ::comm::Item* mutable_item();
  void set_allocated_item(::comm::Item* value);
  void unsafe_arena_set_allocated_item(::comm::Item* value);
  ::comm::Item* unsafe_arena_release_item();

  private:
  const ::comm::Item& _internal_item() const;
  ::comm::Item* _internal_mutable_item();

  public:
  // .comm.Room room = 4;
  bool has_room() const;
  void clear_room() ;
  const ::comm::Room& room() const;
  PROTOBUF_NODISCARD ::comm::Room* release_room();
  ::comm::Room* mutable_room();
  void set_allocated_room(::comm::Room* value);
  void unsafe_arena_set_allocated_room(::comm::Room* value);
  ::comm::Room* unsafe_arena_release_room();

  private:
  const ::comm::Room& _internal_room() const;
  ::comm::Room* _internal_mutable_room();

  public:
  // .comm.MapPositionsUpdate map_positions_update = 5;
  bool has_map_positions_update() const;
  void clear_map_positions_update() ;
  const ::comm::MapPositionsUpdate& map_positions_update() const;
  PROTOBUF_NODISCARD ::comm::MapPositionsUpdate* release_map_positions_update();
  ::comm::MapPositionsUpdate* mutable_map_positions_update();
  void set_allocated_map_positions_update(::comm::MapPositionsUpdate* value);
  void unsafe_arena_set_allocated_map_positions_update(::comm::MapPositionsUpdate* value);
  ::comm::MapPositionsUpdate* unsafe_arena_release_map_positions_update();

  private:
  const ::comm::MapPositionsUpdate& _internal_map_positions_update() const;
  ::comm::MapPositionsUpdate* _internal_mutable_map_positions_update();

  public:
  // .comm.MovementUpdate movement_update = 6;
  bool has_movement_update() const;
  void clear_movement_update() ;
  const ::comm::MovementUpdate& movement_update() const;
  PROTOBUF_NODISCARD ::comm::MovementUpdate* release_movement_update();
  ::comm::MovementUpdate* mutable_movement_update();
  void set_allocated_movement_update(::comm::MovementUpdate* value);
  void unsafe_arena_set_allocated_movement_update(::comm::MovementUpdate* value);
  ::comm::MovementUpdate* unsafe_arena_release_movement_update();

  private:
  const ::comm::MovementUpdate& _internal_movement_update() const;
  ::comm::MovementUpdate* _internal_mutable_movement_update();

  public:
  // .comm.EnemyPositionsUpdate enemy_positions_update = 7;
  bool has_enemy_positions_update() const;
  void clear_enemy_positions_update() ;
  const ::comm::EnemyPositionsUpdate& enemy_positions_update() const;
  PROTOBUF_NODISCARD ::comm::EnemyPositionsUpdate* release_enemy_positions_update();
  ::comm::EnemyPositionsUpdate* mutable_enemy_positions_update();
  void set_allocated_enemy_positions_update(::comm::EnemyPositionsUpdate* value);
  void unsafe_arena_set_allocated_enemy_positions_update(::comm::EnemyPositionsUpdate* value);
  ::comm::EnemyPositionsUpdate* unsafe_arena_release_enemy_positions_update();

  private:
  const ::comm::EnemyPositionsUpdate& _internal_enemy_positions_update() const;
  ::comm::EnemyPositionsUpdate* _internal_mutable_enemy_positions_update();

  public:
  // .comm.MapDimensionsUpdate map_dimensions_update = 8;
  bool has_map_dimensions_update() const;
  void clear_map_dimensions_update() ;
  const ::comm::MapDimensionsUpdate& map_dimensions_update() const;
  PROTOBUF_NODISCARD ::comm::MapDimensionsUpdate* release_map_dimensions_update();
  ::comm::MapDimensionsUpdate* mutable_map_dimensions_update();
  void set_allocated_map_dimensions_update(::comm::MapDimensionsUpdate* value);
  void unsafe_arena_set_allocated_map_dimensions_update(::comm::MapDimensionsUpdate* value);
  ::comm::MapDimensionsUpdate* unsafe_arena_release_map_dimensions_update();

  private:
  const ::comm::MapDimensionsUpdate& _internal_map_dimensions_update() const;
  ::comm::MapDimensionsUpdate* _internal_mutable_map_dimensions_update();

  public:
  // .comm.EnemyGotHitUpdate enemy_got_hit_update = 9;
  bool has_enemy_got_hit_update() const;
  void clear_enemy_got_hit_update() ;
  const ::comm::EnemyGotHitUpdate& enemy_got_hit_update() const;
  PROTOBUF_NODISCARD ::comm::EnemyGotHitUpdate* release_enemy_got_hit_update();
  ::comm::EnemyGotHitUpdate* mutable_enemy_got_hit_update();
  void set_allocated_enemy_got_hit_update(::comm::EnemyGotHitUpdate* value);
  void unsafe_arena_set_allocated_enemy_got_hit_update(::comm::EnemyGotHitUpdate* value);
  ::comm::EnemyGotHitUpdate* unsafe_arena_release_enemy_got_hit_update();

  private:
  const ::comm::EnemyGotHitUpdate& _internal_enemy_got_hit_update() const;
  ::comm::EnemyGotHitUpdate* _internal_mutable_enemy_got_hit_update();

  public:
  // .comm.StateVariant variant = 3;
  void clear_variant() ;
  ::comm::StateVariant variant() const;
  void set_variant(::comm::StateVariant value);

  private:
  ::comm::StateVariant _internal_variant() const;
  void _internal_set_variant(::comm::StateVariant value);

  public:
  // @@protoc_insertion_point(class_scope:comm.StateUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 8,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StateUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr compressed_map_dimensions_update_;
    ::comm::Player* player_;
    ::comm::Item* item_;
    ::comm::Room* room_;
    ::comm::MapPositionsUpdate* map_positions_update_;
    ::comm::MovementUpdate* movement_update_;
    ::comm::EnemyPositionsUpdate* enemy_positions_update_;
    ::comm::MapDimensionsUpdate* map_dimensions_update_;
    ::comm::EnemyGotHitUpdate* enemy_got_hit_update_;
    int variant_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class StateUpdateSeries final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.StateUpdateSeries) */ {
 public:
  inline StateUpdateSeries() : StateUpdateSeries(nullptr) {}
  ~StateUpdateSeries() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateUpdateSeries(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateUpdateSeries(const StateUpdateSeries& from) : StateUpdateSeries(nullptr, from) {}
  inline StateUpdateSeries(StateUpdateSeries&& from) noexcept
      : StateUpdateSeries(nullptr, std::move(from)) {}
  inline StateUpdateSeries& operator=(const StateUpdateSeries& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateUpdateSeries& operator=(StateUpdateSeries&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateUpdateSeries& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateUpdateSeries* internal_default_instance() {
    return reinterpret_cast<const StateUpdateSeries*>(
        &_StateUpdateSeries_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(StateUpdateSeries& a, StateUpdateSeries& b) { a.Swap(&b); }
  inline void Swap(StateUpdateSeries* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateUpdateSeries* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateUpdateSeries* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StateUpdateSeries>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateUpdateSeries& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateUpdateSeries& from) { StateUpdateSeries::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateUpdateSeries* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.StateUpdateSeries"; }

 protected:
  explicit StateUpdateSeries(::google::protobuf::Arena* arena);
  StateUpdateSeries(::google::protobuf::Arena* arena, const StateUpdateSeries& from);
  StateUpdateSeries(::google::protobuf::Arena* arena, StateUpdateSeries&& from) noexcept
      : StateUpdateSeries(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdatesFieldNumber = 1,
  };
  // repeated .comm.StateUpdate updates = 1;
  int updates_size() const;
  private:
  int _internal_updates_size() const;

  public:
  void clear_updates() ;
  ::comm::StateUpdate* mutable_updates(int index);
  ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>* mutable_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>& _internal_updates() const;
  ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>* _internal_mutable_updates();
  public:
  const ::comm::StateUpdate& updates(int index) const;
  ::comm::StateUpdate* add_updates();
  const ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>& updates() const;
  // @@protoc_insertion_point(class_scope:comm.StateUpdateSeries)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StateUpdateSeries_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateUpdateSeries& from_msg);
    ::google::protobuf::RepeatedPtrField< ::comm::StateUpdate > updates_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MovementUpdate

// uint32 entity_id = 1;
inline void MovementUpdate::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = 0u;
}
inline ::uint32_t MovementUpdate::entity_id() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.entity_id)
  return _internal_entity_id();
}
inline void MovementUpdate::set_entity_id(::uint32_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.entity_id)
}
inline ::uint32_t MovementUpdate::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_;
}
inline void MovementUpdate::_internal_set_entity_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = value;
}

// float position_x = 2;
inline void MovementUpdate::clear_position_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = 0;
}
inline float MovementUpdate::position_x() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.position_x)
  return _internal_position_x();
}
inline void MovementUpdate::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.position_x)
}
inline float MovementUpdate::_internal_position_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_x_;
}
inline void MovementUpdate::_internal_set_position_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = value;
}

// float position_y = 3;
inline void MovementUpdate::clear_position_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = 0;
}
inline float MovementUpdate::position_y() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.position_y)
  return _internal_position_y();
}
inline void MovementUpdate::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.position_y)
}
inline float MovementUpdate::_internal_position_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_y_;
}
inline void MovementUpdate::_internal_set_position_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = value;
}

// float weapon_pivot_x = 4;
inline void MovementUpdate::clear_weapon_pivot_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_x_ = 0;
}
inline float MovementUpdate::weapon_pivot_x() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.weapon_pivot_x)
  return _internal_weapon_pivot_x();
}
inline void MovementUpdate::set_weapon_pivot_x(float value) {
  _internal_set_weapon_pivot_x(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.weapon_pivot_x)
}
inline float MovementUpdate::_internal_weapon_pivot_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_pivot_x_;
}
inline void MovementUpdate::_internal_set_weapon_pivot_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_x_ = value;
}

// float weapon_pivot_y = 5;
inline void MovementUpdate::clear_weapon_pivot_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_y_ = 0;
}
inline float MovementUpdate::weapon_pivot_y() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.weapon_pivot_y)
  return _internal_weapon_pivot_y();
}
inline void MovementUpdate::set_weapon_pivot_y(float value) {
  _internal_set_weapon_pivot_y(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.weapon_pivot_y)
}
inline float MovementUpdate::_internal_weapon_pivot_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_pivot_y_;
}
inline void MovementUpdate::_internal_set_weapon_pivot_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_y_ = value;
}

// float direction = 6;
inline void MovementUpdate::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline float MovementUpdate::direction() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.direction)
  return _internal_direction();
}
inline void MovementUpdate::set_direction(float value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.direction)
}
inline float MovementUpdate::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.direction_;
}
inline void MovementUpdate::_internal_set_direction(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// bool attack = 7;
inline void MovementUpdate::clear_attack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attack_ = false;
}
inline bool MovementUpdate::attack() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.attack)
  return _internal_attack();
}
inline void MovementUpdate::set_attack(bool value) {
  _internal_set_attack(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.attack)
}
inline bool MovementUpdate::_internal_attack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attack_;
}
inline void MovementUpdate::_internal_set_attack(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attack_ = value;
}

// .comm.Room curr_room = 8;
inline bool MovementUpdate::has_curr_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.curr_room_ != nullptr);
  return value;
}
inline void MovementUpdate::clear_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.curr_room_ != nullptr) _impl_.curr_room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::comm::Room& MovementUpdate::_internal_curr_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Room* p = _impl_.curr_room_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Room&>(::comm::_Room_default_instance_);
}
inline const ::comm::Room& MovementUpdate::curr_room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.curr_room)
  return _internal_curr_room();
}
inline void MovementUpdate::unsafe_arena_set_allocated_curr_room(::comm::Room* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.curr_room_);
  }
  _impl_.curr_room_ = reinterpret_cast<::comm::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.MovementUpdate.curr_room)
}
inline ::comm::Room* MovementUpdate::release_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Room* released = _impl_.curr_room_;
  _impl_.curr_room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Room* MovementUpdate::unsafe_arena_release_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.MovementUpdate.curr_room)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Room* temp = _impl_.curr_room_;
  _impl_.curr_room_ = nullptr;
  return temp;
}
inline ::comm::Room* MovementUpdate::_internal_mutable_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.curr_room_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Room>(GetArena());
    _impl_.curr_room_ = reinterpret_cast<::comm::Room*>(p);
  }
  return _impl_.curr_room_;
}
inline ::comm::Room* MovementUpdate::mutable_curr_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::comm::Room* _msg = _internal_mutable_curr_room();
  // @@protoc_insertion_point(field_mutable:comm.MovementUpdate.curr_room)
  return _msg;
}
inline void MovementUpdate::set_allocated_curr_room(::comm::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.curr_room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.curr_room_ = reinterpret_cast<::comm::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.MovementUpdate.curr_room)
}

// -------------------------------------------------------------------

// Player

// uint32 id = 1;
inline void Player::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t Player::id() const {
  // @@protoc_insertion_point(field_get:comm.Player.id)
  return _internal_id();
}
inline void Player::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:comm.Player.id)
}
inline ::uint32_t Player::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Player::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// repeated .comm.Item items = 2;
inline int Player::_internal_items_size() const {
  return _internal_items().size();
}
inline int Player::items_size() const {
  return _internal_items_size();
}
inline void Player::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::comm::Item* Player::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:comm.Player.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::comm::Item>* Player::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.Player.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::comm::Item& Player::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.Player.items)
  return _internal_items().Get(index);
}
inline ::comm::Item* Player::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::comm::Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:comm.Player.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Item>& Player::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.Player.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Item>&
Player::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::comm::Item>*
Player::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// float position_x = 3;
inline void Player::clear_position_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = 0;
}
inline float Player::position_x() const {
  // @@protoc_insertion_point(field_get:comm.Player.position_x)
  return _internal_position_x();
}
inline void Player::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:comm.Player.position_x)
}
inline float Player::_internal_position_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_x_;
}
inline void Player::_internal_set_position_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = value;
}

// float position_y = 4;
inline void Player::clear_position_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = 0;
}
inline float Player::position_y() const {
  // @@protoc_insertion_point(field_get:comm.Player.position_y)
  return _internal_position_y();
}
inline void Player::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:comm.Player.position_y)
}
inline float Player::_internal_position_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_y_;
}
inline void Player::_internal_set_position_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = value;
}

// double player_attack_damage = 5;
inline void Player::clear_player_attack_damage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_attack_damage_ = 0;
}
inline double Player::player_attack_damage() const {
  // @@protoc_insertion_point(field_get:comm.Player.player_attack_damage)
  return _internal_player_attack_damage();
}
inline void Player::set_player_attack_damage(double value) {
  _internal_set_player_attack_damage(value);
  // @@protoc_insertion_point(field_set:comm.Player.player_attack_damage)
}
inline double Player::_internal_player_attack_damage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_attack_damage_;
}
inline void Player::_internal_set_player_attack_damage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_attack_damage_ = value;
}

// -------------------------------------------------------------------

// Item

// uint32 id = 1;
inline void Item::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t Item::id() const {
  // @@protoc_insertion_point(field_get:comm.Item.id)
  return _internal_id();
}
inline void Item::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:comm.Item.id)
}
inline ::uint32_t Item::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Item::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// uint32 gen = 2;
inline void Item::clear_gen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gen_ = 0u;
}
inline ::uint32_t Item::gen() const {
  // @@protoc_insertion_point(field_get:comm.Item.gen)
  return _internal_gen();
}
inline void Item::set_gen(::uint32_t value) {
  _internal_set_gen(value);
  // @@protoc_insertion_point(field_set:comm.Item.gen)
}
inline ::uint32_t Item::_internal_gen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gen_;
}
inline void Item::_internal_set_gen(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gen_ = value;
}

// .comm.ItemType type = 3;
inline void Item::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::comm::ItemType Item::type() const {
  // @@protoc_insertion_point(field_get:comm.Item.type)
  return _internal_type();
}
inline void Item::set_type(::comm::ItemType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:comm.Item.type)
}
inline ::comm::ItemType Item::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::comm::ItemType>(_impl_.type_);
}
inline void Item::_internal_set_type(::comm::ItemType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// InitialInfo

// .comm.Player player = 1;
inline bool InitialInfo::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void InitialInfo::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::comm::Player& InitialInfo::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Player&>(::comm::_Player_default_instance_);
}
inline const ::comm::Player& InitialInfo::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.InitialInfo.player)
  return _internal_player();
}
inline void InitialInfo::unsafe_arena_set_allocated_player(::comm::Player* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::comm::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.InitialInfo.player)
}
inline ::comm::Player* InitialInfo::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Player* InitialInfo::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.InitialInfo.player)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::comm::Player* InitialInfo::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::comm::Player*>(p);
  }
  return _impl_.player_;
}
inline ::comm::Player* InitialInfo::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::comm::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:comm.InitialInfo.player)
  return _msg;
}
inline void InitialInfo::set_allocated_player(::comm::Player* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.player_ = reinterpret_cast<::comm::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.InitialInfo.player)
}

// int64 seed = 2;
inline void InitialInfo::clear_seed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = ::int64_t{0};
}
inline ::int64_t InitialInfo::seed() const {
  // @@protoc_insertion_point(field_get:comm.InitialInfo.seed)
  return _internal_seed();
}
inline void InitialInfo::set_seed(::int64_t value) {
  _internal_set_seed(value);
  // @@protoc_insertion_point(field_set:comm.InitialInfo.seed)
}
inline ::int64_t InitialInfo::_internal_seed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_;
}
inline void InitialInfo::_internal_set_seed(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = value;
}

// .comm.Item next_item = 3;
inline bool InitialInfo::has_next_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.next_item_ != nullptr);
  return value;
}
inline void InitialInfo::clear_next_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.next_item_ != nullptr) _impl_.next_item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::comm::Item& InitialInfo::_internal_next_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Item* p = _impl_.next_item_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Item&>(::comm::_Item_default_instance_);
}
inline const ::comm::Item& InitialInfo::next_item() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.InitialInfo.next_item)
  return _internal_next_item();
}
inline void InitialInfo::unsafe_arena_set_allocated_next_item(::comm::Item* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.next_item_);
  }
  _impl_.next_item_ = reinterpret_cast<::comm::Item*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.InitialInfo.next_item)
}
inline ::comm::Item* InitialInfo::release_next_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::Item* released = _impl_.next_item_;
  _impl_.next_item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Item* InitialInfo::unsafe_arena_release_next_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.InitialInfo.next_item)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::Item* temp = _impl_.next_item_;
  _impl_.next_item_ = nullptr;
  return temp;
}
inline ::comm::Item* InitialInfo::_internal_mutable_next_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.next_item_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Item>(GetArena());
    _impl_.next_item_ = reinterpret_cast<::comm::Item*>(p);
  }
  return _impl_.next_item_;
}
inline ::comm::Item* InitialInfo::mutable_next_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::comm::Item* _msg = _internal_mutable_next_item();
  // @@protoc_insertion_point(field_mutable:comm.InitialInfo.next_item)
  return _msg;
}
inline void InitialInfo::set_allocated_next_item(::comm::Item* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.next_item_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.next_item_ = reinterpret_cast<::comm::Item*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.InitialInfo.next_item)
}

// repeated .comm.Player connected_players = 4;
inline int InitialInfo::_internal_connected_players_size() const {
  return _internal_connected_players().size();
}
inline int InitialInfo::connected_players_size() const {
  return _internal_connected_players_size();
}
inline void InitialInfo::clear_connected_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connected_players_.Clear();
}
inline ::comm::Player* InitialInfo::mutable_connected_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:comm.InitialInfo.connected_players)
  return _internal_mutable_connected_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::comm::Player>* InitialInfo::mutable_connected_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.InitialInfo.connected_players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_connected_players();
}
inline const ::comm::Player& InitialInfo::connected_players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.InitialInfo.connected_players)
  return _internal_connected_players().Get(index);
}
inline ::comm::Player* InitialInfo::add_connected_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::comm::Player* _add = _internal_mutable_connected_players()->Add();
  // @@protoc_insertion_point(field_add:comm.InitialInfo.connected_players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Player>& InitialInfo::connected_players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.InitialInfo.connected_players)
  return _internal_connected_players();
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Player>&
InitialInfo::_internal_connected_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connected_players_;
}
inline ::google::protobuf::RepeatedPtrField<::comm::Player>*
InitialInfo::_internal_mutable_connected_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.connected_players_;
}

// -------------------------------------------------------------------

// Room

// int32 x = 1;
inline void Room::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t Room::x() const {
  // @@protoc_insertion_point(field_get:comm.Room.x)
  return _internal_x();
}
inline void Room::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:comm.Room.x)
}
inline ::int32_t Room::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Room::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 2;
inline void Room::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline ::int32_t Room::y() const {
  // @@protoc_insertion_point(field_get:comm.Room.y)
  return _internal_y();
}
inline void Room::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:comm.Room.y)
}
inline ::int32_t Room::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Room::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// Obstacle

// int32 left = 1;
inline void Obstacle::clear_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.left_ = 0;
}
inline ::int32_t Obstacle::left() const {
  // @@protoc_insertion_point(field_get:comm.Obstacle.left)
  return _internal_left();
}
inline void Obstacle::set_left(::int32_t value) {
  _internal_set_left(value);
  // @@protoc_insertion_point(field_set:comm.Obstacle.left)
}
inline ::int32_t Obstacle::_internal_left() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.left_;
}
inline void Obstacle::_internal_set_left(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.left_ = value;
}

// int32 top = 2;
inline void Obstacle::clear_top() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_ = 0;
}
inline ::int32_t Obstacle::top() const {
  // @@protoc_insertion_point(field_get:comm.Obstacle.top)
  return _internal_top();
}
inline void Obstacle::set_top(::int32_t value) {
  _internal_set_top(value);
  // @@protoc_insertion_point(field_set:comm.Obstacle.top)
}
inline ::int32_t Obstacle::_internal_top() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.top_;
}
inline void Obstacle::_internal_set_top(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_ = value;
}

// -------------------------------------------------------------------

// Enemy

// uint32 id = 1;
inline void Enemy::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t Enemy::id() const {
  // @@protoc_insertion_point(field_get:comm.Enemy.id)
  return _internal_id();
}
inline void Enemy::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:comm.Enemy.id)
}
inline ::uint32_t Enemy::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Enemy::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// float position_x = 2;
inline void Enemy::clear_position_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = 0;
}
inline float Enemy::position_x() const {
  // @@protoc_insertion_point(field_get:comm.Enemy.position_x)
  return _internal_position_x();
}
inline void Enemy::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:comm.Enemy.position_x)
}
inline float Enemy::_internal_position_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_x_;
}
inline void Enemy::_internal_set_position_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = value;
}

// float position_y = 3;
inline void Enemy::clear_position_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = 0;
}
inline float Enemy::position_y() const {
  // @@protoc_insertion_point(field_get:comm.Enemy.position_y)
  return _internal_position_y();
}
inline void Enemy::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:comm.Enemy.position_y)
}
inline float Enemy::_internal_position_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_y_;
}
inline void Enemy::_internal_set_position_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = value;
}

// string type = 4;
inline void Enemy::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& Enemy::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.Enemy.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Enemy::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:comm.Enemy.type)
}
inline std::string* Enemy::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:comm.Enemy.type)
  return _s;
}
inline const std::string& Enemy::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Enemy::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* Enemy::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* Enemy::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.Enemy.type)
  return _impl_.type_.Release();
}
inline void Enemy::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:comm.Enemy.type)
}

// string name = 5;
inline void Enemy::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Enemy::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.Enemy.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Enemy::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:comm.Enemy.name)
}
inline std::string* Enemy::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:comm.Enemy.name)
  return _s;
}
inline const std::string& Enemy::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Enemy::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Enemy::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Enemy::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.Enemy.name)
  return _impl_.name_.Release();
}
inline void Enemy::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:comm.Enemy.name)
}

// double hp = 6;
inline void Enemy::clear_hp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hp_ = 0;
}
inline double Enemy::hp() const {
  // @@protoc_insertion_point(field_get:comm.Enemy.hp)
  return _internal_hp();
}
inline void Enemy::set_hp(double value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:comm.Enemy.hp)
}
inline double Enemy::_internal_hp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hp_;
}
inline void Enemy::_internal_set_hp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hp_ = value;
}

// double damage = 7;
inline void Enemy::clear_damage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damage_ = 0;
}
inline double Enemy::damage() const {
  // @@protoc_insertion_point(field_get:comm.Enemy.damage)
  return _internal_damage();
}
inline void Enemy::set_damage(double value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:comm.Enemy.damage)
}
inline double Enemy::_internal_damage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.damage_;
}
inline void Enemy::_internal_set_damage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damage_ = value;
}

// .comm.TextureData texture_data = 8;
inline bool Enemy::has_texture_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.texture_data_ != nullptr);
  return value;
}
inline void Enemy::clear_texture_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.texture_data_ != nullptr) _impl_.texture_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::comm::TextureData& Enemy::_internal_texture_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::TextureData* p = _impl_.texture_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::TextureData&>(::comm::_TextureData_default_instance_);
}
inline const ::comm::TextureData& Enemy::texture_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.Enemy.texture_data)
  return _internal_texture_data();
}
inline void Enemy::unsafe_arena_set_allocated_texture_data(::comm::TextureData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.texture_data_);
  }
  _impl_.texture_data_ = reinterpret_cast<::comm::TextureData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.Enemy.texture_data)
}
inline ::comm::TextureData* Enemy::release_texture_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::TextureData* released = _impl_.texture_data_;
  _impl_.texture_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::TextureData* Enemy::unsafe_arena_release_texture_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.Enemy.texture_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::TextureData* temp = _impl_.texture_data_;
  _impl_.texture_data_ = nullptr;
  return temp;
}
inline ::comm::TextureData* Enemy::_internal_mutable_texture_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.texture_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::TextureData>(GetArena());
    _impl_.texture_data_ = reinterpret_cast<::comm::TextureData*>(p);
  }
  return _impl_.texture_data_;
}
inline ::comm::TextureData* Enemy::mutable_texture_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::comm::TextureData* _msg = _internal_mutable_texture_data();
  // @@protoc_insertion_point(field_mutable:comm.Enemy.texture_data)
  return _msg;
}
inline void Enemy::set_allocated_texture_data(::comm::TextureData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.texture_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.texture_data_ = reinterpret_cast<::comm::TextureData*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.Enemy.texture_data)
}

// .comm.CollisionData collision_data = 9;
inline bool Enemy::has_collision_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.collision_data_ != nullptr);
  return value;
}
inline void Enemy::clear_collision_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.collision_data_ != nullptr) _impl_.collision_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::comm::CollisionData& Enemy::_internal_collision_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::CollisionData* p = _impl_.collision_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::CollisionData&>(::comm::_CollisionData_default_instance_);
}
inline const ::comm::CollisionData& Enemy::collision_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.Enemy.collision_data)
  return _internal_collision_data();
}
inline void Enemy::unsafe_arena_set_allocated_collision_data(::comm::CollisionData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.collision_data_);
  }
  _impl_.collision_data_ = reinterpret_cast<::comm::CollisionData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.Enemy.collision_data)
}
inline ::comm::CollisionData* Enemy::release_collision_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::CollisionData* released = _impl_.collision_data_;
  _impl_.collision_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::CollisionData* Enemy::unsafe_arena_release_collision_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.Enemy.collision_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::CollisionData* temp = _impl_.collision_data_;
  _impl_.collision_data_ = nullptr;
  return temp;
}
inline ::comm::CollisionData* Enemy::_internal_mutable_collision_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.collision_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::CollisionData>(GetArena());
    _impl_.collision_data_ = reinterpret_cast<::comm::CollisionData*>(p);
  }
  return _impl_.collision_data_;
}
inline ::comm::CollisionData* Enemy::mutable_collision_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::comm::CollisionData* _msg = _internal_mutable_collision_data();
  // @@protoc_insertion_point(field_mutable:comm.Enemy.collision_data)
  return _msg;
}
inline void Enemy::set_allocated_collision_data(::comm::CollisionData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.collision_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.collision_data_ = reinterpret_cast<::comm::CollisionData*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.Enemy.collision_data)
}

// -------------------------------------------------------------------

// TextureData

// uint32 tile_id = 1;
inline void TextureData::clear_tile_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_id_ = 0u;
}
inline ::uint32_t TextureData::tile_id() const {
  // @@protoc_insertion_point(field_get:comm.TextureData.tile_id)
  return _internal_tile_id();
}
inline void TextureData::set_tile_id(::uint32_t value) {
  _internal_set_tile_id(value);
  // @@protoc_insertion_point(field_set:comm.TextureData.tile_id)
}
inline ::uint32_t TextureData::_internal_tile_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tile_id_;
}
inline void TextureData::_internal_set_tile_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_id_ = value;
}

// string tile_set = 2;
inline void TextureData::clear_tile_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_set_.ClearToEmpty();
}
inline const std::string& TextureData::tile_set() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.TextureData.tile_set)
  return _internal_tile_set();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TextureData::set_tile_set(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_set_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:comm.TextureData.tile_set)
}
inline std::string* TextureData::mutable_tile_set() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tile_set();
  // @@protoc_insertion_point(field_mutable:comm.TextureData.tile_set)
  return _s;
}
inline const std::string& TextureData::_internal_tile_set() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tile_set_.Get();
}
inline void TextureData::_internal_set_tile_set(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_set_.Set(value, GetArena());
}
inline std::string* TextureData::_internal_mutable_tile_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tile_set_.Mutable( GetArena());
}
inline std::string* TextureData::release_tile_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.TextureData.tile_set)
  return _impl_.tile_set_.Release();
}
inline void TextureData::set_allocated_tile_set(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_set_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tile_set_.IsDefault()) {
          _impl_.tile_set_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:comm.TextureData.tile_set)
}

// int32 tile_layer = 3;
inline void TextureData::clear_tile_layer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_layer_ = 0;
}
inline ::int32_t TextureData::tile_layer() const {
  // @@protoc_insertion_point(field_get:comm.TextureData.tile_layer)
  return _internal_tile_layer();
}
inline void TextureData::set_tile_layer(::int32_t value) {
  _internal_set_tile_layer(value);
  // @@protoc_insertion_point(field_set:comm.TextureData.tile_layer)
}
inline ::int32_t TextureData::_internal_tile_layer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tile_layer_;
}
inline void TextureData::_internal_set_tile_layer(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tile_layer_ = value;
}

// -------------------------------------------------------------------

// CollisionData

// int32 type = 1;
inline void CollisionData::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::int32_t CollisionData::type() const {
  // @@protoc_insertion_point(field_get:comm.CollisionData.type)
  return _internal_type();
}
inline void CollisionData::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:comm.CollisionData.type)
}
inline ::int32_t CollisionData::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void CollisionData::_internal_set_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// float width = 2;
inline void CollisionData::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
}
inline float CollisionData::width() const {
  // @@protoc_insertion_point(field_get:comm.CollisionData.width)
  return _internal_width();
}
inline void CollisionData::set_width(float value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:comm.CollisionData.width)
}
inline float CollisionData::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void CollisionData::_internal_set_width(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// float height = 3;
inline void CollisionData::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
}
inline float CollisionData::height() const {
  // @@protoc_insertion_point(field_get:comm.CollisionData.height)
  return _internal_height();
}
inline void CollisionData::set_height(float value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:comm.CollisionData.height)
}
inline float CollisionData::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void CollisionData::_internal_set_height(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// float x_offset = 4;
inline void CollisionData::clear_x_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_offset_ = 0;
}
inline float CollisionData::x_offset() const {
  // @@protoc_insertion_point(field_get:comm.CollisionData.x_offset)
  return _internal_x_offset();
}
inline void CollisionData::set_x_offset(float value) {
  _internal_set_x_offset(value);
  // @@protoc_insertion_point(field_set:comm.CollisionData.x_offset)
}
inline float CollisionData::_internal_x_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_offset_;
}
inline void CollisionData::_internal_set_x_offset(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_offset_ = value;
}

// float y_offset = 5;
inline void CollisionData::clear_y_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_offset_ = 0;
}
inline float CollisionData::y_offset() const {
  // @@protoc_insertion_point(field_get:comm.CollisionData.y_offset)
  return _internal_y_offset();
}
inline void CollisionData::set_y_offset(float value) {
  _internal_set_y_offset(value);
  // @@protoc_insertion_point(field_set:comm.CollisionData.y_offset)
}
inline float CollisionData::_internal_y_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_offset_;
}
inline void CollisionData::_internal_set_y_offset(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_offset_ = value;
}

// -------------------------------------------------------------------

// EnemyGotHitUpdate

// uint32 player_id = 1;
inline void EnemyGotHitUpdate::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0u;
}
inline ::uint32_t EnemyGotHitUpdate::player_id() const {
  // @@protoc_insertion_point(field_get:comm.EnemyGotHitUpdate.player_id)
  return _internal_player_id();
}
inline void EnemyGotHitUpdate::set_player_id(::uint32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:comm.EnemyGotHitUpdate.player_id)
}
inline ::uint32_t EnemyGotHitUpdate::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void EnemyGotHitUpdate::_internal_set_player_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// uint32 enemy_id = 2;
inline void EnemyGotHitUpdate::clear_enemy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enemy_id_ = 0u;
}
inline ::uint32_t EnemyGotHitUpdate::enemy_id() const {
  // @@protoc_insertion_point(field_get:comm.EnemyGotHitUpdate.enemy_id)
  return _internal_enemy_id();
}
inline void EnemyGotHitUpdate::set_enemy_id(::uint32_t value) {
  _internal_set_enemy_id(value);
  // @@protoc_insertion_point(field_set:comm.EnemyGotHitUpdate.enemy_id)
}
inline ::uint32_t EnemyGotHitUpdate::_internal_enemy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enemy_id_;
}
inline void EnemyGotHitUpdate::_internal_set_enemy_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enemy_id_ = value;
}

// -------------------------------------------------------------------

// EnemyPositionsUpdate

// repeated .comm.Enemy enemy_positions = 1;
inline int EnemyPositionsUpdate::_internal_enemy_positions_size() const {
  return _internal_enemy_positions().size();
}
inline int EnemyPositionsUpdate::enemy_positions_size() const {
  return _internal_enemy_positions_size();
}
inline void EnemyPositionsUpdate::clear_enemy_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enemy_positions_.Clear();
}
inline ::comm::Enemy* EnemyPositionsUpdate::mutable_enemy_positions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:comm.EnemyPositionsUpdate.enemy_positions)
  return _internal_mutable_enemy_positions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::comm::Enemy>* EnemyPositionsUpdate::mutable_enemy_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.EnemyPositionsUpdate.enemy_positions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_enemy_positions();
}
inline const ::comm::Enemy& EnemyPositionsUpdate::enemy_positions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.EnemyPositionsUpdate.enemy_positions)
  return _internal_enemy_positions().Get(index);
}
inline ::comm::Enemy* EnemyPositionsUpdate::add_enemy_positions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::comm::Enemy* _add = _internal_mutable_enemy_positions()->Add();
  // @@protoc_insertion_point(field_add:comm.EnemyPositionsUpdate.enemy_positions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Enemy>& EnemyPositionsUpdate::enemy_positions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.EnemyPositionsUpdate.enemy_positions)
  return _internal_enemy_positions();
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Enemy>&
EnemyPositionsUpdate::_internal_enemy_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enemy_positions_;
}
inline ::google::protobuf::RepeatedPtrField<::comm::Enemy>*
EnemyPositionsUpdate::_internal_mutable_enemy_positions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.enemy_positions_;
}

// -------------------------------------------------------------------

// MapPositionsUpdate

// repeated .comm.Player players = 1;
inline int MapPositionsUpdate::_internal_players_size() const {
  return _internal_players().size();
}
inline int MapPositionsUpdate::players_size() const {
  return _internal_players_size();
}
inline void MapPositionsUpdate::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline ::comm::Player* MapPositionsUpdate::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:comm.MapPositionsUpdate.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::comm::Player>* MapPositionsUpdate::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.MapPositionsUpdate.players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_players();
}
inline const ::comm::Player& MapPositionsUpdate::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.MapPositionsUpdate.players)
  return _internal_players().Get(index);
}
inline ::comm::Player* MapPositionsUpdate::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::comm::Player* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:comm.MapPositionsUpdate.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Player>& MapPositionsUpdate::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.MapPositionsUpdate.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Player>&
MapPositionsUpdate::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::comm::Player>*
MapPositionsUpdate::_internal_mutable_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.players_;
}

// repeated .comm.Enemy enemies = 2;
inline int MapPositionsUpdate::_internal_enemies_size() const {
  return _internal_enemies().size();
}
inline int MapPositionsUpdate::enemies_size() const {
  return _internal_enemies_size();
}
inline void MapPositionsUpdate::clear_enemies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enemies_.Clear();
}
inline ::comm::Enemy* MapPositionsUpdate::mutable_enemies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:comm.MapPositionsUpdate.enemies)
  return _internal_mutable_enemies()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::comm::Enemy>* MapPositionsUpdate::mutable_enemies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.MapPositionsUpdate.enemies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_enemies();
}
inline const ::comm::Enemy& MapPositionsUpdate::enemies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.MapPositionsUpdate.enemies)
  return _internal_enemies().Get(index);
}
inline ::comm::Enemy* MapPositionsUpdate::add_enemies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::comm::Enemy* _add = _internal_mutable_enemies()->Add();
  // @@protoc_insertion_point(field_add:comm.MapPositionsUpdate.enemies)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Enemy>& MapPositionsUpdate::enemies() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.MapPositionsUpdate.enemies)
  return _internal_enemies();
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Enemy>&
MapPositionsUpdate::_internal_enemies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enemies_;
}
inline ::google::protobuf::RepeatedPtrField<::comm::Enemy>*
MapPositionsUpdate::_internal_mutable_enemies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.enemies_;
}

// -------------------------------------------------------------------

// MapDimensionsUpdate

// repeated .comm.Obstacle obstacles = 1;
inline int MapDimensionsUpdate::_internal_obstacles_size() const {
  return _internal_obstacles().size();
}
inline int MapDimensionsUpdate::obstacles_size() const {
  return _internal_obstacles_size();
}
inline void MapDimensionsUpdate::clear_obstacles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.obstacles_.Clear();
}
inline ::comm::Obstacle* MapDimensionsUpdate::mutable_obstacles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:comm.MapDimensionsUpdate.obstacles)
  return _internal_mutable_obstacles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::comm::Obstacle>* MapDimensionsUpdate::mutable_obstacles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.MapDimensionsUpdate.obstacles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_obstacles();
}
inline const ::comm::Obstacle& MapDimensionsUpdate::obstacles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.MapDimensionsUpdate.obstacles)
  return _internal_obstacles().Get(index);
}
inline ::comm::Obstacle* MapDimensionsUpdate::add_obstacles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::comm::Obstacle* _add = _internal_mutable_obstacles()->Add();
  // @@protoc_insertion_point(field_add:comm.MapDimensionsUpdate.obstacles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Obstacle>& MapDimensionsUpdate::obstacles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.MapDimensionsUpdate.obstacles)
  return _internal_obstacles();
}
inline const ::google::protobuf::RepeatedPtrField<::comm::Obstacle>&
MapDimensionsUpdate::_internal_obstacles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.obstacles_;
}
inline ::google::protobuf::RepeatedPtrField<::comm::Obstacle>*
MapDimensionsUpdate::_internal_mutable_obstacles() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.obstacles_;
}

// -------------------------------------------------------------------

// SpawningEnemiesResponse

// repeated uint32 enemy_id = 1;
inline int SpawningEnemiesResponse::_internal_enemy_id_size() const {
  return _internal_enemy_id().size();
}
inline int SpawningEnemiesResponse::enemy_id_size() const {
  return _internal_enemy_id_size();
}
inline void SpawningEnemiesResponse::clear_enemy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enemy_id_.Clear();
}
inline ::uint32_t SpawningEnemiesResponse::enemy_id(int index) const {
  // @@protoc_insertion_point(field_get:comm.SpawningEnemiesResponse.enemy_id)
  return _internal_enemy_id().Get(index);
}
inline void SpawningEnemiesResponse::set_enemy_id(int index, ::uint32_t value) {
  _internal_mutable_enemy_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:comm.SpawningEnemiesResponse.enemy_id)
}
inline void SpawningEnemiesResponse::add_enemy_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_enemy_id()->Add(value);
  // @@protoc_insertion_point(field_add:comm.SpawningEnemiesResponse.enemy_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SpawningEnemiesResponse::enemy_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.SpawningEnemiesResponse.enemy_id)
  return _internal_enemy_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SpawningEnemiesResponse::mutable_enemy_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.SpawningEnemiesResponse.enemy_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_enemy_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
SpawningEnemiesResponse::_internal_enemy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enemy_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SpawningEnemiesResponse::_internal_mutable_enemy_id() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.enemy_id_;
}

// -------------------------------------------------------------------

// BytePrefix

// uint32 bytes = 1;
inline void BytePrefix::clear_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_ = 0u;
}
inline ::uint32_t BytePrefix::bytes() const {
  // @@protoc_insertion_point(field_get:comm.BytePrefix.bytes)
  return _internal_bytes();
}
inline void BytePrefix::set_bytes(::uint32_t value) {
  _internal_set_bytes(value);
  // @@protoc_insertion_point(field_set:comm.BytePrefix.bytes)
}
inline ::uint32_t BytePrefix::_internal_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_;
}
inline void BytePrefix::_internal_set_bytes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_ = value;
}

// -------------------------------------------------------------------

// StateUpdate

// .comm.Player player = 1;
inline bool StateUpdate::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void StateUpdate::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::comm::Player& StateUpdate::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Player&>(::comm::_Player_default_instance_);
}
inline const ::comm::Player& StateUpdate::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.player)
  return _internal_player();
}
inline void StateUpdate::unsafe_arena_set_allocated_player(::comm::Player* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::comm::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.player)
}
inline ::comm::Player* StateUpdate::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Player* StateUpdate::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.player)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::comm::Player* StateUpdate::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::comm::Player*>(p);
  }
  return _impl_.player_;
}
inline ::comm::Player* StateUpdate::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::comm::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.player)
  return _msg;
}
inline void StateUpdate::set_allocated_player(::comm::Player* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.player_ = reinterpret_cast<::comm::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.player)
}

// .comm.Item item = 2;
inline bool StateUpdate::has_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.item_ != nullptr);
  return value;
}
inline void StateUpdate::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.item_ != nullptr) _impl_.item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::comm::Item& StateUpdate::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Item* p = _impl_.item_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Item&>(::comm::_Item_default_instance_);
}
inline const ::comm::Item& StateUpdate::item() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.item)
  return _internal_item();
}
inline void StateUpdate::unsafe_arena_set_allocated_item(::comm::Item* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.item_);
  }
  _impl_.item_ = reinterpret_cast<::comm::Item*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.item)
}
inline ::comm::Item* StateUpdate::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::Item* released = _impl_.item_;
  _impl_.item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Item* StateUpdate::unsafe_arena_release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.item)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::Item* temp = _impl_.item_;
  _impl_.item_ = nullptr;
  return temp;
}
inline ::comm::Item* StateUpdate::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.item_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Item>(GetArena());
    _impl_.item_ = reinterpret_cast<::comm::Item*>(p);
  }
  return _impl_.item_;
}
inline ::comm::Item* StateUpdate::mutable_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::comm::Item* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.item)
  return _msg;
}
inline void StateUpdate::set_allocated_item(::comm::Item* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.item_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.item_ = reinterpret_cast<::comm::Item*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.item)
}

// .comm.StateVariant variant = 3;
inline void StateUpdate::clear_variant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variant_ = 0;
}
inline ::comm::StateVariant StateUpdate::variant() const {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.variant)
  return _internal_variant();
}
inline void StateUpdate::set_variant(::comm::StateVariant value) {
  _internal_set_variant(value);
  // @@protoc_insertion_point(field_set:comm.StateUpdate.variant)
}
inline ::comm::StateVariant StateUpdate::_internal_variant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::comm::StateVariant>(_impl_.variant_);
}
inline void StateUpdate::_internal_set_variant(::comm::StateVariant value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variant_ = value;
}

// .comm.Room room = 4;
inline bool StateUpdate::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline void StateUpdate::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::comm::Room& StateUpdate::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Room* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Room&>(::comm::_Room_default_instance_);
}
inline const ::comm::Room& StateUpdate::room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.room)
  return _internal_room();
}
inline void StateUpdate::unsafe_arena_set_allocated_room(::comm::Room* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::comm::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.room)
}
inline ::comm::Room* StateUpdate::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::comm::Room* released = _impl_.room_;
  _impl_.room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Room* StateUpdate::unsafe_arena_release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.room)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::comm::Room* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::comm::Room* StateUpdate::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Room>(GetArena());
    _impl_.room_ = reinterpret_cast<::comm::Room*>(p);
  }
  return _impl_.room_;
}
inline ::comm::Room* StateUpdate::mutable_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::comm::Room* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.room)
  return _msg;
}
inline void StateUpdate::set_allocated_room(::comm::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.room_ = reinterpret_cast<::comm::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.room)
}

// .comm.MapPositionsUpdate map_positions_update = 5;
inline bool StateUpdate::has_map_positions_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_positions_update_ != nullptr);
  return value;
}
inline void StateUpdate::clear_map_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_positions_update_ != nullptr) _impl_.map_positions_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::comm::MapPositionsUpdate& StateUpdate::_internal_map_positions_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::MapPositionsUpdate* p = _impl_.map_positions_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::MapPositionsUpdate&>(::comm::_MapPositionsUpdate_default_instance_);
}
inline const ::comm::MapPositionsUpdate& StateUpdate::map_positions_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.map_positions_update)
  return _internal_map_positions_update();
}
inline void StateUpdate::unsafe_arena_set_allocated_map_positions_update(::comm::MapPositionsUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_positions_update_);
  }
  _impl_.map_positions_update_ = reinterpret_cast<::comm::MapPositionsUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.map_positions_update)
}
inline ::comm::MapPositionsUpdate* StateUpdate::release_map_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::comm::MapPositionsUpdate* released = _impl_.map_positions_update_;
  _impl_.map_positions_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::MapPositionsUpdate* StateUpdate::unsafe_arena_release_map_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.map_positions_update)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::comm::MapPositionsUpdate* temp = _impl_.map_positions_update_;
  _impl_.map_positions_update_ = nullptr;
  return temp;
}
inline ::comm::MapPositionsUpdate* StateUpdate::_internal_mutable_map_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_positions_update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::MapPositionsUpdate>(GetArena());
    _impl_.map_positions_update_ = reinterpret_cast<::comm::MapPositionsUpdate*>(p);
  }
  return _impl_.map_positions_update_;
}
inline ::comm::MapPositionsUpdate* StateUpdate::mutable_map_positions_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::comm::MapPositionsUpdate* _msg = _internal_mutable_map_positions_update();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.map_positions_update)
  return _msg;
}
inline void StateUpdate::set_allocated_map_positions_update(::comm::MapPositionsUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.map_positions_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.map_positions_update_ = reinterpret_cast<::comm::MapPositionsUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.map_positions_update)
}

// .comm.MovementUpdate movement_update = 6;
inline bool StateUpdate::has_movement_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.movement_update_ != nullptr);
  return value;
}
inline void StateUpdate::clear_movement_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.movement_update_ != nullptr) _impl_.movement_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::comm::MovementUpdate& StateUpdate::_internal_movement_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::MovementUpdate* p = _impl_.movement_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::MovementUpdate&>(::comm::_MovementUpdate_default_instance_);
}
inline const ::comm::MovementUpdate& StateUpdate::movement_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.movement_update)
  return _internal_movement_update();
}
inline void StateUpdate::unsafe_arena_set_allocated_movement_update(::comm::MovementUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.movement_update_);
  }
  _impl_.movement_update_ = reinterpret_cast<::comm::MovementUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.movement_update)
}
inline ::comm::MovementUpdate* StateUpdate::release_movement_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::comm::MovementUpdate* released = _impl_.movement_update_;
  _impl_.movement_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::MovementUpdate* StateUpdate::unsafe_arena_release_movement_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.movement_update)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::comm::MovementUpdate* temp = _impl_.movement_update_;
  _impl_.movement_update_ = nullptr;
  return temp;
}
inline ::comm::MovementUpdate* StateUpdate::_internal_mutable_movement_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.movement_update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::MovementUpdate>(GetArena());
    _impl_.movement_update_ = reinterpret_cast<::comm::MovementUpdate*>(p);
  }
  return _impl_.movement_update_;
}
inline ::comm::MovementUpdate* StateUpdate::mutable_movement_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::comm::MovementUpdate* _msg = _internal_mutable_movement_update();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.movement_update)
  return _msg;
}
inline void StateUpdate::set_allocated_movement_update(::comm::MovementUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.movement_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.movement_update_ = reinterpret_cast<::comm::MovementUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.movement_update)
}

// .comm.EnemyPositionsUpdate enemy_positions_update = 7;
inline bool StateUpdate::has_enemy_positions_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.enemy_positions_update_ != nullptr);
  return value;
}
inline void StateUpdate::clear_enemy_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enemy_positions_update_ != nullptr) _impl_.enemy_positions_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::comm::EnemyPositionsUpdate& StateUpdate::_internal_enemy_positions_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::EnemyPositionsUpdate* p = _impl_.enemy_positions_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::EnemyPositionsUpdate&>(::comm::_EnemyPositionsUpdate_default_instance_);
}
inline const ::comm::EnemyPositionsUpdate& StateUpdate::enemy_positions_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.enemy_positions_update)
  return _internal_enemy_positions_update();
}
inline void StateUpdate::unsafe_arena_set_allocated_enemy_positions_update(::comm::EnemyPositionsUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enemy_positions_update_);
  }
  _impl_.enemy_positions_update_ = reinterpret_cast<::comm::EnemyPositionsUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.enemy_positions_update)
}
inline ::comm::EnemyPositionsUpdate* StateUpdate::release_enemy_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::comm::EnemyPositionsUpdate* released = _impl_.enemy_positions_update_;
  _impl_.enemy_positions_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::EnemyPositionsUpdate* StateUpdate::unsafe_arena_release_enemy_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.enemy_positions_update)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::comm::EnemyPositionsUpdate* temp = _impl_.enemy_positions_update_;
  _impl_.enemy_positions_update_ = nullptr;
  return temp;
}
inline ::comm::EnemyPositionsUpdate* StateUpdate::_internal_mutable_enemy_positions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enemy_positions_update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::EnemyPositionsUpdate>(GetArena());
    _impl_.enemy_positions_update_ = reinterpret_cast<::comm::EnemyPositionsUpdate*>(p);
  }
  return _impl_.enemy_positions_update_;
}
inline ::comm::EnemyPositionsUpdate* StateUpdate::mutable_enemy_positions_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::comm::EnemyPositionsUpdate* _msg = _internal_mutable_enemy_positions_update();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.enemy_positions_update)
  return _msg;
}
inline void StateUpdate::set_allocated_enemy_positions_update(::comm::EnemyPositionsUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.enemy_positions_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.enemy_positions_update_ = reinterpret_cast<::comm::EnemyPositionsUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.enemy_positions_update)
}

// .comm.MapDimensionsUpdate map_dimensions_update = 8;
inline bool StateUpdate::has_map_dimensions_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.map_dimensions_update_ != nullptr);
  return value;
}
inline void StateUpdate::clear_map_dimensions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_dimensions_update_ != nullptr) _impl_.map_dimensions_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::comm::MapDimensionsUpdate& StateUpdate::_internal_map_dimensions_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::MapDimensionsUpdate* p = _impl_.map_dimensions_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::MapDimensionsUpdate&>(::comm::_MapDimensionsUpdate_default_instance_);
}
inline const ::comm::MapDimensionsUpdate& StateUpdate::map_dimensions_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.map_dimensions_update)
  return _internal_map_dimensions_update();
}
inline void StateUpdate::unsafe_arena_set_allocated_map_dimensions_update(::comm::MapDimensionsUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.map_dimensions_update_);
  }
  _impl_.map_dimensions_update_ = reinterpret_cast<::comm::MapDimensionsUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.map_dimensions_update)
}
inline ::comm::MapDimensionsUpdate* StateUpdate::release_map_dimensions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::comm::MapDimensionsUpdate* released = _impl_.map_dimensions_update_;
  _impl_.map_dimensions_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::MapDimensionsUpdate* StateUpdate::unsafe_arena_release_map_dimensions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.map_dimensions_update)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::comm::MapDimensionsUpdate* temp = _impl_.map_dimensions_update_;
  _impl_.map_dimensions_update_ = nullptr;
  return temp;
}
inline ::comm::MapDimensionsUpdate* StateUpdate::_internal_mutable_map_dimensions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.map_dimensions_update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::MapDimensionsUpdate>(GetArena());
    _impl_.map_dimensions_update_ = reinterpret_cast<::comm::MapDimensionsUpdate*>(p);
  }
  return _impl_.map_dimensions_update_;
}
inline ::comm::MapDimensionsUpdate* StateUpdate::mutable_map_dimensions_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::comm::MapDimensionsUpdate* _msg = _internal_mutable_map_dimensions_update();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.map_dimensions_update)
  return _msg;
}
inline void StateUpdate::set_allocated_map_dimensions_update(::comm::MapDimensionsUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.map_dimensions_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.map_dimensions_update_ = reinterpret_cast<::comm::MapDimensionsUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.map_dimensions_update)
}

// .comm.EnemyGotHitUpdate enemy_got_hit_update = 9;
inline bool StateUpdate::has_enemy_got_hit_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.enemy_got_hit_update_ != nullptr);
  return value;
}
inline void StateUpdate::clear_enemy_got_hit_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enemy_got_hit_update_ != nullptr) _impl_.enemy_got_hit_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::comm::EnemyGotHitUpdate& StateUpdate::_internal_enemy_got_hit_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::EnemyGotHitUpdate* p = _impl_.enemy_got_hit_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::EnemyGotHitUpdate&>(::comm::_EnemyGotHitUpdate_default_instance_);
}
inline const ::comm::EnemyGotHitUpdate& StateUpdate::enemy_got_hit_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.enemy_got_hit_update)
  return _internal_enemy_got_hit_update();
}
inline void StateUpdate::unsafe_arena_set_allocated_enemy_got_hit_update(::comm::EnemyGotHitUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enemy_got_hit_update_);
  }
  _impl_.enemy_got_hit_update_ = reinterpret_cast<::comm::EnemyGotHitUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.enemy_got_hit_update)
}
inline ::comm::EnemyGotHitUpdate* StateUpdate::release_enemy_got_hit_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::comm::EnemyGotHitUpdate* released = _impl_.enemy_got_hit_update_;
  _impl_.enemy_got_hit_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::EnemyGotHitUpdate* StateUpdate::unsafe_arena_release_enemy_got_hit_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.enemy_got_hit_update)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::comm::EnemyGotHitUpdate* temp = _impl_.enemy_got_hit_update_;
  _impl_.enemy_got_hit_update_ = nullptr;
  return temp;
}
inline ::comm::EnemyGotHitUpdate* StateUpdate::_internal_mutable_enemy_got_hit_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enemy_got_hit_update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::EnemyGotHitUpdate>(GetArena());
    _impl_.enemy_got_hit_update_ = reinterpret_cast<::comm::EnemyGotHitUpdate*>(p);
  }
  return _impl_.enemy_got_hit_update_;
}
inline ::comm::EnemyGotHitUpdate* StateUpdate::mutable_enemy_got_hit_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::comm::EnemyGotHitUpdate* _msg = _internal_mutable_enemy_got_hit_update();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.enemy_got_hit_update)
  return _msg;
}
inline void StateUpdate::set_allocated_enemy_got_hit_update(::comm::EnemyGotHitUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.enemy_got_hit_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.enemy_got_hit_update_ = reinterpret_cast<::comm::EnemyGotHitUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.enemy_got_hit_update)
}

// bytes compressed_map_dimensions_update = 10;
inline void StateUpdate::clear_compressed_map_dimensions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compressed_map_dimensions_update_.ClearToEmpty();
}
inline const std::string& StateUpdate::compressed_map_dimensions_update() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.compressed_map_dimensions_update)
  return _internal_compressed_map_dimensions_update();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StateUpdate::set_compressed_map_dimensions_update(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compressed_map_dimensions_update_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:comm.StateUpdate.compressed_map_dimensions_update)
}
inline std::string* StateUpdate::mutable_compressed_map_dimensions_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_compressed_map_dimensions_update();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.compressed_map_dimensions_update)
  return _s;
}
inline const std::string& StateUpdate::_internal_compressed_map_dimensions_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compressed_map_dimensions_update_.Get();
}
inline void StateUpdate::_internal_set_compressed_map_dimensions_update(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compressed_map_dimensions_update_.Set(value, GetArena());
}
inline std::string* StateUpdate::_internal_mutable_compressed_map_dimensions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.compressed_map_dimensions_update_.Mutable( GetArena());
}
inline std::string* StateUpdate::release_compressed_map_dimensions_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.compressed_map_dimensions_update)
  return _impl_.compressed_map_dimensions_update_.Release();
}
inline void StateUpdate::set_allocated_compressed_map_dimensions_update(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compressed_map_dimensions_update_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.compressed_map_dimensions_update_.IsDefault()) {
          _impl_.compressed_map_dimensions_update_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.compressed_map_dimensions_update)
}

// -------------------------------------------------------------------

// StateUpdateSeries

// repeated .comm.StateUpdate updates = 1;
inline int StateUpdateSeries::_internal_updates_size() const {
  return _internal_updates().size();
}
inline int StateUpdateSeries::updates_size() const {
  return _internal_updates_size();
}
inline void StateUpdateSeries::clear_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updates_.Clear();
}
inline ::comm::StateUpdate* StateUpdateSeries::mutable_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:comm.StateUpdateSeries.updates)
  return _internal_mutable_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>* StateUpdateSeries::mutable_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:comm.StateUpdateSeries.updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_updates();
}
inline const ::comm::StateUpdate& StateUpdateSeries::updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdateSeries.updates)
  return _internal_updates().Get(index);
}
inline ::comm::StateUpdate* StateUpdateSeries::add_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::comm::StateUpdate* _add = _internal_mutable_updates()->Add();
  // @@protoc_insertion_point(field_add:comm.StateUpdateSeries.updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>& StateUpdateSeries::updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:comm.StateUpdateSeries.updates)
  return _internal_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>&
StateUpdateSeries::_internal_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updates_;
}
inline ::google::protobuf::RepeatedPtrField<::comm::StateUpdate>*
StateUpdateSeries::_internal_mutable_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.updates_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace comm


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::comm::StateVariant> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::comm::StateVariant>() {
  return ::comm::StateVariant_descriptor();
}
template <>
struct is_proto_enum<::comm::ItemType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::comm::ItemType>() {
  return ::comm::ItemType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh
