// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: comm.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_comm_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_comm_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_comm_2eproto;
namespace comm {
class BytePrefix;
struct BytePrefixDefaultTypeInternal;
extern BytePrefixDefaultTypeInternal _BytePrefix_default_instance_;
class InitialInfo;
struct InitialInfoDefaultTypeInternal;
extern InitialInfoDefaultTypeInternal _InitialInfo_default_instance_;
class MovementUpdate;
struct MovementUpdateDefaultTypeInternal;
extern MovementUpdateDefaultTypeInternal _MovementUpdate_default_instance_;
class Player;
struct PlayerDefaultTypeInternal;
extern PlayerDefaultTypeInternal _Player_default_instance_;
class Room;
struct RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
class StateUpdate;
struct StateUpdateDefaultTypeInternal;
extern StateUpdateDefaultTypeInternal _StateUpdate_default_instance_;
class Weapon;
struct WeaponDefaultTypeInternal;
extern WeaponDefaultTypeInternal _Weapon_default_instance_;
}  // namespace comm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace comm {
enum StateVariant : int {
  NONE = 0,
  CONNECTED = 1,
  DISCONNECTED = 2,
  ROOM_CHANGED = 3,
  StateVariant_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StateVariant_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StateVariant_IsValid(int value);
extern const uint32_t StateVariant_internal_data_[];
constexpr StateVariant StateVariant_MIN = static_cast<StateVariant>(0);
constexpr StateVariant StateVariant_MAX = static_cast<StateVariant>(3);
constexpr int StateVariant_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
StateVariant_descriptor();
template <typename T>
const std::string& StateVariant_Name(T value) {
  static_assert(std::is_same<T, StateVariant>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StateVariant_Name().");
  return StateVariant_Name(static_cast<StateVariant>(value));
}
template <>
inline const std::string& StateVariant_Name(StateVariant value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StateVariant_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool StateVariant_Parse(absl::string_view name, StateVariant* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateVariant>(
      StateVariant_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Weapon final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Weapon) */ {
 public:
  inline Weapon() : Weapon(nullptr) {}
  ~Weapon() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Weapon(
      ::google::protobuf::internal::ConstantInitialized);

  inline Weapon(const Weapon& from) : Weapon(nullptr, from) {}
  inline Weapon(Weapon&& from) noexcept
      : Weapon(nullptr, std::move(from)) {}
  inline Weapon& operator=(const Weapon& from) {
    CopyFrom(from);
    return *this;
  }
  inline Weapon& operator=(Weapon&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Weapon& default_instance() {
    return *internal_default_instance();
  }
  static inline const Weapon* internal_default_instance() {
    return reinterpret_cast<const Weapon*>(
        &_Weapon_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Weapon& a, Weapon& b) { a.Swap(&b); }
  inline void Swap(Weapon* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Weapon* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Weapon* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Weapon>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Weapon& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Weapon& from) { Weapon::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Weapon* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Weapon"; }

 protected:
  explicit Weapon(::google::protobuf::Arena* arena);
  Weapon(::google::protobuf::Arena* arena, const Weapon& from);
  Weapon(::google::protobuf::Arena* arena, Weapon&& from) noexcept
      : Weapon(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Weapon)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Weapon_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Weapon& from_msg);
    ::uint32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class Room final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Room) */ {
 public:
  inline Room() : Room(nullptr) {}
  ~Room() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Room(
      ::google::protobuf::internal::ConstantInitialized);

  inline Room(const Room& from) : Room(nullptr, from) {}
  inline Room(Room&& from) noexcept
      : Room(nullptr, std::move(from)) {}
  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline Room& operator=(Room&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Room& default_instance() {
    return *internal_default_instance();
  }
  static inline const Room* internal_default_instance() {
    return reinterpret_cast<const Room*>(
        &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Room& a, Room& b) { a.Swap(&b); }
  inline void Swap(Room* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Room* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Room* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Room& from) { Room::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Room* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Room"; }

 protected:
  explicit Room(::google::protobuf::Arena* arena);
  Room(::google::protobuf::Arena* arena, const Room& from);
  Room(::google::protobuf::Arena* arena, Room&& from) noexcept
      : Room(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // int32 x = 1;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 2;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Room)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Room_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Room& from_msg);
    ::int32_t x_;
    ::int32_t y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class InitialInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.InitialInfo) */ {
 public:
  inline InitialInfo() : InitialInfo(nullptr) {}
  ~InitialInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InitialInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline InitialInfo(const InitialInfo& from) : InitialInfo(nullptr, from) {}
  inline InitialInfo(InitialInfo&& from) noexcept
      : InitialInfo(nullptr, std::move(from)) {}
  inline InitialInfo& operator=(const InitialInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitialInfo& operator=(InitialInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitialInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitialInfo* internal_default_instance() {
    return reinterpret_cast<const InitialInfo*>(
        &_InitialInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(InitialInfo& a, InitialInfo& b) { a.Swap(&b); }
  inline void Swap(InitialInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitialInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitialInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InitialInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitialInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InitialInfo& from) { InitialInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InitialInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.InitialInfo"; }

 protected:
  explicit InitialInfo(::google::protobuf::Arena* arena);
  InitialInfo(::google::protobuf::Arena* arena, const InitialInfo& from);
  InitialInfo(::google::protobuf::Arena* arena, InitialInfo&& from) noexcept
      : InitialInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kWeaponIdFieldNumber = 2,
    kSeedFieldNumber = 3,
  };
  // uint32 player_id = 1;
  void clear_player_id() ;
  ::uint32_t player_id() const;
  void set_player_id(::uint32_t value);

  private:
  ::uint32_t _internal_player_id() const;
  void _internal_set_player_id(::uint32_t value);

  public:
  // uint32 weapon_id = 2;
  void clear_weapon_id() ;
  ::uint32_t weapon_id() const;
  void set_weapon_id(::uint32_t value);

  private:
  ::uint32_t _internal_weapon_id() const;
  void _internal_set_weapon_id(::uint32_t value);

  public:
  // int64 seed = 3;
  void clear_seed() ;
  ::int64_t seed() const;
  void set_seed(::int64_t value);

  private:
  ::int64_t _internal_seed() const;
  void _internal_set_seed(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.InitialInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InitialInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InitialInfo& from_msg);
    ::uint32_t player_id_;
    ::uint32_t weapon_id_;
    ::int64_t seed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class BytePrefix final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.BytePrefix) */ {
 public:
  inline BytePrefix() : BytePrefix(nullptr) {}
  ~BytePrefix() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BytePrefix(
      ::google::protobuf::internal::ConstantInitialized);

  inline BytePrefix(const BytePrefix& from) : BytePrefix(nullptr, from) {}
  inline BytePrefix(BytePrefix&& from) noexcept
      : BytePrefix(nullptr, std::move(from)) {}
  inline BytePrefix& operator=(const BytePrefix& from) {
    CopyFrom(from);
    return *this;
  }
  inline BytePrefix& operator=(BytePrefix&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BytePrefix& default_instance() {
    return *internal_default_instance();
  }
  static inline const BytePrefix* internal_default_instance() {
    return reinterpret_cast<const BytePrefix*>(
        &_BytePrefix_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(BytePrefix& a, BytePrefix& b) { a.Swap(&b); }
  inline void Swap(BytePrefix* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BytePrefix* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BytePrefix* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BytePrefix>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BytePrefix& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BytePrefix& from) { BytePrefix::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BytePrefix* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.BytePrefix"; }

 protected:
  explicit BytePrefix(::google::protobuf::Arena* arena);
  BytePrefix(::google::protobuf::Arena* arena, const BytePrefix& from);
  BytePrefix(::google::protobuf::Arena* arena, BytePrefix&& from) noexcept
      : BytePrefix(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBytesFieldNumber = 1,
  };
  // uint32 bytes = 1;
  void clear_bytes() ;
  ::uint32_t bytes() const;
  void set_bytes(::uint32_t value);

  private:
  ::uint32_t _internal_bytes() const;
  void _internal_set_bytes(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.BytePrefix)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BytePrefix_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BytePrefix& from_msg);
    ::uint32_t bytes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class Player final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.Player) */ {
 public:
  inline Player() : Player(nullptr) {}
  ~Player() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Player(
      ::google::protobuf::internal::ConstantInitialized);

  inline Player(const Player& from) : Player(nullptr, from) {}
  inline Player(Player&& from) noexcept
      : Player(nullptr, std::move(from)) {}
  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player& operator=(Player&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Player& default_instance() {
    return *internal_default_instance();
  }
  static inline const Player* internal_default_instance() {
    return reinterpret_cast<const Player*>(
        &_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Player& a, Player& b) { a.Swap(&b); }
  inline void Swap(Player* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Player* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Player>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Player& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Player& from) { Player::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Player* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.Player"; }

 protected:
  explicit Player(::google::protobuf::Arena* arena);
  Player(::google::protobuf::Arena* arena, const Player& from);
  Player(::google::protobuf::Arena* arena, Player&& from) noexcept
      : Player(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWeaponFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .comm.Weapon weapon = 2;
  bool has_weapon() const;
  void clear_weapon() ;
  const ::comm::Weapon& weapon() const;
  PROTOBUF_NODISCARD ::comm::Weapon* release_weapon();
  ::comm::Weapon* mutable_weapon();
  void set_allocated_weapon(::comm::Weapon* value);
  void unsafe_arena_set_allocated_weapon(::comm::Weapon* value);
  ::comm::Weapon* unsafe_arena_release_weapon();

  private:
  const ::comm::Weapon& _internal_weapon() const;
  ::comm::Weapon* _internal_mutable_weapon();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:comm.Player)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Player_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Player& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::comm::Weapon* weapon_;
    ::uint32_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class MovementUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.MovementUpdate) */ {
 public:
  inline MovementUpdate() : MovementUpdate(nullptr) {}
  ~MovementUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovementUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovementUpdate(const MovementUpdate& from) : MovementUpdate(nullptr, from) {}
  inline MovementUpdate(MovementUpdate&& from) noexcept
      : MovementUpdate(nullptr, std::move(from)) {}
  inline MovementUpdate& operator=(const MovementUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovementUpdate& operator=(MovementUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovementUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovementUpdate* internal_default_instance() {
    return reinterpret_cast<const MovementUpdate*>(
        &_MovementUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MovementUpdate& a, MovementUpdate& b) { a.Swap(&b); }
  inline void Swap(MovementUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovementUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovementUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MovementUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovementUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovementUpdate& from) { MovementUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MovementUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.MovementUpdate"; }

 protected:
  explicit MovementUpdate(::google::protobuf::Arena* arena);
  MovementUpdate(::google::protobuf::Arena* arena, const MovementUpdate& from);
  MovementUpdate(::google::protobuf::Arena* arena, MovementUpdate&& from) noexcept
      : MovementUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrRoomFieldNumber = 8,
    kEntityIdFieldNumber = 1,
    kPositionXFieldNumber = 2,
    kPositionYFieldNumber = 3,
    kWeaponPivotXFieldNumber = 4,
    kWeaponPivotYFieldNumber = 5,
    kDirectionFieldNumber = 6,
    kAttackFieldNumber = 7,
  };
  // .comm.Room curr_room = 8;
  bool has_curr_room() const;
  void clear_curr_room() ;
  const ::comm::Room& curr_room() const;
  PROTOBUF_NODISCARD ::comm::Room* release_curr_room();
  ::comm::Room* mutable_curr_room();
  void set_allocated_curr_room(::comm::Room* value);
  void unsafe_arena_set_allocated_curr_room(::comm::Room* value);
  ::comm::Room* unsafe_arena_release_curr_room();

  private:
  const ::comm::Room& _internal_curr_room() const;
  ::comm::Room* _internal_mutable_curr_room();

  public:
  // uint32 entity_id = 1;
  void clear_entity_id() ;
  ::uint32_t entity_id() const;
  void set_entity_id(::uint32_t value);

  private:
  ::uint32_t _internal_entity_id() const;
  void _internal_set_entity_id(::uint32_t value);

  public:
  // float position_x = 2;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // float position_y = 3;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // float weapon_pivot_x = 4;
  void clear_weapon_pivot_x() ;
  float weapon_pivot_x() const;
  void set_weapon_pivot_x(float value);

  private:
  float _internal_weapon_pivot_x() const;
  void _internal_set_weapon_pivot_x(float value);

  public:
  // float weapon_pivot_y = 5;
  void clear_weapon_pivot_y() ;
  float weapon_pivot_y() const;
  void set_weapon_pivot_y(float value);

  private:
  float _internal_weapon_pivot_y() const;
  void _internal_set_weapon_pivot_y(float value);

  public:
  // float direction = 6;
  void clear_direction() ;
  float direction() const;
  void set_direction(float value);

  private:
  float _internal_direction() const;
  void _internal_set_direction(float value);

  public:
  // bool attack = 7;
  void clear_attack() ;
  bool attack() const;
  void set_attack(bool value);

  private:
  bool _internal_attack() const;
  void _internal_set_attack(bool value);

  public:
  // @@protoc_insertion_point(class_scope:comm.MovementUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MovementUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MovementUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::comm::Room* curr_room_;
    ::uint32_t entity_id_;
    float position_x_;
    float position_y_;
    float weapon_pivot_x_;
    float weapon_pivot_y_;
    float direction_;
    bool attack_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};
// -------------------------------------------------------------------

class StateUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:comm.StateUpdate) */ {
 public:
  inline StateUpdate() : StateUpdate(nullptr) {}
  ~StateUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateUpdate(const StateUpdate& from) : StateUpdate(nullptr, from) {}
  inline StateUpdate(StateUpdate&& from) noexcept
      : StateUpdate(nullptr, std::move(from)) {}
  inline StateUpdate& operator=(const StateUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateUpdate& operator=(StateUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateUpdate* internal_default_instance() {
    return reinterpret_cast<const StateUpdate*>(
        &_StateUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(StateUpdate& a, StateUpdate& b) { a.Swap(&b); }
  inline void Swap(StateUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StateUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateUpdate& from) { StateUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "comm.StateUpdate"; }

 protected:
  explicit StateUpdate(::google::protobuf::Arena* arena);
  StateUpdate(::google::protobuf::Arena* arena, const StateUpdate& from);
  StateUpdate(::google::protobuf::Arena* arena, StateUpdate&& from) noexcept
      : StateUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerFieldNumber = 1,
    kWeaponFieldNumber = 2,
    kRoomFieldNumber = 4,
    kVariantFieldNumber = 3,
  };
  // .comm.Player player = 1;
  bool has_player() const;
  void clear_player() ;
  const ::comm::Player& player() const;
  PROTOBUF_NODISCARD ::comm::Player* release_player();
  ::comm::Player* mutable_player();
  void set_allocated_player(::comm::Player* value);
  void unsafe_arena_set_allocated_player(::comm::Player* value);
  ::comm::Player* unsafe_arena_release_player();

  private:
  const ::comm::Player& _internal_player() const;
  ::comm::Player* _internal_mutable_player();

  public:
  // .comm.Weapon weapon = 2;
  bool has_weapon() const;
  void clear_weapon() ;
  const ::comm::Weapon& weapon() const;
  PROTOBUF_NODISCARD ::comm::Weapon* release_weapon();
  ::comm::Weapon* mutable_weapon();
  void set_allocated_weapon(::comm::Weapon* value);
  void unsafe_arena_set_allocated_weapon(::comm::Weapon* value);
  ::comm::Weapon* unsafe_arena_release_weapon();

  private:
  const ::comm::Weapon& _internal_weapon() const;
  ::comm::Weapon* _internal_mutable_weapon();

  public:
  // .comm.Room room = 4;
  bool has_room() const;
  void clear_room() ;
  const ::comm::Room& room() const;
  PROTOBUF_NODISCARD ::comm::Room* release_room();
  ::comm::Room* mutable_room();
  void set_allocated_room(::comm::Room* value);
  void unsafe_arena_set_allocated_room(::comm::Room* value);
  ::comm::Room* unsafe_arena_release_room();

  private:
  const ::comm::Room& _internal_room() const;
  ::comm::Room* _internal_mutable_room();

  public:
  // .comm.StateVariant variant = 3;
  void clear_variant() ;
  ::comm::StateVariant variant() const;
  void set_variant(::comm::StateVariant value);

  private:
  ::comm::StateVariant _internal_variant() const;
  void _internal_set_variant(::comm::StateVariant value);

  public:
  // @@protoc_insertion_point(class_scope:comm.StateUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StateUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::comm::Player* player_;
    ::comm::Weapon* weapon_;
    ::comm::Room* room_;
    int variant_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_comm_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MovementUpdate

// uint32 entity_id = 1;
inline void MovementUpdate::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = 0u;
}
inline ::uint32_t MovementUpdate::entity_id() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.entity_id)
  return _internal_entity_id();
}
inline void MovementUpdate::set_entity_id(::uint32_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.entity_id)
}
inline ::uint32_t MovementUpdate::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_;
}
inline void MovementUpdate::_internal_set_entity_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_ = value;
}

// float position_x = 2;
inline void MovementUpdate::clear_position_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = 0;
}
inline float MovementUpdate::position_x() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.position_x)
  return _internal_position_x();
}
inline void MovementUpdate::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.position_x)
}
inline float MovementUpdate::_internal_position_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_x_;
}
inline void MovementUpdate::_internal_set_position_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_x_ = value;
}

// float position_y = 3;
inline void MovementUpdate::clear_position_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = 0;
}
inline float MovementUpdate::position_y() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.position_y)
  return _internal_position_y();
}
inline void MovementUpdate::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.position_y)
}
inline float MovementUpdate::_internal_position_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_y_;
}
inline void MovementUpdate::_internal_set_position_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_y_ = value;
}

// float weapon_pivot_x = 4;
inline void MovementUpdate::clear_weapon_pivot_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_x_ = 0;
}
inline float MovementUpdate::weapon_pivot_x() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.weapon_pivot_x)
  return _internal_weapon_pivot_x();
}
inline void MovementUpdate::set_weapon_pivot_x(float value) {
  _internal_set_weapon_pivot_x(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.weapon_pivot_x)
}
inline float MovementUpdate::_internal_weapon_pivot_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_pivot_x_;
}
inline void MovementUpdate::_internal_set_weapon_pivot_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_x_ = value;
}

// float weapon_pivot_y = 5;
inline void MovementUpdate::clear_weapon_pivot_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_y_ = 0;
}
inline float MovementUpdate::weapon_pivot_y() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.weapon_pivot_y)
  return _internal_weapon_pivot_y();
}
inline void MovementUpdate::set_weapon_pivot_y(float value) {
  _internal_set_weapon_pivot_y(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.weapon_pivot_y)
}
inline float MovementUpdate::_internal_weapon_pivot_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_pivot_y_;
}
inline void MovementUpdate::_internal_set_weapon_pivot_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_pivot_y_ = value;
}

// float direction = 6;
inline void MovementUpdate::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline float MovementUpdate::direction() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.direction)
  return _internal_direction();
}
inline void MovementUpdate::set_direction(float value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.direction)
}
inline float MovementUpdate::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.direction_;
}
inline void MovementUpdate::_internal_set_direction(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// bool attack = 7;
inline void MovementUpdate::clear_attack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attack_ = false;
}
inline bool MovementUpdate::attack() const {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.attack)
  return _internal_attack();
}
inline void MovementUpdate::set_attack(bool value) {
  _internal_set_attack(value);
  // @@protoc_insertion_point(field_set:comm.MovementUpdate.attack)
}
inline bool MovementUpdate::_internal_attack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attack_;
}
inline void MovementUpdate::_internal_set_attack(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attack_ = value;
}

// .comm.Room curr_room = 8;
inline bool MovementUpdate::has_curr_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.curr_room_ != nullptr);
  return value;
}
inline void MovementUpdate::clear_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.curr_room_ != nullptr) _impl_.curr_room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::comm::Room& MovementUpdate::_internal_curr_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Room* p = _impl_.curr_room_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Room&>(::comm::_Room_default_instance_);
}
inline const ::comm::Room& MovementUpdate::curr_room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.MovementUpdate.curr_room)
  return _internal_curr_room();
}
inline void MovementUpdate::unsafe_arena_set_allocated_curr_room(::comm::Room* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.curr_room_);
  }
  _impl_.curr_room_ = reinterpret_cast<::comm::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.MovementUpdate.curr_room)
}
inline ::comm::Room* MovementUpdate::release_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Room* released = _impl_.curr_room_;
  _impl_.curr_room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Room* MovementUpdate::unsafe_arena_release_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.MovementUpdate.curr_room)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Room* temp = _impl_.curr_room_;
  _impl_.curr_room_ = nullptr;
  return temp;
}
inline ::comm::Room* MovementUpdate::_internal_mutable_curr_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.curr_room_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Room>(GetArena());
    _impl_.curr_room_ = reinterpret_cast<::comm::Room*>(p);
  }
  return _impl_.curr_room_;
}
inline ::comm::Room* MovementUpdate::mutable_curr_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::comm::Room* _msg = _internal_mutable_curr_room();
  // @@protoc_insertion_point(field_mutable:comm.MovementUpdate.curr_room)
  return _msg;
}
inline void MovementUpdate::set_allocated_curr_room(::comm::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.curr_room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.curr_room_ = reinterpret_cast<::comm::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.MovementUpdate.curr_room)
}

// -------------------------------------------------------------------

// Player

// uint32 id = 1;
inline void Player::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t Player::id() const {
  // @@protoc_insertion_point(field_get:comm.Player.id)
  return _internal_id();
}
inline void Player::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:comm.Player.id)
}
inline ::uint32_t Player::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Player::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .comm.Weapon weapon = 2;
inline bool Player::has_weapon() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.weapon_ != nullptr);
  return value;
}
inline void Player::clear_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.weapon_ != nullptr) _impl_.weapon_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::comm::Weapon& Player::_internal_weapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Weapon* p = _impl_.weapon_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Weapon&>(::comm::_Weapon_default_instance_);
}
inline const ::comm::Weapon& Player::weapon() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.Player.weapon)
  return _internal_weapon();
}
inline void Player::unsafe_arena_set_allocated_weapon(::comm::Weapon* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.weapon_);
  }
  _impl_.weapon_ = reinterpret_cast<::comm::Weapon*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.Player.weapon)
}
inline ::comm::Weapon* Player::release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Weapon* released = _impl_.weapon_;
  _impl_.weapon_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Weapon* Player::unsafe_arena_release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.Player.weapon)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Weapon* temp = _impl_.weapon_;
  _impl_.weapon_ = nullptr;
  return temp;
}
inline ::comm::Weapon* Player::_internal_mutable_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.weapon_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Weapon>(GetArena());
    _impl_.weapon_ = reinterpret_cast<::comm::Weapon*>(p);
  }
  return _impl_.weapon_;
}
inline ::comm::Weapon* Player::mutable_weapon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::comm::Weapon* _msg = _internal_mutable_weapon();
  // @@protoc_insertion_point(field_mutable:comm.Player.weapon)
  return _msg;
}
inline void Player::set_allocated_weapon(::comm::Weapon* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.weapon_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.weapon_ = reinterpret_cast<::comm::Weapon*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.Player.weapon)
}

// -------------------------------------------------------------------

// Weapon

// uint32 id = 1;
inline void Weapon::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t Weapon::id() const {
  // @@protoc_insertion_point(field_get:comm.Weapon.id)
  return _internal_id();
}
inline void Weapon::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:comm.Weapon.id)
}
inline ::uint32_t Weapon::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Weapon::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// InitialInfo

// uint32 player_id = 1;
inline void InitialInfo::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = 0u;
}
inline ::uint32_t InitialInfo::player_id() const {
  // @@protoc_insertion_point(field_get:comm.InitialInfo.player_id)
  return _internal_player_id();
}
inline void InitialInfo::set_player_id(::uint32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:comm.InitialInfo.player_id)
}
inline ::uint32_t InitialInfo::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void InitialInfo::_internal_set_player_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// uint32 weapon_id = 2;
inline void InitialInfo::clear_weapon_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_id_ = 0u;
}
inline ::uint32_t InitialInfo::weapon_id() const {
  // @@protoc_insertion_point(field_get:comm.InitialInfo.weapon_id)
  return _internal_weapon_id();
}
inline void InitialInfo::set_weapon_id(::uint32_t value) {
  _internal_set_weapon_id(value);
  // @@protoc_insertion_point(field_set:comm.InitialInfo.weapon_id)
}
inline ::uint32_t InitialInfo::_internal_weapon_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_id_;
}
inline void InitialInfo::_internal_set_weapon_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_id_ = value;
}

// int64 seed = 3;
inline void InitialInfo::clear_seed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = ::int64_t{0};
}
inline ::int64_t InitialInfo::seed() const {
  // @@protoc_insertion_point(field_get:comm.InitialInfo.seed)
  return _internal_seed();
}
inline void InitialInfo::set_seed(::int64_t value) {
  _internal_set_seed(value);
  // @@protoc_insertion_point(field_set:comm.InitialInfo.seed)
}
inline ::int64_t InitialInfo::_internal_seed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_;
}
inline void InitialInfo::_internal_set_seed(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = value;
}

// -------------------------------------------------------------------

// Room

// int32 x = 1;
inline void Room::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline ::int32_t Room::x() const {
  // @@protoc_insertion_point(field_get:comm.Room.x)
  return _internal_x();
}
inline void Room::set_x(::int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:comm.Room.x)
}
inline ::int32_t Room::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Room::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 2;
inline void Room::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline ::int32_t Room::y() const {
  // @@protoc_insertion_point(field_get:comm.Room.y)
  return _internal_y();
}
inline void Room::set_y(::int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:comm.Room.y)
}
inline ::int32_t Room::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Room::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// BytePrefix

// uint32 bytes = 1;
inline void BytePrefix::clear_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_ = 0u;
}
inline ::uint32_t BytePrefix::bytes() const {
  // @@protoc_insertion_point(field_get:comm.BytePrefix.bytes)
  return _internal_bytes();
}
inline void BytePrefix::set_bytes(::uint32_t value) {
  _internal_set_bytes(value);
  // @@protoc_insertion_point(field_set:comm.BytePrefix.bytes)
}
inline ::uint32_t BytePrefix::_internal_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_;
}
inline void BytePrefix::_internal_set_bytes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_ = value;
}

// -------------------------------------------------------------------

// StateUpdate

// .comm.Player player = 1;
inline bool StateUpdate::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void StateUpdate::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::comm::Player& StateUpdate::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Player&>(::comm::_Player_default_instance_);
}
inline const ::comm::Player& StateUpdate::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.player)
  return _internal_player();
}
inline void StateUpdate::unsafe_arena_set_allocated_player(::comm::Player* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::comm::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.player)
}
inline ::comm::Player* StateUpdate::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Player* StateUpdate::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.player)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::comm::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::comm::Player* StateUpdate::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::comm::Player*>(p);
  }
  return _impl_.player_;
}
inline ::comm::Player* StateUpdate::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::comm::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.player)
  return _msg;
}
inline void StateUpdate::set_allocated_player(::comm::Player* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.player_ = reinterpret_cast<::comm::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.player)
}

// .comm.Weapon weapon = 2;
inline bool StateUpdate::has_weapon() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.weapon_ != nullptr);
  return value;
}
inline void StateUpdate::clear_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.weapon_ != nullptr) _impl_.weapon_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::comm::Weapon& StateUpdate::_internal_weapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Weapon* p = _impl_.weapon_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Weapon&>(::comm::_Weapon_default_instance_);
}
inline const ::comm::Weapon& StateUpdate::weapon() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.weapon)
  return _internal_weapon();
}
inline void StateUpdate::unsafe_arena_set_allocated_weapon(::comm::Weapon* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.weapon_);
  }
  _impl_.weapon_ = reinterpret_cast<::comm::Weapon*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.weapon)
}
inline ::comm::Weapon* StateUpdate::release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::Weapon* released = _impl_.weapon_;
  _impl_.weapon_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Weapon* StateUpdate::unsafe_arena_release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.weapon)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::comm::Weapon* temp = _impl_.weapon_;
  _impl_.weapon_ = nullptr;
  return temp;
}
inline ::comm::Weapon* StateUpdate::_internal_mutable_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.weapon_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Weapon>(GetArena());
    _impl_.weapon_ = reinterpret_cast<::comm::Weapon*>(p);
  }
  return _impl_.weapon_;
}
inline ::comm::Weapon* StateUpdate::mutable_weapon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::comm::Weapon* _msg = _internal_mutable_weapon();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.weapon)
  return _msg;
}
inline void StateUpdate::set_allocated_weapon(::comm::Weapon* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.weapon_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.weapon_ = reinterpret_cast<::comm::Weapon*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.weapon)
}

// .comm.StateVariant variant = 3;
inline void StateUpdate::clear_variant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variant_ = 0;
}
inline ::comm::StateVariant StateUpdate::variant() const {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.variant)
  return _internal_variant();
}
inline void StateUpdate::set_variant(::comm::StateVariant value) {
  _internal_set_variant(value);
  // @@protoc_insertion_point(field_set:comm.StateUpdate.variant)
}
inline ::comm::StateVariant StateUpdate::_internal_variant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::comm::StateVariant>(_impl_.variant_);
}
inline void StateUpdate::_internal_set_variant(::comm::StateVariant value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variant_ = value;
}

// .comm.Room room = 4;
inline bool StateUpdate::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline void StateUpdate::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::comm::Room& StateUpdate::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::comm::Room* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::comm::Room&>(::comm::_Room_default_instance_);
}
inline const ::comm::Room& StateUpdate::room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:comm.StateUpdate.room)
  return _internal_room();
}
inline void StateUpdate::unsafe_arena_set_allocated_room(::comm::Room* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::comm::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:comm.StateUpdate.room)
}
inline ::comm::Room* StateUpdate::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::comm::Room* released = _impl_.room_;
  _impl_.room_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::comm::Room* StateUpdate::unsafe_arena_release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:comm.StateUpdate.room)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::comm::Room* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::comm::Room* StateUpdate::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::comm::Room>(GetArena());
    _impl_.room_ = reinterpret_cast<::comm::Room*>(p);
  }
  return _impl_.room_;
}
inline ::comm::Room* StateUpdate::mutable_room() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::comm::Room* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:comm.StateUpdate.room)
  return _msg;
}
inline void StateUpdate::set_allocated_room(::comm::Room* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.room_ = reinterpret_cast<::comm::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:comm.StateUpdate.room)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace comm


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::comm::StateVariant> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::comm::StateVariant>() {
  return ::comm::StateVariant_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_comm_2eproto_2epb_2eh
