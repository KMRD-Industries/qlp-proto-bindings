// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.3
// source: comm.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StateVariant int32

const (
	StateVariant_NONE                   StateVariant = 0
	StateVariant_CONNECTED              StateVariant = 1
	StateVariant_DISCONNECTED           StateVariant = 2
	StateVariant_ROOM_CHANGED           StateVariant = 3
	StateVariant_ROOM_CLEARED           StateVariant = 4
	StateVariant_LEVEL_CHANGED          StateVariant = 5
	StateVariant_CHEST_OPENED           StateVariant = 6
	StateVariant_REQUEST_ITEM_GENERATOR StateVariant = 7
	StateVariant_ITEM_EQUIPPED          StateVariant = 8
	StateVariant_PLAYER_DIED            StateVariant = 9
	StateVariant_MAP_DIMENSIONS_UPDATE  StateVariant = 10
	StateVariant_SPAWN_ENEMY_REQUEST    StateVariant = 11
	StateVariant_ENEMY_GOT_HIT_UPDATE   StateVariant = 12
	StateVariant_ENEMY_DIED             StateVariant = 13
)

// Enum value maps for StateVariant.
var (
	StateVariant_name = map[int32]string{
		0:  "NONE",
		1:  "CONNECTED",
		2:  "DISCONNECTED",
		3:  "ROOM_CHANGED",
		4:  "ROOM_CLEARED",
		5:  "LEVEL_CHANGED",
		6:  "CHEST_OPENED",
		7:  "REQUEST_ITEM_GENERATOR",
		8:  "ITEM_EQUIPPED",
		9:  "PLAYER_DIED",
		10: "MAP_DIMENSIONS_UPDATE",
		11: "SPAWN_ENEMY_REQUEST",
		12: "ENEMY_GOT_HIT_UPDATE",
		13: "ENEMY_DIED",
	}
	StateVariant_value = map[string]int32{
		"NONE":                   0,
		"CONNECTED":              1,
		"DISCONNECTED":           2,
		"ROOM_CHANGED":           3,
		"ROOM_CLEARED":           4,
		"LEVEL_CHANGED":          5,
		"CHEST_OPENED":           6,
		"REQUEST_ITEM_GENERATOR": 7,
		"ITEM_EQUIPPED":          8,
		"PLAYER_DIED":            9,
		"MAP_DIMENSIONS_UPDATE":  10,
		"SPAWN_ENEMY_REQUEST":    11,
		"ENEMY_GOT_HIT_UPDATE":   12,
		"ENEMY_DIED":             13,
	}
)

func (x StateVariant) Enum() *StateVariant {
	p := new(StateVariant)
	*p = x
	return p
}

func (x StateVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[0].Descriptor()
}

func (StateVariant) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[0]
}

func (x StateVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateVariant.Descriptor instead.
func (StateVariant) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{0}
}

type MovementVariant int32

const (
	MovementVariant_NO_MOVEMENT            MovementVariant = 0
	MovementVariant_PLAYER_MOVEMENT_UPDATE MovementVariant = 1
	MovementVariant_MAP_UPDATE             MovementVariant = 2
)

// Enum value maps for MovementVariant.
var (
	MovementVariant_name = map[int32]string{
		0: "NO_MOVEMENT",
		1: "PLAYER_MOVEMENT_UPDATE",
		2: "MAP_UPDATE",
	}
	MovementVariant_value = map[string]int32{
		"NO_MOVEMENT":            0,
		"PLAYER_MOVEMENT_UPDATE": 1,
		"MAP_UPDATE":             2,
	}
)

func (x MovementVariant) Enum() *MovementVariant {
	p := new(MovementVariant)
	*p = x
	return p
}

func (x MovementVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[1].Descriptor()
}

func (MovementVariant) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[1]
}

func (x MovementVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementVariant.Descriptor instead.
func (MovementVariant) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{1}
}

type ItemType int32

const (
	ItemType_UNKNOWN ItemType = 0
	ItemType_WEAPON  ItemType = 1
	ItemType_ARMOUR  ItemType = 2
	ItemType_POTION  ItemType = 3
	ItemType_HELMET  ItemType = 4
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "UNKNOWN",
		1: "WEAPON",
		2: "ARMOUR",
		3: "POTION",
		4: "HELMET",
	}
	ItemType_value = map[string]int32{
		"UNKNOWN": 0,
		"WEAPON":  1,
		"ARMOUR":  2,
		"POTION":  3,
		"HELMET":  4,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_proto_enumTypes[2].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_comm_proto_enumTypes[2]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{2}
}

type StateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player                        *Player              `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Item                          *Item                `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Variant                       StateVariant         `protobuf:"varint,3,opt,name=variant,proto3,enum=comm.StateVariant" json:"variant,omitempty"`
	Room                          *Room                `protobuf:"bytes,4,opt,name=room,proto3" json:"room,omitempty"`
	EnemySpawnerPositions         []*Enemy             `protobuf:"bytes,5,rep,name=enemy_spawner_positions,json=enemySpawnerPositions,proto3" json:"enemy_spawner_positions,omitempty"`
	MapDimensionsUpdate           *MapDimensionsUpdate `protobuf:"bytes,6,opt,name=map_dimensions_update,json=mapDimensionsUpdate,proto3" json:"map_dimensions_update,omitempty"`
	EnemyId                       *Enemy               `protobuf:"bytes,7,opt,name=enemy_id,json=enemyId,proto3" json:"enemy_id,omitempty"`
	CompressedMapDimensionsUpdate []byte               `protobuf:"bytes,8,opt,name=compressed_map_dimensions_update,json=compressedMapDimensionsUpdate,proto3" json:"compressed_map_dimensions_update,omitempty"`
}

func (x *StateUpdate) Reset() {
	*x = StateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate) ProtoMessage() {}

func (x *StateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{0}
}

func (x *StateUpdate) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *StateUpdate) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *StateUpdate) GetVariant() StateVariant {
	if x != nil {
		return x.Variant
	}
	return StateVariant_NONE
}

func (x *StateUpdate) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *StateUpdate) GetEnemySpawnerPositions() []*Enemy {
	if x != nil {
		return x.EnemySpawnerPositions
	}
	return nil
}

func (x *StateUpdate) GetMapDimensionsUpdate() *MapDimensionsUpdate {
	if x != nil {
		return x.MapDimensionsUpdate
	}
	return nil
}

func (x *StateUpdate) GetEnemyId() *Enemy {
	if x != nil {
		return x.EnemyId
	}
	return nil
}

func (x *StateUpdate) GetCompressedMapDimensionsUpdate() []byte {
	if x != nil {
		return x.CompressedMapDimensionsUpdate
	}
	return nil
}

type StateUpdateSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*StateUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *StateUpdateSeries) Reset() {
	*x = StateUpdateSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdateSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdateSeries) ProtoMessage() {}

func (x *StateUpdateSeries) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdateSeries.ProtoReflect.Descriptor instead.
func (*StateUpdateSeries) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{1}
}

func (x *StateUpdateSeries) GetUpdates() []*StateUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

// sent via UDP
type MovementUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId           uint32              `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Variant            MovementVariant     `protobuf:"varint,2,opt,name=variant,proto3,enum=comm.MovementVariant" json:"variant,omitempty"`
	PositionX          float32             `protobuf:"fixed32,3,opt,name=position_x,json=positionX,proto3" json:"position_x,omitempty"`
	PositionY          float32             `protobuf:"fixed32,4,opt,name=position_y,json=positionY,proto3" json:"position_y,omitempty"`
	WeaponPivotX       float32             `protobuf:"fixed32,5,opt,name=weapon_pivot_x,json=weaponPivotX,proto3" json:"weapon_pivot_x,omitempty"`
	WeaponPivotY       float32             `protobuf:"fixed32,6,opt,name=weapon_pivot_y,json=weaponPivotY,proto3" json:"weapon_pivot_y,omitempty"`
	Direction          float32             `protobuf:"fixed32,7,opt,name=direction,proto3" json:"direction,omitempty"`
	Attack             bool                `protobuf:"varint,8,opt,name=attack,proto3" json:"attack,omitempty"`
	CurrRoom           *Room               `protobuf:"bytes,9,opt,name=curr_room,json=currRoom,proto3" json:"curr_room,omitempty"`
	EnemyPositions     []*Enemy            `protobuf:"bytes,10,rep,name=enemy_positions,json=enemyPositions,proto3" json:"enemy_positions,omitempty"`
	MapPositionsUpdate *MapPositionsUpdate `protobuf:"bytes,11,opt,name=map_positions_update,json=mapPositionsUpdate,proto3" json:"map_positions_update,omitempty"`
}

func (x *MovementUpdate) Reset() {
	*x = MovementUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovementUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementUpdate) ProtoMessage() {}

func (x *MovementUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementUpdate.ProtoReflect.Descriptor instead.
func (*MovementUpdate) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{2}
}

func (x *MovementUpdate) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *MovementUpdate) GetVariant() MovementVariant {
	if x != nil {
		return x.Variant
	}
	return MovementVariant_NO_MOVEMENT
}

func (x *MovementUpdate) GetPositionX() float32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *MovementUpdate) GetPositionY() float32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *MovementUpdate) GetWeaponPivotX() float32 {
	if x != nil {
		return x.WeaponPivotX
	}
	return 0
}

func (x *MovementUpdate) GetWeaponPivotY() float32 {
	if x != nil {
		return x.WeaponPivotY
	}
	return 0
}

func (x *MovementUpdate) GetDirection() float32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *MovementUpdate) GetAttack() bool {
	if x != nil {
		return x.Attack
	}
	return false
}

func (x *MovementUpdate) GetCurrRoom() *Room {
	if x != nil {
		return x.CurrRoom
	}
	return nil
}

func (x *MovementUpdate) GetEnemyPositions() []*Enemy {
	if x != nil {
		return x.EnemyPositions
	}
	return nil
}

func (x *MovementUpdate) GetMapPositionsUpdate() *MapPositionsUpdate {
	if x != nil {
		return x.MapPositionsUpdate
	}
	return nil
}

// sent via TCP
type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Items              []*Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	PositionX          float32 `protobuf:"fixed32,3,opt,name=position_x,json=positionX,proto3" json:"position_x,omitempty"`
	PositionY          float32 `protobuf:"fixed32,4,opt,name=position_y,json=positionY,proto3" json:"position_y,omitempty"`
	PlayerAttackDamage float64 `protobuf:"fixed64,5,opt,name=player_attack_damage,json=playerAttackDamage,proto3" json:"player_attack_damage,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{3}
}

func (x *Player) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Player) GetPositionX() float32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *Player) GetPositionY() float32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *Player) GetPlayerAttackDamage() float64 {
	if x != nil {
		return x.PlayerAttackDamage
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Gen  uint32   `protobuf:"varint,2,opt,name=gen,proto3" json:"gen,omitempty"`
	Type ItemType `protobuf:"varint,3,opt,name=type,proto3,enum=comm.ItemType" json:"type,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{4}
}

func (x *Item) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetGen() uint32 {
	if x != nil {
		return x.Gen
	}
	return 0
}

func (x *Item) GetType() ItemType {
	if x != nil {
		return x.Type
	}
	return ItemType_UNKNOWN
}

type InitialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player           *Player   `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Seed             int64     `protobuf:"varint,2,opt,name=seed,proto3" json:"seed,omitempty"`
	NextItem         *Item     `protobuf:"bytes,3,opt,name=next_item,json=nextItem,proto3" json:"next_item,omitempty"`
	ConnectedPlayers []*Player `protobuf:"bytes,4,rep,name=connected_players,json=connectedPlayers,proto3" json:"connected_players,omitempty"`
}

func (x *InitialInfo) Reset() {
	*x = InitialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialInfo) ProtoMessage() {}

func (x *InitialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialInfo.ProtoReflect.Descriptor instead.
func (*InitialInfo) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{5}
}

func (x *InitialInfo) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *InitialInfo) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *InitialInfo) GetNextItem() *Item {
	if x != nil {
		return x.NextItem
	}
	return nil
}

func (x *InitialInfo) GetConnectedPlayers() []*Player {
	if x != nil {
		return x.ConnectedPlayers
	}
	return nil
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{6}
}

func (x *Room) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Room) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type BytePrefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes uint32 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *BytePrefix) Reset() {
	*x = BytePrefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytePrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytePrefix) ProtoMessage() {}

func (x *BytePrefix) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytePrefix.ProtoReflect.Descriptor instead.
func (*BytePrefix) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{7}
}

func (x *BytePrefix) GetBytes() uint32 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

type Enemy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionX     float32        `protobuf:"fixed32,2,opt,name=position_x,json=positionX,proto3" json:"position_x,omitempty"`
	PositionY     float32        `protobuf:"fixed32,3,opt,name=position_y,json=positionY,proto3" json:"position_y,omitempty"`
	Type          string         `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Name          string         `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Hp            float64        `protobuf:"fixed64,6,opt,name=hp,proto3" json:"hp,omitempty"`
	Damage        float64        `protobuf:"fixed64,7,opt,name=damage,proto3" json:"damage,omitempty"`
	TextureData   *TextureData   `protobuf:"bytes,8,opt,name=texture_data,json=textureData,proto3" json:"texture_data,omitempty"`
	CollisionData *CollisionData `protobuf:"bytes,9,opt,name=collision_data,json=collisionData,proto3" json:"collision_data,omitempty"`
}

func (x *Enemy) Reset() {
	*x = Enemy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enemy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enemy) ProtoMessage() {}

func (x *Enemy) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enemy.ProtoReflect.Descriptor instead.
func (*Enemy) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{8}
}

func (x *Enemy) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Enemy) GetPositionX() float32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *Enemy) GetPositionY() float32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *Enemy) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Enemy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Enemy) GetHp() float64 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *Enemy) GetDamage() float64 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *Enemy) GetTextureData() *TextureData {
	if x != nil {
		return x.TextureData
	}
	return nil
}

func (x *Enemy) GetCollisionData() *CollisionData {
	if x != nil {
		return x.CollisionData
	}
	return nil
}

type Obstacle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left float32 `protobuf:"fixed32,1,opt,name=left,proto3" json:"left,omitempty"`
	Top  float32 `protobuf:"fixed32,2,opt,name=top,proto3" json:"top,omitempty"`
}

func (x *Obstacle) Reset() {
	*x = Obstacle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Obstacle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Obstacle) ProtoMessage() {}

func (x *Obstacle) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Obstacle.ProtoReflect.Descriptor instead.
func (*Obstacle) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{9}
}

func (x *Obstacle) GetLeft() float32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *Obstacle) GetTop() float32 {
	if x != nil {
		return x.Top
	}
	return 0
}

type TextureData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TileId    uint32 `protobuf:"varint,1,opt,name=tile_id,json=tileId,proto3" json:"tile_id,omitempty"`
	TileSet   string `protobuf:"bytes,2,opt,name=tile_set,json=tileSet,proto3" json:"tile_set,omitempty"`
	TileLayer int32  `protobuf:"varint,3,opt,name=tile_layer,json=tileLayer,proto3" json:"tile_layer,omitempty"`
}

func (x *TextureData) Reset() {
	*x = TextureData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextureData) ProtoMessage() {}

func (x *TextureData) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextureData.ProtoReflect.Descriptor instead.
func (*TextureData) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{10}
}

func (x *TextureData) GetTileId() uint32 {
	if x != nil {
		return x.TileId
	}
	return 0
}

func (x *TextureData) GetTileSet() string {
	if x != nil {
		return x.TileSet
	}
	return ""
}

func (x *TextureData) GetTileLayer() int32 {
	if x != nil {
		return x.TileLayer
	}
	return 0
}

type CollisionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Width   float32 `protobuf:"fixed32,2,opt,name=width,proto3" json:"width,omitempty"`
	Height  float32 `protobuf:"fixed32,3,opt,name=height,proto3" json:"height,omitempty"`
	XOffset float32 `protobuf:"fixed32,4,opt,name=x_offset,json=xOffset,proto3" json:"x_offset,omitempty"`
	YOffset float32 `protobuf:"fixed32,5,opt,name=y_offset,json=yOffset,proto3" json:"y_offset,omitempty"`
}

func (x *CollisionData) Reset() {
	*x = CollisionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollisionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollisionData) ProtoMessage() {}

func (x *CollisionData) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollisionData.ProtoReflect.Descriptor instead.
func (*CollisionData) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{11}
}

func (x *CollisionData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CollisionData) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CollisionData) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CollisionData) GetXOffset() float32 {
	if x != nil {
		return x.XOffset
	}
	return 0
}

func (x *CollisionData) GetYOffset() float32 {
	if x != nil {
		return x.YOffset
	}
	return 0
}

type MapPositionsUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	Enemies []*Enemy  `protobuf:"bytes,2,rep,name=enemies,proto3" json:"enemies,omitempty"`
}

func (x *MapPositionsUpdate) Reset() {
	*x = MapPositionsUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapPositionsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPositionsUpdate) ProtoMessage() {}

func (x *MapPositionsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPositionsUpdate.ProtoReflect.Descriptor instead.
func (*MapPositionsUpdate) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{12}
}

func (x *MapPositionsUpdate) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *MapPositionsUpdate) GetEnemies() []*Enemy {
	if x != nil {
		return x.Enemies
	}
	return nil
}

type MapDimensionsUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Obstacles []*Obstacle `protobuf:"bytes,1,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
}

func (x *MapDimensionsUpdate) Reset() {
	*x = MapDimensionsUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapDimensionsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapDimensionsUpdate) ProtoMessage() {}

func (x *MapDimensionsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_comm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapDimensionsUpdate.ProtoReflect.Descriptor instead.
func (*MapDimensionsUpdate) Descriptor() ([]byte, []int) {
	return file_comm_proto_rawDescGZIP(), []int{13}
}

func (x *MapDimensionsUpdate) GetObstacles() []*Obstacle {
	if x != nil {
		return x.Obstacles
	}
	return nil
}

var File_comm_proto protoreflect.FileDescriptor

var file_comm_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f,
	0x6d, 0x6d, 0x22, 0xa6, 0x03, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x43, 0x0a, 0x17, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x5f,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45,
	0x6e, 0x65, 0x6d, 0x79, 0x52, 0x15, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x53, 0x70, 0x61, 0x77, 0x6e,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x6d,
	0x61, 0x70, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x13, 0x6d, 0x61, 0x70, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x65, 0x6e,
	0x65, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x65, 0x6d, 0x79,
	0x49, 0x64, 0x12, 0x47, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1d, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x40, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x2b, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xc9, 0x03,
	0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x24, 0x0a, 0x0e,
	0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50, 0x69, 0x76, 0x6f,
	0x74, 0x58, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x76,
	0x6f, 0x74, 0x5f, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x59, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x27,
	0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x34, 0x0a, 0x0f, 0x65, 0x6e, 0x65, 0x6d, 0x79,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x52, 0x0e, 0x65,
	0x6e, 0x65, 0x6d, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a,
	0x14, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x6d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x06, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x59, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x65, 0x6e,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6e,
	0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x22, 0x22, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x22, 0x0a, 0x0a, 0x42, 0x79, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x05, 0x45,
	0x6e, 0x65, 0x6d, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x59, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x68, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x74, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x08, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x22, 0x60, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c,
	0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x69, 0x6c, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6c,
	0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x79, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x79, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x63, 0x0a, 0x12, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x25, 0x0a, 0x07, 0x65, 0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c,
	0x65, 0x52, 0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x2a, 0xa0, 0x02, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4f,
	0x4f, 0x4d, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x48, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44, 0x10,
	0x06, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x08,
	0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x49, 0x45, 0x44, 0x10,
	0x09, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x50, 0x5f, 0x44, 0x49, 0x4d, 0x45, 0x4e, 0x53, 0x49,
	0x4f, 0x4e, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x50, 0x41, 0x57, 0x4e, 0x5f, 0x45, 0x4e, 0x45, 0x4d, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e, 0x45, 0x4d, 0x59, 0x5f, 0x47,
	0x4f, 0x54, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0c, 0x12,
	0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x45, 0x4d, 0x59, 0x5f, 0x44, 0x49, 0x45, 0x44, 0x10, 0x0d, 0x2a,
	0x4e, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4d, 0x4f,
	0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x50, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x2a,
	0x47, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x41, 0x50,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x52, 0x4d, 0x4f, 0x55, 0x52, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x48, 0x45, 0x4c, 0x4d, 0x45, 0x54, 0x10, 0x04, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6d, 0x72, 0x64, 0x2d, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x71, 0x6c, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comm_proto_rawDescOnce sync.Once
	file_comm_proto_rawDescData = file_comm_proto_rawDesc
)

func file_comm_proto_rawDescGZIP() []byte {
	file_comm_proto_rawDescOnce.Do(func() {
		file_comm_proto_rawDescData = protoimpl.X.CompressGZIP(file_comm_proto_rawDescData)
	})
	return file_comm_proto_rawDescData
}

var file_comm_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_comm_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_comm_proto_goTypes = []any{
	(StateVariant)(0),           // 0: comm.StateVariant
	(MovementVariant)(0),        // 1: comm.MovementVariant
	(ItemType)(0),               // 2: comm.ItemType
	(*StateUpdate)(nil),         // 3: comm.StateUpdate
	(*StateUpdateSeries)(nil),   // 4: comm.StateUpdateSeries
	(*MovementUpdate)(nil),      // 5: comm.MovementUpdate
	(*Player)(nil),              // 6: comm.Player
	(*Item)(nil),                // 7: comm.Item
	(*InitialInfo)(nil),         // 8: comm.InitialInfo
	(*Room)(nil),                // 9: comm.Room
	(*BytePrefix)(nil),          // 10: comm.BytePrefix
	(*Enemy)(nil),               // 11: comm.Enemy
	(*Obstacle)(nil),            // 12: comm.Obstacle
	(*TextureData)(nil),         // 13: comm.TextureData
	(*CollisionData)(nil),       // 14: comm.CollisionData
	(*MapPositionsUpdate)(nil),  // 15: comm.MapPositionsUpdate
	(*MapDimensionsUpdate)(nil), // 16: comm.MapDimensionsUpdate
}
var file_comm_proto_depIdxs = []int32{
	6,  // 0: comm.StateUpdate.player:type_name -> comm.Player
	7,  // 1: comm.StateUpdate.item:type_name -> comm.Item
	0,  // 2: comm.StateUpdate.variant:type_name -> comm.StateVariant
	9,  // 3: comm.StateUpdate.room:type_name -> comm.Room
	11, // 4: comm.StateUpdate.enemy_spawner_positions:type_name -> comm.Enemy
	16, // 5: comm.StateUpdate.map_dimensions_update:type_name -> comm.MapDimensionsUpdate
	11, // 6: comm.StateUpdate.enemy_id:type_name -> comm.Enemy
	3,  // 7: comm.StateUpdateSeries.updates:type_name -> comm.StateUpdate
	1,  // 8: comm.MovementUpdate.variant:type_name -> comm.MovementVariant
	9,  // 9: comm.MovementUpdate.curr_room:type_name -> comm.Room
	11, // 10: comm.MovementUpdate.enemy_positions:type_name -> comm.Enemy
	15, // 11: comm.MovementUpdate.map_positions_update:type_name -> comm.MapPositionsUpdate
	7,  // 12: comm.Player.items:type_name -> comm.Item
	2,  // 13: comm.Item.type:type_name -> comm.ItemType
	6,  // 14: comm.InitialInfo.player:type_name -> comm.Player
	7,  // 15: comm.InitialInfo.next_item:type_name -> comm.Item
	6,  // 16: comm.InitialInfo.connected_players:type_name -> comm.Player
	13, // 17: comm.Enemy.texture_data:type_name -> comm.TextureData
	14, // 18: comm.Enemy.collision_data:type_name -> comm.CollisionData
	6,  // 19: comm.MapPositionsUpdate.players:type_name -> comm.Player
	11, // 20: comm.MapPositionsUpdate.enemies:type_name -> comm.Enemy
	12, // 21: comm.MapDimensionsUpdate.obstacles:type_name -> comm.Obstacle
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_comm_proto_init() }
func file_comm_proto_init() {
	if File_comm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comm_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*StateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*StateUpdateSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MovementUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*InitialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BytePrefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Enemy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Obstacle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TextureData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CollisionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MapPositionsUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MapDimensionsUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comm_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_comm_proto_goTypes,
		DependencyIndexes: file_comm_proto_depIdxs,
		EnumInfos:         file_comm_proto_enumTypes,
		MessageInfos:      file_comm_proto_msgTypes,
	}.Build()
	File_comm_proto = out.File
	file_comm_proto_rawDesc = nil
	file_comm_proto_goTypes = nil
	file_comm_proto_depIdxs = nil
}
